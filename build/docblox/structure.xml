<?xml version="1.0" encoding="utf-8"?>
<project version="0.18.1" title="">
  <file path="function.php" hash="8dc332c198842cff0379e5047a6803e6">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file function.php</error>
    </parse_markers>
    <function namespace="default" line="8" package="Default">
      <name>test</name>
      <type>function</type>
      <docblock line="3">
        <description><![CDATA[Processes the checksum]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="3" name="param" description="" type="integer" variable="$num">
          <type by_reference="false">integer</type>
        </tag>
        <tag line="3" name="return" description="" type="\number">
          <type by_reference="false">\number</type>
        </tag>
      </docblock>
      <argument line="8">
        <name>$num</name>
        <default><![CDATA[]]></default>
        <type/>
      </argument>
    </function>
  </file>
  <file path="phpRack/layout/index.phtml" hash="e4253632459e23622d72873550863a61">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/layout/index.phtml</error>
    </parse_markers>
    <include line="74" type="Include">
      <name>/layout/index.js</name>
    </include>
  </file>
  <file path="phpRack/layout/login.phtml" hash="312d019834fd0955fc16decc077bab50">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/layout/login.phtml</error>
    </parse_markers>
    <include line="34" type="Require Once">
      <name>/Runner/Auth.php</name>
    </include>
  </file>
  <file path="phpRack/layout/layout.phtml" hash="05e3271b4fabe53d8695e7d46c298240">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/layout/layout.phtml</error>
    </parse_markers>
    <include line="45" type="Include">
      <name>/layout/jquery-1.4.2.min.js</name>
    </include>
  </file>
  <file path="phpRack/Result.php" hash="c807a27e6cc63d3dc4fffa2b58bf6c57">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Result.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Test.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Test" refers="\phpRack_Test"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="41" package="Tests">
      <name>phpRack_Result</name>
      <full_name>\phpRack_Result</full_name>
      <extends/>
      <docblock line="35">
        <description><![CDATA[Result of a test execution]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="package" description="Tests"/>
        <tag line="35" name="see" description="\phpRack_Assertion::__construct()" refers="\phpRack_Assertion::__construct()"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="50" package="Default">
        <name>$_lines</name>
        <default><![CDATA[]]></default>
        <docblock line="44">
          <description><![CDATA[Log lines]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="44" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="44" name="see" description="\getLog()" refers="\getLog()"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="58" package="Default">
        <name>$_success</name>
        <default><![CDATA[]]></default>
        <docblock line="52">
          <description><![CDATA[Total result is SUCCESS?]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="52" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="52" name="see" description="\wasSuccessful()" refers="\wasSuccessful()"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="67" package="Default">
        <name>$_started</name>
        <default><![CDATA[]]></default>
        <docblock line="60">
          <description><![CDATA[When this result was created by test]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="60" name="var" description="" type="float">
            <type by_reference="false">float</type>
          </tag>
          <tag line="60" name="see" description="\clean()" refers="\clean()"/>
          <tag line="60" name="see" description="\getDuration()" refers="\getDuration()"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="77" package="Default">
        <name>$_test</name>
        <default><![CDATA[]]></default>
        <docblock line="69">
          <description><![CDATA[Test object which is owner of this result object,
used for give ability to set ajax options from phpRack_Package]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="69" name="var" description="" type="\phpRack_Test">
            <type by_reference="false">\phpRack_Test</type>
          </tag>
          <tag line="69" name="see" description="\setTest()" refers="\setTest()"/>
          <tag line="69" name="see" description="\getTest()" refers="\getTest()"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="86" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="79">
          <description><![CDATA[Construct the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="79" name="param" description="Test, which pushes results here" type="\phpRack_Test" variable="$test">
            <type by_reference="false">\phpRack_Test</type>
          </tag>
          <tag line="79" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="79" name="see" description="\phpRack_Assertion::__construct()" refers="\phpRack_Assertion::__construct()"/>
        </docblock>
        <argument line="86">
          <name>$test</name>
          <default><![CDATA[]]></default>
          <type>phpRack_Test</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="98" package="Default">
        <name>fail</name>
        <type>function</type>
        <docblock line="92">
          <description><![CDATA[Set total result to FAILURE]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="92" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="92" name="see" description="\phpRack_Package::_failure()" refers="\phpRack_Package::_failure()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="109" package="Default">
        <name>wasSuccessful</name>
        <type>function</type>
        <docblock line="103">
          <description><![CDATA[Was the test successful?]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="103" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="103" name="see" description="\phpRack_Runner::runSuite()" refers="\phpRack_Runner::runSuite()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="120" package="Default">
        <name>getLog</name>
        <type>function</type>
        <docblock line="114">
          <description><![CDATA[Get full log of the result]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="114" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="114" name="see" description="\phpRack_Runner::run()" refers="\phpRack_Runner::run()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="131" package="Default">
        <name>getPureLog</name>
        <type>function</type>
        <docblock line="125">
          <description><![CDATA[Get log of assertions only, without any other messages]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="125" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="125" name="see" description="\phpRack_Runner::runSuite()" refers="\phpRack_Runner::runSuite()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="142" package="Default">
        <name>getDuration</name>
        <type>function</type>
        <docblock line="136">
          <description><![CDATA[Get result lifetime, duration in seconds]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="136" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="136" name="see" description="\phpRack_Runner::runSuite()" refers="\phpRack_Runner::runSuite()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="154" package="Default">
        <name>addLog</name>
        <type>function</type>
        <docblock line="147">
          <description><![CDATA[Add new log line]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="147" name="param" description="Log line to add" type="string" variable="$line">
            <type by_reference="false">string</type>
          </tag>
          <tag line="147" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
          <tag line="147" name="see" description="\phpRack_Package::_log()" refers="\phpRack_Package::_log()"/>
        </docblock>
        <argument line="154">
          <name>$line</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="166" package="Default">
        <name>clean</name>
        <type>function</type>
        <docblock line="160">
          <description><![CDATA[Clean log]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="160" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="160" name="see" description="\phpRack_Test::run()" refers="\phpRack_Test::run()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="179" package="Default">
        <name>getTest</name>
        <type>function</type>
        <docblock line="173">
          <description><![CDATA[Get test which is owner of this result object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="173" name="return" description="" type="\phpRack_Test">
            <type by_reference="false">\phpRack_Test</type>
          </tag>
          <tag line="173" name="see" description="\phpRack_Package_Disc_File::tail()" refers="\phpRack_Package_Disc_File::tail()"/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="phpRack/View.php" hash="80d79f80447e2f0bbc0ab3ab79596cb8">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/View.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Test.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Test" refers="\phpRack_Test"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="55" package="Tests">
      <name>phpRack_View</name>
      <full_name>\phpRack_View</full_name>
      <extends/>
      <docblock line="35">
        <description><![CDATA[View in order to render test presentation page]]></description>
        <long-description><![CDATA[<p>This class is used as a view component in our simple MVC pattern, where
model is {@link phpRack_Runner}, view is {@link phpRack_View} and controller is a simple
script in {@link bootstrap.php}. An instance of this class is accepting
variables and a script name in order to render it, for example:</p>

<pre><code>$view = new phpRack_View();
$view->assign(array('name' => 'My Name To Render'));
$html = $view->render('index.phtml');
</code></pre>

<p>In this example, you can access "name" inside "index.phtml" like this:
$this->name.</p>]]></long-description>
        <tag line="35" name="package" description="Tests"/>
        <tag line="35" name="see" description="\bootstrap.php" refers="\bootstrap.php"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="67" package="Default">
        <name>$_injected</name>
        <default><![CDATA[array()]]></default>
        <docblock line="58">
          <description><![CDATA[Injected variables]]></description>
          <long-description><![CDATA[<p>Variables from this array can be used inside view script, just as
local class variables. It is implemented by {@link __get()}</p>]]></long-description>
          <tag line="58" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="58" name="see" description="\__get()" refers="\__get()"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="76" package="Default">
        <name>__get</name>
        <type>function</type>
        <docblock line="69">
          <description><![CDATA[Getter dispatcher, used inside view script]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="69" name="param" description="Name of the property to get" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="69" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="69" name="see" description="\$this-&gt;_injected" refers="\$this-&gt;_injected"/>
        </docblock>
        <argument line="76">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="92" package="Default">
        <name>assign</name>
        <type>function</type>
        <docblock line="84">
          <description><![CDATA[Inject variables into class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="84" name="param" description="Associative array of variables to inject, where keys are names and values are real values to be used later in view script." type="array" variable="$injects">
            <type by_reference="false">array</type>
          </tag>
          <tag line="84" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
          <tag line="84" name="see" description="\bootstrap.php" refers="\bootstrap.php"/>
        </docblock>
        <argument line="92">
          <name>$injects</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="107" package="Default">
        <name>render</name>
        <type>function</type>
        <docblock line="100">
          <description><![CDATA[Render the view and return HTML]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="100" name="param" description="Name of the script to render, inside &quot;/layout&quot;" type="string" variable="$script">
            <type by_reference="false">string</type>
          </tag>
          <tag line="100" name="return" description="" type="\HTML">
            <type by_reference="false">\HTML</type>
          </tag>
          <tag line="100" name="see" description="\bootstrap.php" refers="\bootstrap.php"/>
        </docblock>
        <argument line="107">
          <name>$script</name>
          <default><![CDATA['index.phtml']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="126" package="Default">
        <name>jsPath</name>
        <type>function</type>
        <docblock line="118">
          <description><![CDATA[Escapes special chars "\" and "'" in javascript]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="118" name="param" description="Path of the file to be rendered in JavaScript" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="118" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="118" name="see" description="\#13" refers="\#13"/>
          <tag line="118" name="see" description="\index.phtml" refers="\index.phtml"/>
        </docblock>
        <argument line="126">
          <name>$path</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="137" package="Default">
        <name>compressedHtml</name>
        <type>function</type>
        <docblock line="131">
          <description><![CDATA[Compress HTML content]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="131" name="param" description="HTML content, before compression" type="string" variable="$html">
            <type by_reference="false">string</type>
          </tag>
          <tag line="131" name="return" description="HTML content, compressed" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="137">
          <name>$html</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="185" package="Default">
        <name>compressedCss</name>
        <type>function</type>
        <docblock line="179">
          <description><![CDATA[Return a compressed version of CSS]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="179" name="param" description="Relative path of CSS script, inside /layout dir" type="string" variable="$css">
            <type by_reference="false">string</type>
          </tag>
          <tag line="179" name="return" description="CSS content compressed" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="185">
          <name>$css</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="phpRack/Test.php" hash="def1515031f813d9c30be13b91f35fa0">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Test.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Runner.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Runner" refers="\phpRack_Runner"/>
      </docblock>
    </include>
    <include line="38" type="Require Once" package="Default">
      <name>/Assertion.php</name>
      <docblock line="35">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="see" description="\phpRack_Assertion" refers="\phpRack_Assertion"/>
      </docblock>
    </include>
    <class final="false" abstract="true" namespace="default" line="45" package="Tests">
      <name>phpRack_Test</name>
      <full_name>\phpRack_Test</full_name>
      <extends/>
      <docblock line="40">
        <description><![CDATA[Parent class of all integration tests]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="40" name="package" description="Tests"/>
      </docblock>
      <constant namespace="default" line="48">
        <name>OK</name>
        <value><![CDATA['OK']]></value>
      </constant>
      <constant namespace="default" line="49">
        <name>FAILURE</name>
        <value><![CDATA['FAILURE']]></value>
      </constant>
      <constant namespace="default" line="57" package="Default">
        <name>DEFAULT_TIMEZONE</name>
        <value><![CDATA['EST']]></value>
        <docblock line="51">
          <description><![CDATA[This timezone will be used in there is NO timezone
set on the server]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="51" name="see" description="\setUp()" refers="\setUp()"/>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="protected" line="64" package="Default">
        <name>$_fileName</name>
        <default><![CDATA[]]></default>
        <docblock line="59">
          <description><![CDATA[ID of the test (unique in the system)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="59" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="71" package="Default">
        <name>$_runner</name>
        <default><![CDATA[]]></default>
        <docblock line="66">
          <description><![CDATA[Runner of tests]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="66" name="var" description="" type="\phpRack_Runner">
            <type by_reference="false">\phpRack_Runner</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="79" package="Default">
        <name>$_assertion</name>
        <default><![CDATA[null]]></default>
        <docblock line="73">
          <description><![CDATA[Assertion to use]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="73" name="var" description="" type="\phpRack_Assertion">
            <type by_reference="false">\phpRack_Assertion</type>
          </tag>
          <tag line="73" name="see" description="\__get()" refers="\__get()"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="88" package="Default">
        <name>$_ajaxOptions</name>
        <default><![CDATA[array(
        'autoStart'          => true, // start it when front is loaded
        'reload'             => false, // reload every X seconds, in AJAX
        'linesCount'         => null, // how many lines should be displayed on browser side when we use tailf method
        'secVisible'         => null, // how long these lines should be visible (in seconds)
        'attachOutput'       => false, // attach output to previous result log
        'data'               => array(), // used for store data which should be returned in next ajax query
        'fileLastOffset'     => null, // used for control offset to read in phpRack_Package_Disc_File::tailf()
        'logSizeLimit'       => 100, // maximum size of log, in KB
        'pauseWhenFocusLost' => true, // stop ajax requests when window lost focus
        'tags'               => array(), // used for store available options for parametrized test
        'tag'                => null // selected tag param from front end
    )]]></default>
        <docblock line="81">
          <description><![CDATA[Ajax options to control front page behavior]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="81" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="81" name="see" description="\setAjaxOptions()" refers="\setAjaxOptions()"/>
          <tag line="81" name="see" description="\getAjaxOptions()" refers="\getAjaxOptions()"/>
        </docblock>
      </property>
      <method final="true" abstract="false" static="false" visibility="protected" namespace="default" line="114" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="102">
          <description><![CDATA[Construct the class]]></description>
          <long-description><![CDATA[<p>This constructor is going to be used only from factory() method. Making
this method "private" leads to problems in PHP 5.2.5 and maybe earlier
versions.</p>]]></long-description>
          <tag line="102" name="param" description="ID of the test, absolute (!) file name" type="string" variable="$fileName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="102" name="param" description="Instance of test runner" type="\phpRack_Runner" variable="$runner">
            <type by_reference="false">\phpRack_Runner</type>
          </tag>
          <tag line="102" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="102" name="see" description="\factory()" refers="\factory()"/>
        </docblock>
        <argument line="114">
          <name>$fileName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="114">
          <name>$runner</name>
          <default><![CDATA[]]></default>
          <type>phpRack_Runner</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="129" package="Default">
        <name>factory</name>
        <type>function</type>
        <docblock line="121">
          <description><![CDATA[Create new instance of the class, using PHP absolute file name]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="121" name="param" description="ID of the test, absolute (!) file name" type="string" variable="$fileName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="121" name="param" description="Instance of test runner" type="\phpRack_Runner" variable="$runner">
            <type by_reference="false">\phpRack_Runner</type>
          </tag>
          <tag line="121" name="return" description="" type="\phpRack_Test">
            <type by_reference="false">\phpRack_Test</type>
          </tag>
          <tag line="121" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="129">
          <name>$fileName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="129">
          <name>$runner</name>
          <default><![CDATA[]]></default>
          <type>phpRack_Runner</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="default" line="158" package="Default">
        <name>__get</name>
        <type>function</type>
        <docblock line="151">
          <description><![CDATA[Dispatches property-like calls to the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="151" name="param" description="Name of the property to get" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="151" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="151" name="throws" description="If nothing found" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="158">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="175" package="Default">
        <name>getFileName</name>
        <type>function</type>
        <docblock line="169">
          <description><![CDATA[Get unique test ID (file name of the test)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="169" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="169" name="see" description="\$this-&gt;_fileName" refers="\$this-&gt;_fileName"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="185" package="Default">
        <name>getLabel</name>
        <type>function</type>
        <docblock line="180">
          <description><![CDATA[Get label of the test]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="180" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="default" line="196" package="Default">
        <name>run</name>
        <type>function</type>
        <docblock line="190">
          <description><![CDATA[Run the test and return result]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="190" name="return" description="" type="\phpRack_Result">
            <type by_reference="false">\phpRack_Result</type>
          </tag>
          <tag line="190" name="see" description="\phpRack_Runner::run()" refers="\phpRack_Runner::run()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="250" package="Default">
        <name>setUp</name>
        <type>function</type>
        <docblock line="244">
          <description><![CDATA[Setup test environment, if necessary, before running every test]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="244" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="244" name="see" description="\run()" refers="\run()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="270" package="Default">
        <name>tearDown</name>
        <type>function</type>
        <docblock line="264">
          <description><![CDATA[Clean environment if necessary]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="264" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="264" name="see" description="\run()" refers="\run()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="281" package="Default">
        <name>setAjaxOptions</name>
        <type>function</type>
        <docblock line="274">
          <description><![CDATA[Set ajax options]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="274" name="param" description="List of options to set" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="274" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="274" name="see" description="\phpRack_Package_Disc_File::tail()" refers="\phpRack_Package_Disc_File::tail()"/>
        </docblock>
        <argument line="281">
          <name>$options</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="299" package="Default">
        <name>getAjaxOptions</name>
        <type>function</type>
        <docblock line="292">
          <description><![CDATA[Get ajax options]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="292" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="292" name="see" description="\phpRack_Runner::run()" refers="\phpRack_Runner::run()"/>
          <tag line="292" name="see" description="\index.phtml" refers="\index.phtml"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="312" package="Default">
        <name>assertEquals</name>
        <type>function</type>
        <docblock line="304">
          <description><![CDATA[Simple assertion method to compare two values]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="304" name="param" description="What we're expecting to have" type="mixed" variable="$dest">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="304" name="param" description="What we actually have" type="mixed" variable="$src">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="304" name="param" description="Optional message to show" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="304" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
        </docblock>
        <argument line="312">
          <name>$dest</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="312">
          <name>$src</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="312">
          <name>$message</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="332" package="Default">
        <name>_init</name>
        <type>function</type>
        <docblock line="325">
          <description><![CDATA[Allow child class to overwrite test default options, by overwritting this method
If you want disable ajax auto start it is proper place for that]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="325" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="325" name="see" description="\__construct()" refers="\__construct()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="343" package="Default">
        <name>_log</name>
        <type>function</type>
        <docblock line="337">
          <description><![CDATA[Log one message]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="337" name="param" description="The message" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="337" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="343">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="phpRack/Adapters/Os.php" hash="74ec92ac428db577024be6c20c9de2ab">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Adapters/Os.php</error>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="36" package="Adapters">
      <name>phpRack_Adapters_Os</name>
      <full_name>\phpRack_Adapters_Os</full_name>
      <extends/>
      <docblock line="31">
        <description><![CDATA[OS adapter used to get information where script is executed]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="31" name="package" description="Adapters"/>
      </docblock>
      <constant namespace="default" line="41" package="Default">
        <name>WINDOWS</name>
        <value><![CDATA['Windows']]></value>
        <docblock line="38">
          <description><![CDATA[System constants used for simplify comparisions]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="default" line="42">
        <name>LINUX</name>
        <value><![CDATA['Linux']]></value>
      </constant>
      <constant namespace="default" line="43">
        <name>DARWIN</name>
        <value><![CDATA['Darwin']]></value>
      </constant>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="52" package="Default">
        <name>get</name>
        <type>function</type>
        <docblock line="45">
          <description><![CDATA[Recognize OS and return its name as string (Windows, Linux, etc)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="45" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="45" name="see" description="\phpRack_Adapters_Cpu::factory()" refers="\phpRack_Adapters_Cpu::factory()"/>
          <tag line="45" name="throws" description="if operating system can't be recognized" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="81" package="Default">
        <name>isUnix</name>
        <type>function</type>
        <docblock line="73">
          <description><![CDATA[Is it *NIX system?]]></description>
          <long-description><![CDATA[<p>Everything which is NOT windows is Unix. Very rough assumption, but this
is enough for now.</p>]]></long-description>
          <tag line="73" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="phpRack/Adapters/Url.php" hash="9b2e0168ea36250ec4f4f1003d54fd14">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Adapters/Url.php</error>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="36" package="Adapters">
      <name>phpRack_Adapters_Url</name>
      <full_name>\phpRack_Adapters_Url</full_name>
      <extends/>
      <docblock line="30">
        <description><![CDATA[Socket based adapter which help checking remote url accessibility
and retrieve content from them]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="package" description="Adapters"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="44" package="Default">
        <name>$_socket</name>
        <default><![CDATA[]]></default>
        <docblock line="38">
          <description><![CDATA[Socket returned by fsockopen()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="38" name="see" description="\connect()" refers="\connect()"/>
          <tag line="38" name="var" description="" type="resource">
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="51" package="Default">
        <name>$_host</name>
        <default><![CDATA[]]></default>
        <docblock line="46">
          <description><![CDATA[Host name, set in __construct]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="46" name="see" description="\__construct()" refers="\__construct()"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="60" package="Default">
        <name>$_port</name>
        <default><![CDATA[80]]></default>
        <docblock line="53">
          <description><![CDATA[Port number used to connect with host.]]></description>
          <long-description><![CDATA[<p>Can be changed by passing URL with custom one to __construct()</p>]]></long-description>
          <tag line="53" name="see" description="\__construct()" refers="\__construct()"/>
          <tag line="53" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="71" package="Default">
        <name>$_options</name>
        <default><![CDATA[array(
        'connectTimeout' => 2,    // timeouts in seconds
        'readTimeout'    => 60
    )]]></default>
        <docblock line="62">
          <description><![CDATA[Connection options, can be overwritten by passing new values as array
to constructor as second parameter]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="62" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="62" name="see" description="\__construct()" refers="\__construct()"/>
          <tag line="62" name="see" description="\connect()" refers="\connect()"/>
          <tag line="62" name="see" description="\getContent()" refers="\getContent()"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="85" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="76">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="76" name="param" description="URL" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="76" name="param" description="Options" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="76" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="76" name="throws" description="if URL is not valid" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="76" name="throws" description="if some of passed options is not recognized" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="85">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="85">
          <name>$options</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="135" package="Default">
        <name>factory</name>
        <type>function</type>
        <docblock line="128">
          <description><![CDATA[Factory, to simplify calls]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="128" name="param" description="URL" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="128" name="param" description="Options" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="128" name="return" description="" type="\phpRack_Adapters_Url">
            <type by_reference="false">\phpRack_Adapters_Url</type>
          </tag>
        </docblock>
        <argument line="135">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="135">
          <name>$options</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="146" package="Default">
        <name>_connect</name>
        <type>function</type>
        <docblock line="140">
          <description><![CDATA[Create connection to server]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="140" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="140" name="throws" description="if can't connect to server" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="177" package="Default">
        <name>_disconnect</name>
        <type>function</type>
        <docblock line="172">
          <description><![CDATA[Close current connection]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="172" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="191" package="Default">
        <name>isAccessible</name>
        <type>function</type>
        <docblock line="186">
          <description><![CDATA[Check whether URL is accessible]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="186" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="210" package="Default">
        <name>getContent</name>
        <type>function</type>
        <docblock line="203">
          <description><![CDATA[Get content of URL passed to constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="203" name="see" description="\__construct()" refers="\__construct()"/>
          <tag line="203" name="return" description="Content of URL" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="203" name="throws" description="If can't get content for some reason" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="phpRack/Adapters/Db/Mysql/Result/Formatter.php" hash="2590e368de11ec33fa56d97b88d5d3bf">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Adapters/Db/Mysql/Result/Formatter.php</error>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="36" package="Adapters\Db">
      <name>phpRack_Adapters_Db_Mysql_Result_Formatter</name>
      <full_name>\phpRack_Adapters_Db_Mysql_Result_Formatter</full_name>
      <extends/>
      <docblock line="30">
        <description><![CDATA[MySQL adapter result formatter]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="package" description="Adapters"/>
        <tag line="30" name="subpackage" description="Db"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="45" package="Default">
        <name>formatResult</name>
        <type>function</type>
        <docblock line="38">
          <description><![CDATA[Format SQL query result with spaces for better readability]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="38" name="param" description="returned from mysql_query()" type="resource" variable="$result">
            <type by_reference="false">resource</type>
          </tag>
          <tag line="38" name="return" description="formatted query result as plain text" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="38" name="see" description="\phpRack_Adapters_Db_Mysql::query()" refers="\phpRack_Adapters_Db_Mysql::query()"/>
        </docblock>
        <argument line="45">
          <name>$result</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="104" package="Default">
        <name>removeColumnHeadersLine</name>
        <type>function</type>
        <docblock line="95">
          <description><![CDATA[Remove header line from query result, which is added by _formatResult()
method. Sometimes we just need raw result without this extra line.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="95" name="param" description="query result with header line" type="string" variable="$result">
            <type by_reference="false">string</type>
          </tag>
          <tag line="95" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="95" name="see" description="\formatResult()" refers="\formatResult()"/>
          <tag line="95" name="see" description="\phpRack_Adapters_Db_Mysql::isDatabaseSelected()" refers="\phpRack_Adapters_Db_Mysql::isDatabaseSelected()"/>
        </docblock>
        <argument line="104">
          <name>$result</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="phpRack/Adapters/Db/Abstract.php" hash="3b8e8e2e6945db50677150353661a4ae">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Adapters/Db/Abstract.php</error>
    </parse_markers>
    <class final="false" abstract="true" namespace="default" line="36" package="Adapters\Db">
      <name>phpRack_Adapters_Db_Abstract</name>
      <full_name>\phpRack_Adapters_Db_Abstract</full_name>
      <extends/>
      <docblock line="30">
        <description><![CDATA[Abstract adapter for DB connectivity]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="package" description="Adapters"/>
        <tag line="30" name="subpackage" description="Db"/>
      </docblock>
      <method final="false" abstract="true" static="false" visibility="public" namespace="default" line="47" package="Default">
        <name>connect</name>
        <type>function</type>
        <docblock line="39">
          <description><![CDATA[Connect to the server]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="39" name="param" description="JDBC URL to connect to the server" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="39" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="39" name="see" description="\http://java.sun.com/docs/books/tutorial/jdbc/basics/connecting.html" refers="\http://java.sun.com/docs/books/tutorial/jdbc/basics/connecting.html"/>
          <tag line="39" name="throws" description="If something wrong happens there" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="47">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="default" line="56" package="Default">
        <name>query</name>
        <type>function</type>
        <docblock line="49">
          <description><![CDATA[Execute SQL query on the server]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="49" name="param" description="SQL query" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="49" name="return" description="Raw result from the server, in text" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="49" name="throws" description="If something wrong happens there" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="77" package="Default">
        <name>_parseJdbcUrl</name>
        <type>function</type>
        <docblock line="58">
          <description><![CDATA[Parse JDBC URL and return its components]]></description>
          <long-description><![CDATA[<p>This method matches URLSs like:</p>

<pre><code>jdbc:mysql://localhost:3306/test?username=login&password=password
jdbc:mysql://localhost:3306/test
jdbc:mysql://localhost:3306
jdbc:mysql://localhost
</code></pre>

<p>Mandatory parts of the URL are: "adapter", "host". All other params are
optional and could be omitted.</p>]]></long-description>
          <tag line="58" name="param" description="JDBC URL to parse" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="58" name="throws" description="If JDBC URL have wrong format" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="58" name="return" description="We set &quot;adapter&quot;, &quot;host&quot;, &quot;port&quot;, &quot;database&quot;, &quot;params&quot;" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="77">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="phpRack/Adapters/Db/Mysql.php" hash="4ef539cda905d28b895675fbb346e728">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Adapters/Db/Mysql.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Adapters/Db/Abstract.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Adapters_Db_Abstract" refers="\phpRack_Adapters_Db_Abstract"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="44" package="Adapters\Db">
      <name>phpRack_Adapters_Db_Mysql</name>
      <full_name>\phpRack_Adapters_Db_Mysql</full_name>
      <extends>\phpRack_Adapters_Db_Abstract</extends>
      <docblock line="35">
        <description><![CDATA[MySQL adapter]]></description>
        <long-description><![CDATA[<p>The class is using native PHP mysql_ methods, without any specific
extensions like PDO or Mysqli.</p>]]></long-description>
        <tag line="35" name="package" description="Adapters"/>
        <tag line="35" name="subpackage" description="Db"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="53" package="Default">
        <name>$_connection</name>
        <default><![CDATA[]]></default>
        <docblock line="47">
          <description><![CDATA[Current mysql connection link identifier]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="47" name="var" description="Result of mysql_connect()" type="int">
            <type by_reference="false">int</type>
          </tag>
          <tag line="47" name="see" description="\connect()" refers="\connect()"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="60" package="Default">
        <name>__destruct</name>
        <type>function</type>
        <docblock line="55">
          <description><![CDATA[Destructor automatically close opened connection]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="55" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="74" package="Default">
        <name>connect</name>
        <type>function</type>
        <docblock line="65">
          <description><![CDATA[Connect to the server]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="65" name="param" description="JDBC URL to connect to the server" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="65" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="65" name="see" description="\http://java.sun.com/docs/books/tutorial/jdbc/basics/connecting.html" refers="\http://java.sun.com/docs/books/tutorial/jdbc/basics/connecting.html"/>
          <tag line="65" name="throws" description="If MySQL extension is not loaded" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="65" name="throws" description="If any of the required params are missed in the URL" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="74">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="128" package="Default">
        <name>query</name>
        <type>function</type>
        <docblock line="120">
          <description><![CDATA[Execute SQL query on the server]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="120" name="param" description="SQL query" type="string" variable="$sql">
            <type by_reference="false">string</type>
          </tag>
          <tag line="120" name="return" description="Raw result from the server, in text" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="120" name="throws" description="If something wrong happens there" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="120" name="see" description="\mysql_query()" refers="\mysql_query()"/>
        </docblock>
        <argument line="128">
          <name>$sql</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="171" package="Default">
        <name>showSchema</name>
        <type>function</type>
        <docblock line="162">
          <description><![CDATA[Show database schema]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="162" name="return" description="Raw result from the server, in text" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="162" name="throws" description="If connect() method wasn't executed earlier" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="162" name="throws" description="If no database was selected as current" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="162" name="throws" description="Passed from query()" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="162" name="see" description="\phpRack_Package_Db_Mysql::showSchema()" refers="\phpRack_Package_Db_Mysql::showSchema()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="212" package="Default">
        <name>showConnections</name>
        <type>function</type>
        <docblock line="205">
          <description><![CDATA[Show connections and their status]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="205" name="return" description="Raw result from the server, in text" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="205" name="throws" description="If connect() method wasn't executed earlier" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="205" name="see" description="\phpRack_Package_Db_Mysql::showConnections()" refers="\phpRack_Package_Db_Mysql::showConnections()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="233" package="Default">
        <name>showServerInfo</name>
        <type>function</type>
        <docblock line="226">
          <description><![CDATA[Show server info]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="226" name="return" description="Raw result from the server, in text" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="226" name="throws" description="If connect() method wasn't executed earlier" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="226" name="see" description="\phpRack_Package_Db_Mysql::showServerInfo()" refers="\phpRack_Package_Db_Mysql::showServerInfo()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="285" package="Default">
        <name>isConnected</name>
        <type>function</type>
        <docblock line="279">
          <description><![CDATA[Return true if adapter is connected with database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="279" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="279" name="see" description="\$this-&gt;_connection" refers="\$this-&gt;_connection"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="299" package="Default">
        <name>isDatabaseSelected</name>
        <type>function</type>
        <docblock line="294">
          <description><![CDATA[Return true if some database was selected for use]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="294" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="319" package="Default">
        <name>closeConnection</name>
        <type>function</type>
        <docblock line="314">
          <description><![CDATA[Close connection to database, if was earlier opened]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="314" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="phpRack/Adapters/Shell/Command.php" hash="1925c466b14e259346ee23dd07a291dc">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Adapters/Shell/Command.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Adapters/ConnectionMonitor.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Adapters_ConnectionManager" refers="\phpRack_Adapters_ConnectionManager"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="41" package="Adapters">
      <name>phpRack_Adapters_Shell_Command</name>
      <full_name>\phpRack_Adapters_Shell_Command</full_name>
      <extends/>
      <docblock line="35">
        <description><![CDATA[Shell command adapter used to execute external commands and programs]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="package" description="Adapters"/>
        <tag line="35" name="author" description="netcoderpl@gmail.com"/>
      </docblock>
      <constant namespace="default" line="66" package="Default">
        <name>PIPE_STD_IN</name>
        <value><![CDATA[0]]></value>
        <docblock line="61">
          <description><![CDATA[Pipe ids, used for select with which process pipe we want to communicate]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="61" name="see" description="\run()" refers="\run()"/>
        </docblock>
      </constant>
      <constant namespace="default" line="67">
        <name>PIPE_STD_OUT</name>
        <value><![CDATA[1]]></value>
      </constant>
      <property final="false" static="false" visibility="private" line="50" package="Default">
        <name>$_command</name>
        <default><![CDATA[]]></default>
        <docblock line="43">
          <description><![CDATA[Shell command to execute]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="43" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="43" name="see" description="\__construct()" refers="\__construct()"/>
          <tag line="43" name="see" description="\run()" refers="\run()"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="59" package="Default">
        <name>$_process</name>
        <default><![CDATA[]]></default>
        <docblock line="52">
          <description><![CDATA[Process resource returned by proc_open() used for process identification]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="52" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="52" name="see" description="\run()" refers="\run()"/>
          <tag line="52" name="see" description="\__destruct()" refers="\__destruct()"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="75" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="69">
          <description><![CDATA[Shell command constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="69" name="param" description="Command to execute" type="string" variable="$command">
            <type by_reference="false">string</type>
          </tag>
          <tag line="69" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="75">
          <name>$command</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="86" package="Default">
        <name>factory</name>
        <type>function</type>
        <docblock line="80">
          <description><![CDATA[Shell command factory, to simplify calls]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="80" name="param" description="Command to execute" type="string" variable="$command">
            <type by_reference="false">string</type>
          </tag>
          <tag line="80" name="return" description="" type="\phpRack_Adapters_Shell_Command">
            <type by_reference="false">\phpRack_Adapters_Shell_Command</type>
          </tag>
        </docblock>
        <argument line="86">
          <name>$command</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="132" package="Default">
        <name>run</name>
        <type>function</type>
        <docblock line="91">
          <description><![CDATA[Execute shell command. Use asynchronous pipes to communicate
with child process]]></description>
          <long-description><![CDATA[<p>We must pass custom env from _getEnv() method to to
proc_open() call, because on phprack.com server.
When we execute external php file from other process, script
make some strange forks and execute itself many times. This
behavior results server internal error.</p>

<p>shell_exec() is also affected by this issue, we have earlier
this problem, and was solved by adding "env -i" before shell
command. Recently we have added PEAR support, which internally
execute PHP script, so problem returned.</p>

<p>Direct reason of this error is $_ENV['PATH']
variable. When we unset it and pass modified env to
proc_open(). It works on Windows XP, Ubuntu Linux and solve
problem on phprack.com server.
But from some reason on MacOS there is some problem with
this env value reseting, and we lose some privilege? Due to
this fact, our unit tests fail, because PEAR test produce
error:</p>

<pre><code>touch(): Unable to create file /opt/local/lib/php/.lock
because Permission denied in /usr/local/PEAR/PEAR/Registry.php
on line 835
</code></pre>

<p>If we pass null to proc_open() env param we have no problems
on MacOS, but problem on phprack.com still exists.</p>

<p>That is reason why we must pass to this function custom env
param.</p>]]></long-description>
          <tag line="91" name="return" description="Command execution output" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="91" name="throws" description="if from some reason command can't be executed" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="91" name="throws" description="if command process was terminated" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="91" name="see" description="\phpRack_Package_Php::lint()" refers="\phpRack_Package_Php::lint()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="236" package="Default">
        <name>__destruct</name>
        <type>function</type>
        <docblock line="231">
          <description><![CDATA[Shell command destructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="231" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="261" package="Default">
        <name>_getEnv</name>
        <type>function</type>
        <docblock line="255">
          <description><![CDATA[Get env which should be passed to proc_open()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="255" name="return" description="" type="array|null">
            <type by_reference="false">array</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="255" name="see" description="\run()" refers="\run()"/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="phpRack/Adapters/ConnectionMonitor.php" hash="330a47dd82c0793a2a1d01caa0d77686">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Adapters/ConnectionMonitor.php</error>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="37" package="Adapters">
      <name>phpRack_Adapters_ConnectionMonitor</name>
      <full_name>\phpRack_Adapters_ConnectionMonitor</full_name>
      <extends/>
      <docblock line="30">
        <description><![CDATA[Connection monitor used to check whether connection between client
and our script is still opened]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="package" description="Adapters"/>
        <tag line="30" name="author" description="netcoderpl@gmail.com"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="45" package="Default">
        <name>$_lastCheckTime</name>
        <default><![CDATA[null]]></default>
        <docblock line="39">
          <description><![CDATA[Connection status last checked time]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="39" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
          <tag line="39" name="see" description="\ping()" refers="\ping()"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="53" package="Default">
        <name>$_checkInterval</name>
        <default><![CDATA[1]]></default>
        <docblock line="47">
          <description><![CDATA[Connection status checking interval]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="47" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
          <tag line="47" name="see" description="\ping()" refers="\ping()"/>
        </docblock>
      </property>
      <property final="false" static="true" visibility="private" line="61" package="Default">
        <name>$_instance</name>
        <default><![CDATA[]]></default>
        <docblock line="55">
          <description><![CDATA[phpRack_Adapters_ConnectionMonitor instance]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="55" name="var" description="" type="\phpRack_Adapters_ConnectionMonitor">
            <type by_reference="false">\phpRack_Adapters_ConnectionMonitor</type>
          </tag>
          <tag line="55" name="see" description="\getInstance()" refers="\getInstance()"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="68" package="Default">
        <name>getInstance</name>
        <type>function</type>
        <docblock line="63">
          <description><![CDATA[Get phpRack_Adapters_ConnectionMonitor instance]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="63" name="return" description="" type="\phpRack_Adapters_ConnectionMonitor">
            <type by_reference="false">\phpRack_Adapters_ConnectionMonitor</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="86" package="Default">
        <name>ping</name>
        <type>function</type>
        <docblock line="77">
          <description><![CDATA[Check client connection is still opened. We can check it by sending
space char " " every $this->_checkInterval second.]]></description>
          <long-description><![CDATA[<p>After that PHP can detect connection status. If it was closed objects
destructors will be automatically executed and script stop work.</p>]]></long-description>
          <tag line="77" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="phpRack/Adapters/Config.php" hash="b299d65735384c595814c8d9166011c2">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Adapters/Config.php</error>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="50" package="Adapters">
      <name>phpRack_Adapters_Config</name>
      <full_name>\phpRack_Adapters_Config</full_name>
      <extends/>
      <docblock line="31">
        <description><![CDATA[Config adapter used for store tests configuration and provide object
oriented access methods]]></description>
        <long-description><![CDATA[<p>You can use it like this:</p>

<pre><code>$config = new phpRack_Adapters_Config(
  array(
    'alpha' => array(
      'beta' => 123,
    )
  )
);
assert($config->alpha->beta == 123);
</code></pre>]]></long-description>
        <tag line="31" name="package" description="Adapters"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="58" package="Default">
        <name>$_data</name>
        <default><![CDATA[]]></default>
        <docblock line="52">
          <description><![CDATA[Contains array of configuration data]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="52" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="52" name="see" description="\__construct()" refers="\__construct()"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="67" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="60">
          <description><![CDATA[Create object oriented config container]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="60" name="param" description="Config data as array" type="array" variable="$data">
            <type by_reference="false">array</type>
          </tag>
          <tag line="60" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="60" name="see" description="\ConfigTest::testConfigIni()" refers="\ConfigTest::testConfigIni()"/>
        </docblock>
        <argument line="67">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="87" package="Default">
        <name>__get</name>
        <type>function</type>
        <docblock line="79">
          <description><![CDATA[Magic method which provide access to configuration options]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="79" name="param" description="Name of config option" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="79" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="79" name="throws" description="if config option not exists" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="79" name="see" description="\ConfigTest::testConfigIni()" refers="\ConfigTest::testConfigIni()"/>
        </docblock>
        <argument line="87">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="103" package="Default">
        <name>__isset</name>
        <type>function</type>
        <docblock line="95">
          <description><![CDATA[Magic method which provide possibility to check whether some
configuration option exists]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="95" name="param" description="Name of config option" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="95" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="95" name="see" description="\ConfigTest::testConfigIni()" refers="\ConfigTest::testConfigIni()"/>
        </docblock>
        <argument line="103">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="phpRack/Adapters/Config/Ini.php" hash="5b2ca1cb1d875dc143ef473182cf62e3">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Adapters/Config/Ini.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Adapters/Config.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Adapters_Config" refers="\phpRack_Adapters_Config"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="50" package="Adapters">
      <name>phpRack_Adapters_Config_Ini</name>
      <full_name>\phpRack_Adapters_Config_Ini</full_name>
      <extends>\phpRack_Adapters_Config</extends>
      <docblock line="35">
        <description><![CDATA[Config adapter used for store test configuration loaded from INI file]]></description>
        <long-description><![CDATA[<p>You can use it like this:</p>

<pre><code>// app.ini:
// [production]
// params.db.username = 'test'
$ini = new phpRack_Adapters_Config_Ini('app.ini', 'production');
assert($ini->params->db->username == 'test');
</code></pre>]]></long-description>
        <tag line="35" name="package" description="Adapters"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="63" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="52">
          <description><![CDATA[Create config object and load selected section from INI file,
or all sections if $sectionName == null]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="52" name="param" description="Filename of INI file" type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="52" name="param" description="Section name to load, or null to load all" type="string|null" variable="$sectionName">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="52" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="52" name="throws" description="if INI file not exists" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="52" name="throws" description="if section not exists in INI file" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="52" name="see" description="\ConfigTest::testConfigIni()" refers="\ConfigTest::testConfigIni()"/>
        </docblock>
        <argument line="63">
          <name>$filename</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="63">
          <name>$sectionName</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="89" package="Default">
        <name>_sectionToArray</name>
        <type>function</type>
        <docblock line="81">
          <description><![CDATA[Convert section with "key.subkey1.subkey2" values as keys
to multidimensional associative array]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="81" name="param" description="section from ini file" type="array" variable="$section">
            <type by_reference="false">array</type>
          </tag>
          <tag line="81" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="81" name="see" description="\__construct()" refers="\__construct()"/>
        </docblock>
        <argument line="89">
          <name>$section</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="110" package="Default">
        <name>_loadSectionsFromIniFile</name>
        <type>function</type>
        <docblock line="102">
          <description><![CDATA[Load config sections from INI file, taking into account section inheritance]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="102" name="param" description="INI file to load and parse" type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="102" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="102" name="throws" description="if config INI file not exists" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="102" name="see" description="\__construct()" refers="\__construct()"/>
        </docblock>
        <argument line="110">
          <name>$filename</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="phpRack/Adapters/Cpu.php" hash="6bfbb691df4d07b1c79f015b21c726d8">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Adapters/Cpu.php</error>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="36" package="Adapters">
      <name>phpRack_Adapters_Cpu</name>
      <full_name>\phpRack_Adapters_Cpu</full_name>
      <extends/>
      <docblock line="31">
        <description><![CDATA[CPU adapter used to get details about available processor]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="31" name="package" description="Adapters"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="48" package="Default">
        <name>factory</name>
        <type>function</type>
        <docblock line="38">
          <description><![CDATA[CPU adapter factory return adapter depending on operating system]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="38" name="return" description="" type="\phpRack_Adapters_Cpu_Abstract">
            <type by_reference="false">\phpRack_Adapters_Cpu_Abstract</type>
          </tag>
          <tag line="38" name="throws" description="If OS is not supported" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="38" name="see" description="\For" refers="\For"/>
          <tag line="38" name="todo" description="#17 How about Mac OS? There is no /proc directory in Mac OS"/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="phpRack/Adapters/Files/DirectoryFilterIterator.php" hash="cdab419f2d7c8f741b07bb424d9e5159">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Adapters/Files/DirectoryFilterIterator.php</error>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="37" package="Adapters\Files">
      <name>phpRack_Adapters_Files_DirectoryFilterIterator</name>
      <full_name>\phpRack_Adapters_Files_DirectoryFilterIterator</full_name>
      <extends>\FilterIterator</extends>
      <docblock line="30">
        <description><![CDATA[Iterator filter class which help to get only files which match filter rules]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="package" description="Adapters"/>
        <tag line="30" name="subpackage" description="Files"/>
        <tag line="30" name="see" description="\phpRack_Package_Disc::showDirectory()" refers="\phpRack_Package_Disc::showDirectory()"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="46" package="Default">
        <name>$_dir</name>
        <default><![CDATA[]]></default>
        <docblock line="40">
          <description><![CDATA[Directory we're iterating]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="40" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="40" name="see" description="\__construct()" refers="\__construct()"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="54" package="Default">
        <name>$_maxDepth</name>
        <default><![CDATA[null]]></default>
        <docblock line="48">
          <description><![CDATA[Maximum depth to be visible]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="48" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="48" name="see" description="\setMaxDepth()" refers="\setMaxDepth()"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="61" package="Default">
        <name>$_excludePatterns</name>
        <default><![CDATA[]]></default>
        <docblock line="56">
          <description><![CDATA[Regular expression patterns used to determine what files should be ignored]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="56" name="var" description="" type="\string[]">
            <type by_reference="false">\string[]</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="68" package="Default">
        <name>$_extensionsPattern</name>
        <default><![CDATA[]]></default>
        <docblock line="63">
          <description><![CDATA[Regular expression pattern used to determine what files should returned]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="63" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="77" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="70">
          <description><![CDATA[Constructor, private, don't call it directly, instead use factory()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="70" name="param" description="Path" type="string" variable="$dir">
            <type by_reference="false">string</type>
          </tag>
          <tag line="70" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="70" name="see" description="\factory()" refers="\factory()"/>
        </docblock>
        <argument line="77">
          <name>$dir</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="94" package="Default">
        <name>factory</name>
        <type>function</type>
        <docblock line="88">
          <description><![CDATA[Create new iterator from directory path]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="88" name="param" description="Path" type="string" variable="$dir">
            <type by_reference="false">string</type>
          </tag>
          <tag line="88" name="return" description="" type="\phpRack_Adapters_Files_DirectoryFilterIterator">
            <type by_reference="false">\phpRack_Adapters_Files_DirectoryFilterIterator</type>
          </tag>
        </docblock>
        <argument line="94">
          <name>$dir</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="105" package="Default">
        <name>setExtensions</name>
        <type>function</type>
        <docblock line="99">
          <description><![CDATA[Set which extensions will be used as whitelist]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="99" name="param" description="Comma separated list of extensions, or list of them" type="string|array" variable="$extensions">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="99" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
        </docblock>
        <argument line="105">
          <name>$extensions</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="126" package="Default">
        <name>setExclude</name>
        <type>function</type>
        <docblock line="120">
          <description><![CDATA[Set pattern which will be used as blacklist]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="120" name="param" description="Regular expression pattern, or list of them" type="string|array" variable="$excludePatterns">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="120" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
        </docblock>
        <argument line="126">
          <name>$excludePatterns</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="141" package="Default">
        <name>setMaxDepth</name>
        <type>function</type>
        <docblock line="135">
          <description><![CDATA[Set maximum directory depth]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="135" name="param" description="Maximum depth" type="integer" variable="$maxDepth">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="135" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
        </docblock>
        <argument line="141">
          <name>$maxDepth</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="152" package="Default">
        <name>accept</name>
        <type>function</type>
        <docblock line="147">
          <description><![CDATA[Callback function which will be called to determine current file should be in collection or no]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="147" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="phpRack/Adapters/File.php" hash="d4989b621d0601f938887a4a15d5c93d">
    <parse_markers>
      <notice line="69" code="50013">Parameter  could not be found in getFileName()</notice>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Adapters/File.php</error>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="35" package="Adapters">
      <name>phpRack_Adapters_File</name>
      <full_name>\phpRack_Adapters_File</full_name>
      <extends/>
      <docblock line="30">
        <description><![CDATA[One file to work with]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="package" description="Adapters"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="43" package="Default">
        <name>$_fileName</name>
        <default><![CDATA[]]></default>
        <docblock line="38">
          <description><![CDATA[Absolute file name]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="38" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="52" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="45">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="45" name="param" description="File name" type="string" variable="$fileName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="45" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="45" name="see" description="\_convertFileName()" refers="\_convertFileName()"/>
        </docblock>
        <argument line="52">
          <name>$fileName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="64" package="Default">
        <name>factory</name>
        <type>function</type>
        <docblock line="57">
          <description><![CDATA[Create an instance of this class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="57" name="param" description="File name" type="string" variable="$fileName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="57" name="return" description="" type="\phpRack_Adapters_File">
            <type by_reference="false">\phpRack_Adapters_File</type>
          </tag>
          <tag line="57" name="see" description="\_convertFileName()" refers="\_convertFileName()"/>
        </docblock>
        <argument line="64">
          <name>$fileName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="76" package="Default">
        <name>getFileName</name>
        <type>function</type>
        <docblock line="69">
          <description><![CDATA[Returns an absolute file name]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="69" name="param" description="File name" type="string" variable="">
            <type by_reference="false">string</type>
          </tag>
          <tag line="69" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="69" name="see" description="\_convertFileName()" refers="\_convertFileName()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="102" package="Default">
        <name>_convertFileName</name>
        <type>function</type>
        <docblock line="81">
          <description><![CDATA[Converts file name from any form possible to an absolute path]]></description>
          <long-description><![CDATA[<p>For example, you can use it like this, inside any package:</p>

<pre><code>// convert it to PHPRACK_PATH . '/../test.php'
$file = $this->_convertFileName('/../test.php');
// returns '/home/my/test.php'
$file = $this->_convertFileName('/home/my/test.php');
// returns 'c:/Windows/System32/my.dll'
$file = $this->_convertFileName('c:/Windows/System32/my.dll');
</code></pre>

<p>If the file not found, it doesn't affect the result of this method. The
result always contain an absolute path of the file. This method doesn't
do any operations with the file, just re-constructs its name.</p>]]></long-description>
          <tag line="81" name="param" description="File name, as it is provided (raw form)" type="string" variable="$fileName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="81" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="102">
          <name>$fileName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="phpRack/Adapters/Notifier/Mail.php" hash="a888aad4fc822003f29e6ee2a8656b6f">
    <parse_markers>
      <error line="37" code="50015">Argument $params is missing from the Docblock of factory()</error>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Adapters/Notifier/Mail.php</error>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="35" package="Adapters">
      <name>phpRack_Adapters_Notifier_Mail</name>
      <full_name>\phpRack_Adapters_Notifier_Mail</full_name>
      <extends/>
      <docblock line="30">
        <description><![CDATA[Mail adapter used for mailing phpRack reports]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="package" description="Adapters"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="49" package="Default">
        <name>factory</name>
        <type>function</type>
        <docblock line="37">
          <description><![CDATA[Factory method to get one of Sendmail or Smtp class instances.]]></description>
          <long-description><![CDATA[<p>Depends on options specified. Available options depend on transport
you choose.</p>]]></long-description>
          <tag line="37" name="see" description="\phpRack_Adapters_Notifier_Mail_Smtp" refers="\phpRack_Adapters_Notifier_Mail_Smtp"/>
          <tag line="37" name="see" description="\phpRack_Adapters_Notifier_Mail_Sendmail" refers="\phpRack_Adapters_Notifier_Mail_Sendmail"/>
          <tag line="37" name="param" description="List of parameters" type="array" variable="$class">
            <type by_reference="false">array</type>
          </tag>
          <tag line="37" name="return" description="" type="\phpRack_Adapters_Mail">
            <type by_reference="false">\phpRack_Adapters_Mail</type>
          </tag>
          <tag line="37" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="49">
          <name>$class</name>
          <default><![CDATA['sendmail']]></default>
          <type/>
        </argument>
        <argument line="49">
          <name>$params</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="phpRack/Adapters/Notifier/Mail/Abstract.php" hash="f54a33372095c0edebebb32df05cf892">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Adapters/Notifier/Mail/Abstract.php</error>
    </parse_markers>
    <class final="false" abstract="true" namespace="default" line="35" package="Adapters">
      <name>phpRack_Adapters_Notifier_Mail_Abstract</name>
      <full_name>\phpRack_Adapters_Notifier_Mail_Abstract</full_name>
      <extends/>
      <docblock line="30">
        <description><![CDATA[Abstract class for the phpRack_Adapters_Notifier_Mail_*]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="package" description="Adapters"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="43" package="Default">
        <name>$_options</name>
        <default><![CDATA[array()]]></default>
        <docblock line="37">
          <description><![CDATA[Our array with list of options]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="37" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="37" name="see" description="\__construct()" refers="\__construct()"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="51" package="Default">
        <name>$_body</name>
        <default><![CDATA[]]></default>
        <docblock line="45">
          <description><![CDATA[Default text of the body]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="45" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="45" name="see" description="\setBody()" refers="\setBody()"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="59" package="Default">
        <name>$_to</name>
        <default><![CDATA[array()]]></default>
        <docblock line="53">
          <description><![CDATA[List of destination e-mail addresses]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="53" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="53" name="see" description="\setTo()" refers="\setTo()"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="66" package="Default">
        <name>$_from</name>
        <default><![CDATA['no-reply@phprack.com']]></default>
        <docblock line="61">
          <description><![CDATA[Sender e-mail address]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="61" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="74" package="Default">
        <name>$_subject</name>
        <default><![CDATA['phpRack']]></default>
        <docblock line="68">
          <description><![CDATA[Default message subject]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="68" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="68" name="see" description="\setSubject()" refers="\setSubject()"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="82" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="76">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="76" name="param" description="List of parameters" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="76" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="82">
          <name>$options</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="93" package="Default">
        <name>setBody</name>
        <type>function</type>
        <docblock line="87">
          <description><![CDATA[Assigns body of a mail]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="87" name="param" description="Text to be assigned" type="string" variable="$plain">
            <type by_reference="false">string</type>
          </tag>
          <tag line="87" name="return" description="" type="\phpRack_Adapters_Mail">
            <type by_reference="false">\phpRack_Adapters_Mail</type>
          </tag>
        </docblock>
        <argument line="93">
          <name>$plain</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="105" package="Default">
        <name>setSubject</name>
        <type>function</type>
        <docblock line="99">
          <description><![CDATA[Assigns subject of a mail]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="99" name="param" description="string" type="" variable="$text"/>
          <tag line="99" name="return" description="" type="\phpRack_Adapters_Mail">
            <type by_reference="false">\phpRack_Adapters_Mail</type>
          </tag>
        </docblock>
        <argument line="105">
          <name>$text</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="117" package="Default">
        <name>setTo</name>
        <type>function</type>
        <docblock line="111">
          <description><![CDATA[Sets destination mail or mails.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="111" name="param" description="" type="string|array" variable="$mails">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="111" name="return" description="" type="\phpRack_Adapters_Mail">
            <type by_reference="false">\phpRack_Adapters_Mail</type>
          </tag>
        </docblock>
        <argument line="117">
          <name>$mails</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="132" package="Default">
        <name>_validateBeforeSend</name>
        <type>function</type>
        <docblock line="123">
          <description><![CDATA[Checks if we are ready to build mail]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="123" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="123" name="see" description="\phpRack_Adapters_Notifier_Mail_Sendmail-&gt;send()" refers="\phpRack_Adapters_Notifier_Mail_Sendmail-&gt;send()"/>
          <tag line="123" name="see" description="\phpRack_Adapters_Notifier_Mail_Smtp-&gt;send()" refers="\phpRack_Adapters_Notifier_Mail_Smtp-&gt;send()"/>
          <tag line="123" name="throws" description="if To not defined" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="123" name="throws" description="if Body not defined" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="149" package="Default">
        <name>_getEncodedSubject</name>
        <type>function</type>
        <docblock line="143">
          <description><![CDATA[Encodes subject to UTF-8]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="143" name="see" description="\setSubject()" refers="\setSubject()"/>
          <tag line="143" name="return" description="base64 encoded string with special chars" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="161" package="Default">
        <name>_getEncodedBody</name>
        <type>function</type>
        <docblock line="154">
          <description><![CDATA[Encodes body to UTF-8.]]></description>
          <long-description><![CDATA[<p>Output text has fixed width</p>]]></long-description>
          <tag line="154" name="see" description="\setBody()" refers="\setBody()"/>
          <tag line="154" name="return" description="base64 encoded string" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="phpRack/Adapters/Notifier/Mail/Smtp.php" hash="54f412c99b98870106e33ee8e52270ae">
    <parse_markers>
      <error line="171" code="50015">Argument $msg is missing from the Docblock of _query()</error>
      <error line="187" code="50015">Argument $code is missing from the Docblock of _mustBe()</error>
      <error line="187" code="50015">Argument $timeout is missing from the Docblock of _mustBe()</error>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Adapters/Notifier/Mail/Smtp.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Adapters/Notifier/Mail/Abstract.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Adapters_Notifier_Mail_Abstract" refers="\phpRack_Adapters_Notifier_Mail_Abstract"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="40" package="Default">
      <name>phpRack_Adapters_Notifier_Mail_Smtp</name>
      <full_name>\phpRack_Adapters_Notifier_Mail_Smtp</full_name>
      <extends>\phpRack_Adapters_Notifier_Mail_Abstract</extends>
      <docblock line="35">
        <description><![CDATA[Smtp implementation of phpRack mail]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="see" description="\phpRack_Notifier_Mail_Abstract" refers="\phpRack_Notifier_Mail_Abstract"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="50" package="Default">
        <name>$_connection</name>
        <default><![CDATA[]]></default>
        <docblock line="43">
          <description><![CDATA[Connection entry point]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="43" name="var" description="" type="resource">
            <type by_reference="false">resource</type>
          </tag>
          <tag line="43" name="see" description="\_connect()" refers="\_connect()"/>
          <tag line="43" name="see" description="\_query()" refers="\_query()"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="58" package="Default">
        <name>$_log</name>
        <default><![CDATA[array()]]></default>
        <docblock line="52">
          <description><![CDATA[Stores debug information]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="52" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="52" name="see" description="\_log()" refers="\_log()"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="66" package="Default">
        <name>$_address</name>
        <default><![CDATA[]]></default>
        <docblock line="60">
          <description><![CDATA[Connection address for the stream]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="60" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="60" name="see" description="\_connect();" refers="\_connect();"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="76" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="68">
          <description><![CDATA[Constructor for the smtp protocol.]]></description>
          <long-description><![CDATA[<p>Creates address to connect to</p>]]></long-description>
          <tag line="68" name="param" description="List of parameters" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="68" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="76">
          <name>$options</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="104" package="Default">
        <name>send</name>
        <type>function</type>
        <docblock line="98">
          <description><![CDATA[Prepares and sends an mail]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="98" name="throws" description="if connection doesn't established" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="98" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="163" package="Default">
        <name>_connect</name>
        <type>function</type>
        <docblock line="157">
          <description><![CDATA[Connects to the stream and returns connection status]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="157" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="157" name="throws" description="if can't connect to the mail server" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="178" package="Default">
        <name>_query</name>
        <type>function</type>
        <docblock line="171">
          <description><![CDATA[Writes data to the connetion (stream)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="171" name="var" description="Message to send to SMTP server" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="171" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
          <tag line="171" name="throws" description="if can't write to the stream" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="178">
          <name>$msg</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="199" package="Default">
        <name>_mustBe</name>
        <type>function</type>
        <docblock line="187">
          <description><![CDATA[Reads stream. Moves caret and checks for a code or codes.]]></description>
          <long-description><![CDATA[<p>Second parameter used as time limit for read stream</p>]]></long-description>
          <tag line="187" name="var" description="" type="int|array">
            <type by_reference="false">int</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="187" name="var" description="Timeout (Default: 300)" type="int">
            <type by_reference="false">int</type>
          </tag>
          <tag line="187" name="throws" description="if can't change stream timeout" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="187" name="throws" description="if can't read from the socket" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="187" name="see" description="\_log()" refers="\_log()"/>
          <tag line="187" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
        </docblock>
        <argument line="199">
          <name>$code</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="199">
          <name>$timeout</name>
          <default><![CDATA[300]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="237" package="Default">
        <name>_log</name>
        <type>function</type>
        <docblock line="226">
          <description><![CDATA[Logs information about queries
and response to debug]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="226" name="see" description="\_mustBe()" refers="\_mustBe()"/>
          <tag line="226" name="see" description="\_query()" refers="\_query()"/>
          <tag line="226" name="param" description="" type="string" variable="$msg">
            <type by_reference="false">string</type>
          </tag>
          <tag line="226" name="param" description="" type="bool" variable="$throwError">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="226" name="throws" description="if $throwError eq. true" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="226" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="237">
          <name>$msg</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="237">
          <name>$throwError</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="250" package="Default">
        <name>_getLog</name>
        <type>function</type>
        <docblock line="245">
          <description><![CDATA[Returns information about queries and response in plain format]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="245" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="263" package="Default">
        <name>__destruct</name>
        <type>function</type>
        <docblock line="255">
          <description><![CDATA[Destructor.]]></description>
          <long-description><![CDATA[<p>Closes connection if needed</p>]]></long-description>
          <tag line="255" name="throws" description="if can't close connection" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="255" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="phpRack/Adapters/Notifier/Mail/Sendmail.php" hash="c969d1d38718cee1cbabdfd523f65420">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Adapters/Notifier/Mail/Sendmail.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Adapters/Notifier/Mail/Abstract.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Adapters_Notifier_Mail_Abstract" refers="\phpRack_Adapters_Notifier_Mail_Abstract"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="40" package="Default">
      <name>phpRack_Adapters_Notifier_Mail_Sendmail</name>
      <full_name>\phpRack_Adapters_Notifier_Mail_Sendmail</full_name>
      <extends>\phpRack_Adapters_Notifier_Mail_Abstract</extends>
      <docblock line="35">
        <description><![CDATA[Sendmail implementation of phpRack mail]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="see" description="\phpRack_Notifier_Mail_Abstract" refers="\phpRack_Notifier_Mail_Abstract"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="50" package="Default">
        <name>send</name>
        <type>function</type>
        <docblock line="42">
          <description><![CDATA[Preparing and sending mail.]]></description>
          <long-description><![CDATA[<p>Function returns result of the operation</p>]]></long-description>
          <tag line="42" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="42" name="link" description="http://php.net/manual/en/function.mail.php" link="http://php.net/manual/en/function.mail.php"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="67" package="Default">
        <name>_getHeaders</name>
        <type>function</type>
        <docblock line="61">
          <description><![CDATA[Function builds headers for mail]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="61" name="return" description="Plain list with headers" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="61" name="see" description="\send()" refers="\send()"/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="phpRack/Adapters/Auth/Plain.php" hash="e6ea6b8c6729801b34ec9341a86720ae">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Adapters/Auth/Plain.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Adapters/Auth/Abstract.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Adapters_Auth_Abstract" refers="\phpRack_Adapters_Auth_Abstract"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="41" package="Adapters\Auth">
      <name>phpRack_Adapters_Auth_Plain</name>
      <full_name>\phpRack_Adapters_Auth_Plain</full_name>
      <extends>\phpRack_Adapters_Auth_Abstract</extends>
      <docblock line="35">
        <description><![CDATA[Authentication plain adapter]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="package" description="Adapters"/>
        <tag line="35" name="subpackage" description="Auth"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="49" package="Default">
        <name>authenticate</name>
        <type>function</type>
        <docblock line="43">
          <description><![CDATA[Authenticate and return an auth result]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="43" name="return" description="" type="\phpRack_Runner_Auth_Result">
            <type by_reference="false">\phpRack_Runner_Auth_Result</type>
          </tag>
          <tag line="43" name="see" description="\phpRack_Adapters_Auth_Abstract::authenticate()" refers="\phpRack_Adapters_Auth_Abstract::authenticate()"/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="phpRack/Adapters/Auth/Abstract.php" hash="c4fe7777a48defd36184ae542f75bd6d">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Adapters/Auth/Abstract.php</error>
    </parse_markers>
    <class final="false" abstract="true" namespace="default" line="36" package="Adapters\Auth">
      <name>phpRack_Adapters_Auth_Abstract</name>
      <full_name>\phpRack_Adapters_Auth_Abstract</full_name>
      <extends/>
      <docblock line="30">
        <description><![CDATA[Authentication abstract adapter]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="package" description="Adapters"/>
        <tag line="30" name="subpackage" description="Auth"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="43" package="Default">
        <name>$_request</name>
        <default><![CDATA[array(
        'login'    => '',
        'hash'     => ''
    )]]></default>
        <docblock line="38">
          <description><![CDATA[Authentication request]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="38" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="53" package="Default">
        <name>$_options</name>
        <default><![CDATA[array()]]></default>
        <docblock line="48">
          <description><![CDATA[Authentication options]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="48" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="62" package="Default">
        <name>setOptions</name>
        <type>function</type>
        <docblock line="55">
          <description><![CDATA[Set authentication options]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="55" name="param" description="array" type="" variable="$options"/>
          <tag line="55" name="see" description="\phpRack_Runner_Auth::authenticate()" refers="\phpRack_Runner_Auth::authenticate()"/>
          <tag line="55" name="return" description="" type="\@this">
            <type by_reference="false">\@this</type>
          </tag>
        </docblock>
        <argument line="62">
          <name>$options</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="75" package="Default">
        <name>setRequest</name>
        <type>function</type>
        <docblock line="68">
          <description><![CDATA[Set request login, hash]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="68" name="param" description="array" type="" variable="$request"/>
          <tag line="68" name="see" description="\phpRack_Runner_Auth::authenticate()" refers="\phpRack_Runner_Auth::authenticate()"/>
          <tag line="68" name="return" description="" type="\@this">
            <type by_reference="false">\@this</type>
          </tag>
        </docblock>
        <argument line="75">
          <name>$request</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="default" line="89" package="Default">
        <name>authenticate</name>
        <type>function</type>
        <docblock line="83">
          <description><![CDATA[Authenticate and return an auth result]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="83" name="return" description="" type="\phpRack_Runner_Auth_Result">
            <type by_reference="false">\phpRack_Runner_Auth_Result</type>
          </tag>
          <tag line="83" name="see" description="\phpRack_Runner_Auth::authenticate()" refers="\phpRack_Runner_Auth::authenticate()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="99" package="Default">
        <name>_validated</name>
        <type>function</type>
        <docblock line="91">
          <description><![CDATA[Return an AuthResult]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="91" name="param" description="Success/failure of the validation" type="boolean" variable="$result">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="91" name="param" description="Optional error message" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="91" name="return" description="" type="\phpRack_Runner_Auth_Result">
            <type by_reference="false">\phpRack_Runner_Auth_Result</type>
          </tag>
          <tag line="91" name="see" description="\authenticate()" refers="\authenticate()"/>
        </docblock>
        <argument line="99">
          <name>$result</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="99">
          <name>$message</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="phpRack/Adapters/Auth/Array.php" hash="120721e2eb19df7c0e0e5e65c30b9551">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Adapters/Auth/Array.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Adapters/Auth/Abstract.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Adapters_Auth_Abstract" refers="\phpRack_Adapters_Auth_Abstract"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="41" package="Adapters\Auth">
      <name>phpRack_Adapters_Auth_Array</name>
      <full_name>\phpRack_Adapters_Auth_Array</full_name>
      <extends>\phpRack_Adapters_Auth_Abstract</extends>
      <docblock line="35">
        <description><![CDATA[Authentication array adapter]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="package" description="Adapters"/>
        <tag line="35" name="subpackage" description="Auth"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="49" package="Default">
        <name>authenticate</name>
        <type>function</type>
        <docblock line="43">
          <description><![CDATA[Authenticate and return an auth result]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="43" name="return" description="" type="\phpRack_Runner_Auth_Result">
            <type by_reference="false">\phpRack_Runner_Auth_Result</type>
          </tag>
          <tag line="43" name="see" description="\phpRack_Adapters_Auth_Abstract::authenticate()" refers="\phpRack_Adapters_Auth_Abstract::authenticate()"/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="phpRack/Adapters/Auth/File.php" hash="653fd96510467fd5a7e556ca3687db3b">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Adapters/Auth/File.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Adapters/Auth/Abstract.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Adapters_Auth_Abstract" refers="\phpRack_Adapters_Auth_Abstract"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="41" package="Adapters\Auth">
      <name>phpRack_Adapters_Auth_File</name>
      <full_name>\phpRack_Adapters_Auth_File</full_name>
      <extends>\phpRack_Adapters_Auth_Abstract</extends>
      <docblock line="35">
        <description><![CDATA[Authentication file adapter]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="package" description="Adapters"/>
        <tag line="35" name="subpackage" description="Auth"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="49" package="Default">
        <name>authenticate</name>
        <type>function</type>
        <docblock line="43">
          <description><![CDATA[Authenticate and return an auth result]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="43" name="return" description="" type="\phpRack_Runner_Auth_Result">
            <type by_reference="false">\phpRack_Runner_Auth_Result</type>
          </tag>
          <tag line="43" name="see" description="\phpRack_Adapters_Auth_Abstract::authenticate()" refers="\phpRack_Adapters_Auth_Abstract::authenticate()"/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="phpRack/Adapters/Pear.php" hash="95a3ff6580cd1da57527cc373e4f8fab">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Adapters/Pear.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Adapters/Pear/Package.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Adapters_Pear_Package" refers="\phpRack_Adapters_Pear_Package"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="40" package="Adapters">
      <name>phpRack_Adapters_Pear</name>
      <full_name>\phpRack_Adapters_Pear</full_name>
      <extends/>
      <docblock line="35">
        <description><![CDATA[PEAR adapter used for checking PEAR packages availability]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="package" description="Adapters"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="50" package="Default">
        <name>getPackage</name>
        <type>function</type>
        <docblock line="42">
          <description><![CDATA[Find and create new package]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="42" name="param" description="Package name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="42" name="return" description="" type="\phpRack_Adapters_Pear_Package|null">
            <type by_reference="false">\phpRack_Adapters_Pear_Package</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="42" name="throws" description="If PEAR is not installed properly" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="42" name="see" description="\phpRack_Package_Pear::package()" refers="\phpRack_Package_Pear::package()"/>
        </docblock>
        <argument line="50">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="69" package="Default">
        <name>getAllPackages</name>
        <type>function</type>
        <docblock line="62">
          <description><![CDATA[Get full list of installed packages]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="62" name="return" description="of phpRack_Adapters_Pear_Package" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="62" name="throws" description="If some problem appear during package informations loading" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="62" name="see" description="\phpRack_Package_Pear::showList()" refers="\phpRack_Package_Pear::showList()"/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="phpRack/Adapters/Cpu/Darwin.php" hash="712e2529893b1e4ced244cd333a21c01">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Adapters/Cpu/Darwin.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Adapters/Cpu/Abstract.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Adapters_Cpu_Abstract" refers="\phpRack_Adapters_Cpu_Abstract"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="42" package="Adapters\Cpu">
      <name>phpRack_Adapters_Cpu_Darwin</name>
      <full_name>\phpRack_Adapters_Cpu_Darwin</full_name>
      <extends>\phpRack_Adapters_Cpu_Abstract</extends>
      <docblock line="35">
        <description><![CDATA[Darwin CPU Adapter (Mac OS)]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="package" description="Adapters"/>
        <tag line="35" name="subpackage" description="Cpu"/>
        <tag line="35" name="todo" description="#17 Should be implemented"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="51" package="Default">
        <name>getBogoMips</name>
        <type>function</type>
        <docblock line="44">
          <description><![CDATA[Get CPU BogoMips]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="44" name="return" description="" type="float">
            <type by_reference="false">float</type>
          </tag>
          <tag line="44" name="see" description="\phpRack_Package_Cpu_Performance::atLeast()" refers="\phpRack_Package_Cpu_Performance::atLeast()"/>
          <tag line="44" name="see" description="\phpRack_Adapters_Cpu_Abstract::getBogoMips()" refers="\phpRack_Adapters_Cpu_Abstract::getBogoMips()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="64" package="Default">
        <name>getCpuFrequency</name>
        <type>function</type>
        <docblock line="56">
          <description><![CDATA[Get CPU frequency in MHz]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="56" name="return" description="" type="float">
            <type by_reference="false">float</type>
          </tag>
          <tag line="56" name="throws" description="If can't get cpu frequency" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="56" name="see" description="\getBogoMips()" refers="\getBogoMips()"/>
          <tag line="56" name="see" description="\phpRack_Adapters_Cpu_Abstract::getCpuFrequency()" refers="\phpRack_Adapters_Cpu_Abstract::getCpuFrequency()"/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="phpRack/Adapters/Cpu/Abstract.php" hash="a7614c547bf1ec7aadfe0ac995518fe8">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Adapters/Cpu/Abstract.php</error>
    </parse_markers>
    <class final="false" abstract="true" namespace="default" line="37" package="Adapters\Cpu">
      <name>phpRack_Adapters_Cpu_Abstract</name>
      <full_name>\phpRack_Adapters_Cpu_Abstract</full_name>
      <extends/>
      <docblock line="30">
        <description><![CDATA[Abstract CPU adapter]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="package" description="Adapters"/>
        <tag line="30" name="subpackage" description="Cpu"/>
        <tag line="30" name="see" description="\phpRack_Adapters_Cpu::factory()" refers="\phpRack_Adapters_Cpu::factory()"/>
      </docblock>
      <method final="false" abstract="true" static="false" visibility="public" namespace="default" line="46" package="Default">
        <name>getBogoMips</name>
        <type>function</type>
        <docblock line="39">
          <description><![CDATA[Get CPU BogoMips]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="39" name="return" description="" type="float">
            <type by_reference="false">float</type>
          </tag>
          <tag line="39" name="throws" description="If unable to get BogoMips" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="39" name="see" description="\phpRack_Package_Cpu_Performance::atLeast()" refers="\phpRack_Package_Cpu_Performance::atLeast()"/>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="default" line="55" package="Default">
        <name>getCpuFrequency</name>
        <type>function</type>
        <docblock line="48">
          <description><![CDATA[Get CPU frequency in MHz]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="48" name="return" description="" type="float">
            <type by_reference="false">float</type>
          </tag>
          <tag line="48" name="throws" description="If can't get cpu frequency" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="48" name="see" description="\getBogoMips()" refers="\getBogoMips()"/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="phpRack/Adapters/Cpu/Windows.php" hash="5723abcf05f306c8323168607e0f05d1">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Adapters/Cpu/Windows.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Adapters/Cpu/Abstract.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Adapters_Cpu_Abstract" refers="\phpRack_Adapters_Cpu_Abstract"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="41" package="Adapters\Cpu">
      <name>phpRack_Adapters_Cpu_Windows</name>
      <full_name>\phpRack_Adapters_Cpu_Windows</full_name>
      <extends>\phpRack_Adapters_Cpu_Abstract</extends>
      <docblock line="35">
        <description><![CDATA[Windows CPU Adapter]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="package" description="Adapters"/>
        <tag line="35" name="subpackage" description="Cpu"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="51" package="Default">
        <name>getBogoMips</name>
        <type>function</type>
        <docblock line="43">
          <description><![CDATA[Get CPU BogoMips]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="43" name="return" description="" type="float">
            <type by_reference="false">float</type>
          </tag>
          <tag line="43" name="throws" description="If unable to get BogoMips" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="43" name="see" description="\phpRack_Package_Cpu_Performance::atLeast()" refers="\phpRack_Package_Cpu_Performance::atLeast()"/>
          <tag line="43" name="see" description="\phpRack_Adapters_Cpu_Abstract::getBogoMips()" refers="\phpRack_Adapters_Cpu_Abstract::getBogoMips()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="68" package="Default">
        <name>getCpuFrequency</name>
        <type>function</type>
        <docblock line="60">
          <description><![CDATA[Get CPU frequency in MHz]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="60" name="return" description="" type="float">
            <type by_reference="false">float</type>
          </tag>
          <tag line="60" name="throws" description="If can't get cpu frequency" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="60" name="see" description="\getBogoMips()" refers="\getBogoMips()"/>
          <tag line="60" name="see" description="\phpRack_Adapters_Cpu_Abstract::getCpuFrequency()" refers="\phpRack_Adapters_Cpu_Abstract::getCpuFrequency()"/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="phpRack/Adapters/Cpu/Linux.php" hash="8894e6d4c89fb2a60f921eeaa2ee5ce6">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Adapters/Cpu/Linux.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Adapters/Cpu/Abstract.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Adapters_Cpu_Abstract" refers="\phpRack_Adapters_Cpu_Abstract"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="41" package="Adapters\Cpu">
      <name>phpRack_Adapters_Cpu_Linux</name>
      <full_name>\phpRack_Adapters_Cpu_Linux</full_name>
      <extends>\phpRack_Adapters_Cpu_Abstract</extends>
      <docblock line="35">
        <description><![CDATA[Linux CPU Adapter]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="package" description="Adapters"/>
        <tag line="35" name="subpackage" description="Cpu"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="51" package="Default">
        <name>getBogoMips</name>
        <type>function</type>
        <docblock line="43">
          <description><![CDATA[Get CPU BogoMips]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="43" name="return" description="" type="float">
            <type by_reference="false">float</type>
          </tag>
          <tag line="43" name="throws" description="If unable to get BogoMips" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="43" name="see" description="\phpRack_Package_Cpu_Performance::atLeast()" refers="\phpRack_Package_Cpu_Performance::atLeast()"/>
          <tag line="43" name="see" description="\phpRack_Adapters_Cpu_Abstract::getBogoMips()" refers="\phpRack_Adapters_Cpu_Abstract::getBogoMips()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="75" package="Default">
        <name>getCpuFrequency</name>
        <type>function</type>
        <docblock line="67">
          <description><![CDATA[Get CPU frequency in MHz]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="67" name="return" description="" type="float">
            <type by_reference="false">float</type>
          </tag>
          <tag line="67" name="throws" description="If can't get cpu frequency" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="67" name="see" description="\getBogoMips()" refers="\getBogoMips()"/>
          <tag line="67" name="see" description="\phpRack_Adapters_Cpu_Abstract::getCpuFrequency()" refers="\phpRack_Adapters_Cpu_Abstract::getCpuFrequency()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="99" package="Default">
        <name>_getCpuInfoData</name>
        <type>function</type>
        <docblock line="91">
          <description><![CDATA[Get result of "cat /proc/cpuinfo" shell command execution]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="91" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="91" name="throws" description="If unable to execute shell command" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="91" name="see" description="\getBogoMips()" refers="\getBogoMips()"/>
          <tag line="91" name="see" description="\getCpuFrequency()" refers="\getCpuFrequency()"/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="phpRack/Adapters/Pear/Package.php" hash="bd642b41c0827ffe35890a77a3b389a7">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Adapters/Pear/Package.php</error>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="35" package="Adapters">
      <name>phpRack_Adapters_Pear_Package</name>
      <full_name>\phpRack_Adapters_Pear_Package</full_name>
      <extends/>
      <docblock line="30">
        <description><![CDATA[PEAR adapter used for checking PEAR packages availability]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="package" description="Adapters"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="44" package="Default">
        <name>$_name</name>
        <default><![CDATA[]]></default>
        <docblock line="37">
          <description><![CDATA[Package name]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="37" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="37" name="see" description="\__construct()" refers="\__construct()"/>
          <tag line="37" name="see" description="\getName()" refers="\getName()"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="54" package="Default">
        <name>$_rawInfo</name>
        <default><![CDATA[]]></default>
        <docblock line="46">
          <description><![CDATA[Raw package info returned from "pear info $packageName" command]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="46" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="46" name="see" description="\__construct()" refers="\__construct()"/>
          <tag line="46" name="see" description="\getName()" refers="\getName()"/>
          <tag line="46" name="see" description="\getVersion()" refers="\getVersion()"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="63" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="56">
          <description><![CDATA[Construct the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="56" name="param" description="Name of the package" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="56" name="throws" description="if PEAR is not installed properly" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="56" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="63">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="86" package="Default">
        <name>getName</name>
        <type>function</type>
        <docblock line="81">
          <description><![CDATA[Get name of the package]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="81" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="98" package="Default">
        <name>getVersion</name>
        <type>function</type>
        <docblock line="91">
          <description><![CDATA[Check whether Package exists]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="91" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="91" name="throws" description="If package has invalid version number" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="91" name="see" description="\phpRack_Package_Pear::package()" refers="\phpRack_Package_Pear::package()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="113" package="Default">
        <name>getRawInfo</name>
        <type>function</type>
        <docblock line="107">
          <description><![CDATA[Get package raw info]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="107" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="107" name="see" description="\phpRack_Package_Pear::package()" refers="\phpRack_Package_Pear::package()"/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="phpRack/Suite/library/LogViewerTest.php" hash="af7d2930bd9eacf0966e6c4b9919f304">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Suite/library/LogViewerTest.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Suite/Test.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Suite_Test" refers="\phpRack_Suite_Test"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="40" package="Tests">
      <name>phpRack_Suite_LogViewerTest</name>
      <full_name>\phpRack_Suite_LogViewerTest</full_name>
      <extends>\phpRack_Suite_Test</extends>
      <docblock line="35">
        <description><![CDATA[View log file]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="package" description="Tests"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="47" package="Default">
        <name>$_config</name>
        <default><![CDATA[array(
        'file' => 'php://temp',
    )]]></default>
        <docblock line="42">
          <description><![CDATA[Configuration options]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="42" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="56" package="Default">
        <name>testShowLogFile</name>
        <type>function</type>
        <docblock line="51">
          <description><![CDATA[View log file in AJAX mode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="51" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="phpRack/Suite/library/ServerHealth/TopProcessesTest.php" hash="b5f4095d9cfd7b5d81cd329438ad0dec">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Suite/library/ServerHealth/TopProcessesTest.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Suite/Test.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Suite_Test" refers="\phpRack_Suite_Test"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="40" package="Tests">
      <name>phpRack_Suite_ServerHealth_ProcessesTest</name>
      <full_name>\phpRack_Suite_ServerHealth_ProcessesTest</full_name>
      <extends>\phpRack_Suite_Test</extends>
      <docblock line="35">
        <description><![CDATA[List of processes running on the server]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="package" description="Tests"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="47" package="Default">
        <name>_init</name>
        <type>function</type>
        <docblock line="42">
          <description><![CDATA[Pre-configuration of the test]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="42" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="63" package="Default">
        <name>testShowProcesses</name>
        <type>function</type>
        <docblock line="56">
          <description><![CDATA[Show full list of top-processes and some other supplementary information]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="56" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="56" name="todo" description="#48 This test works only on Linux, so we should change it&#10;soon to something more portable"/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="phpRack/Suite/library/Php5/PhpinfoTest.php" hash="a1fb08c6aa1c7d106539319f0e6dcc4d">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Suite/library/Php5/PhpinfoTest.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Suite/Test.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Suite_Test" refers="\phpRack_Suite_Test"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="40" package="Tests">
      <name>phpRack_Suite_Php5_PhpinfoTest</name>
      <full_name>\phpRack_Suite_Php5_PhpinfoTest</full_name>
      <extends>\phpRack_Suite_Test</extends>
      <docblock line="35">
        <description><![CDATA[View phpinfo()]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="package" description="Tests"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="47" package="Default">
        <name>testShowPhpinfo</name>
        <type>function</type>
        <docblock line="42">
          <description><![CDATA[Show phpinfo()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="42" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="phpRack/Suite/Test.php" hash="bd07f0e1815158e7234b8562bc90e671">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Suite/Test.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Test.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Test" refers="\phpRack_Test"/>
      </docblock>
    </include>
    <class final="false" abstract="true" namespace="default" line="40" package="Tests">
      <name>PhpRack_Suite_Test</name>
      <full_name>\PhpRack_Suite_Test</full_name>
      <extends>\phpRack_Test</extends>
      <docblock line="35">
        <description><![CDATA[Parent class of all tests in suite library]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="package" description="Tests"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="48" package="Default">
        <name>$_config</name>
        <default><![CDATA[array()]]></default>
        <docblock line="42">
          <description><![CDATA[Configuration options]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="42" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="42" name="see" description="\setConfig()" refers="\setConfig()"/>
        </docblock>
      </property>
      <method final="true" abstract="false" static="false" visibility="public" namespace="default" line="57" package="Default">
        <name>setConfig</name>
        <type>function</type>
        <docblock line="50">
          <description><![CDATA[Set configuration params]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="50" name="param" description="List of configuration options" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
          <tag line="50" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="50" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="57">
          <name>$config</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="phpRack/Package/Db.php" hash="b1fd3556d7151fbbc8af6506b56cd18e">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Package/Db.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Package.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Package" refers="\phpRack_Package"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="40" package="Tests">
      <name>phpRack_Package_Db</name>
      <full_name>\phpRack_Package_Db</full_name>
      <extends>\phpRack_Package</extends>
      <docblock line="35">
        <description><![CDATA[DB related assertions]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="package" description="Tests"/>
      </docblock>
    </class>
  </file>
  <file path="phpRack/Package/Php/Extensions.php" hash="be2c4eeb1557ab2460b34bd9fe6209f7">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Package/Php/Extensions.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Package.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Package" refers="\phpRack_Package"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="40" package="Tests">
      <name>phpRack_Package_Php_Extensions</name>
      <full_name>\phpRack_Package_Php_Extensions</full_name>
      <extends>\phpRack_Package</extends>
      <docblock line="35">
        <description><![CDATA[PHP related assertions]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="package" description="Tests"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="48" package="Default">
        <name>showAll</name>
        <type>function</type>
        <docblock line="43">
          <description><![CDATA[Show full list of loaded extensions]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="43" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="61" package="Default">
        <name>isLoaded</name>
        <type>function</type>
        <docblock line="55">
          <description><![CDATA[Given extension is loaded?]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="55" name="param" description="Name of the extension to check" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="55" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
        </docblock>
        <argument line="61">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="phpRack/Package/Php/Extensions/Fileinfo.php" hash="7b67f1946ea48b676743e73b1900941e">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Package/Php/Extensions/Fileinfo.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Package.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Package" refers="\phpRack_Package"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="40" package="Tests">
      <name>phpRack_Package_Php_Extensions_Fileinfo</name>
      <full_name>\phpRack_Package_Php_Extensions_Fileinfo</full_name>
      <extends>\phpRack_Package</extends>
      <docblock line="35">
        <description><![CDATA[fileinfo to validate]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="package" description="Tests"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="48" package="Default">
        <name>isAlive</name>
        <type>function</type>
        <docblock line="43">
          <description><![CDATA[Extension is properly configured?]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="43" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="phpRack/Package/Php/Version.php" hash="e90b63658d57a711f9fdb928ddafdf14">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Package/Php/Version.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Package.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Package" refers="\phpRack_Package"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="40" package="Tests">
      <name>phpRack_Package_Php_Version</name>
      <full_name>\phpRack_Package_Php_Version</full_name>
      <extends>\phpRack_Package</extends>
      <docblock line="35">
        <description><![CDATA[PHP-version related assertions]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="package" description="Tests"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="50" package="Default">
        <name>atLeast</name>
        <type>function</type>
        <docblock line="43">
          <description><![CDATA[Current version is newer than given one?]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="43" name="param" description="Version name" type="string" variable="$version">
            <type by_reference="false">string</type>
          </tag>
          <tag line="43" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
          <tag line="43" name="see" description="\http://www.php.net/manual/en/function.version-compare.php" refers="\http://www.php.net/manual/en/function.version-compare.php"/>
        </docblock>
        <argument line="50">
          <name>$version</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="phpRack/Package/Php/Pear.php" hash="7b03a8004033772c9ac354be8a88fd78">
    <parse_markers>
      <error line="64" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $result in __construct()</error>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Package/Php/Pear.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Package.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Package" refers="\phpRack_Package"/>
      </docblock>
    </include>
    <include line="38" type="Require Once" package="Default">
      <name>/Adapters/Pear.php</name>
      <docblock line="35">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="see" description="\phpRack_Adapters_Pear" refers="\phpRack_Adapters_Pear"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="45" package="Tests">
      <name>phpRack_Package_Php_Pear</name>
      <full_name>\phpRack_Package_Php_Pear</full_name>
      <extends>\phpRack_Package</extends>
      <docblock line="40">
        <description><![CDATA[PEAR package used for checking PEAR packages availability]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="40" name="package" description="Tests"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="54" package="Default">
        <name>$_pear</name>
        <default><![CDATA[]]></default>
        <docblock line="48">
          <description><![CDATA[Pear adapter]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="48" name="var" description="" type="\phpRack_Adapters_Pear">
            <type by_reference="false">\phpRack_Adapters_Pear</type>
          </tag>
          <tag line="48" name="see" description="\__construct()" refers="\__construct()"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="62" package="Default">
        <name>$_package</name>
        <default><![CDATA[]]></default>
        <docblock line="56">
          <description><![CDATA[Pear package]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="56" name="var" description="" type="\phpRack_Adapters_Pear">
            <type by_reference="false">\phpRack_Adapters_Pear</type>
          </tag>
          <tag line="56" name="see" description="\package()" refers="\package()"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="71" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="64">
          <description><![CDATA[Construct the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="64" name="param" description="phpRack_Result" type="" variable="$result"/>
          <tag line="64" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="64" name="see" description="\phpRack_Package::__construct()" refers="\phpRack_Package::__construct()"/>
        </docblock>
        <argument line="71">
          <name>$result</name>
          <default><![CDATA[]]></default>
          <type>phpRack_Result</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="84" package="Default">
        <name>package</name>
        <type>function</type>
        <docblock line="77">
          <description><![CDATA[Check whether PEAR package exists]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="77" name="param" description="Package name to check" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="77" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
          <tag line="77" name="see" description="\PearTest::testPearPackages()" refers="\PearTest::testPearPackages()"/>
        </docblock>
        <argument line="84">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="106" package="Default">
        <name>atLeast</name>
        <type>function</type>
        <docblock line="99">
          <description><![CDATA[Check that least this version of PEAR package is present]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="99" name="param" description="Version number, required" type="string" variable="$requiredVersion">
            <type by_reference="false">string</type>
          </tag>
          <tag line="99" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
          <tag line="99" name="see" description="\PearTest::testPearPackages()" refers="\PearTest::testPearPackages()"/>
        </docblock>
        <argument line="106">
          <name>$requiredVersion</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="132" package="Default">
        <name>showList</name>
        <type>function</type>
        <docblock line="126">
          <description><![CDATA[Show full list of installed packages]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="126" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
          <tag line="126" name="see" description="\PearTest::testShowPearPackages()" refers="\PearTest::testShowPearPackages()"/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="phpRack/Package/Db/Mysql.php" hash="d8d24debb2addef66e891f6c0a68cb77">
    <parse_markers>
      <error line="55" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $result in __construct()</error>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Package/Db/Mysql.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Package.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Package" refers="\phpRack_Package"/>
      </docblock>
    </include>
    <include line="38" type="Require Once" package="Default">
      <name>/Adapters/Db/Mysql.php</name>
      <docblock line="35">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="see" description="\phpRack_Adapters_Db_Mysql" refers="\phpRack_Adapters_Db_Mysql"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="45" package="Tests">
      <name>phpRack_Package_Db_Mysql</name>
      <full_name>\phpRack_Package_Db_Mysql</full_name>
      <extends>\phpRack_Package</extends>
      <docblock line="40">
        <description><![CDATA[Db abstract]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="40" name="package" description="Tests"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="53" package="Default">
        <name>$_adapter</name>
        <default><![CDATA[]]></default>
        <docblock line="47">
          <description><![CDATA[MySQL adapter]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="47" name="var" description="" type="\phpRack_Adapters_Db_Mysql">
            <type by_reference="false">\phpRack_Adapters_Db_Mysql</type>
          </tag>
          <tag line="47" name="see" description="\__construct()" refers="\__construct()"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="62" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="55">
          <description><![CDATA[Construct the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="55" name="param" description="phpRack_Result" type="" variable="$result"/>
          <tag line="55" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="55" name="see" description="\phpRack_Package::__construct()" refers="\phpRack_Package::__construct()"/>
        </docblock>
        <argument line="62">
          <name>$result</name>
          <default><![CDATA[]]></default>
          <type>phpRack_Result</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="82" package="Default">
        <name>connect</name>
        <type>function</type>
        <docblock line="68">
          <description><![CDATA[Check that we can connect to mysql server]]></description>
          <long-description><![CDATA[<p>This method converts connection parameters to JDBC URL, and uses
DB adapter in order to establish a real connection with MySQL. We
url-encode all parameters, since JDBC URL is just an URL after all.</p>]]></long-description>
          <tag line="68" name="param" description="Host" type="string" variable="$host">
            <type by_reference="false">string</type>
          </tag>
          <tag line="68" name="param" description="Port" type="integer" variable="$port">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="68" name="param" description="User name" type="string" variable="$username">
            <type by_reference="false">string</type>
          </tag>
          <tag line="68" name="param" description="User password" type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="68" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
          <tag line="68" name="see" description="\phpRack_Adapters_Db_Mysql" refers="\phpRack_Adapters_Db_Mysql"/>
        </docblock>
        <argument line="82">
          <name>$host</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="82">
          <name>$port</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="82">
          <name>$username</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="82">
          <name>$password</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="107" package="Default">
        <name>dbExists</name>
        <type>function</type>
        <docblock line="99">
          <description><![CDATA[Check that database exists, and selects this database as current]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="99" name="param" description="Database name" type="string" variable="$dbName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="99" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
          <tag line="99" name="see" description="\connect()" refers="\connect()"/>
          <tag line="99" name="throws" description="If this method is called before connect()" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="107">
          <name>$dbName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="132" package="Default">
        <name>tableExists</name>
        <type>function</type>
        <docblock line="123">
          <description><![CDATA[Check that table exists]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="123" name="param" description="Table name" type="string" variable="$tableName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="123" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
          <tag line="123" name="see" description="\connect()" refers="\connect()"/>
          <tag line="123" name="throws" description="If this method is called before connect()" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="123" name="throws" description="If this method is called before dbExists()" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="132">
          <name>$tableName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="160" package="Default">
        <name>query</name>
        <type>function</type>
        <docblock line="152">
          <description><![CDATA[Execute query and return results]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="152" name="param" description="Query to execute" type="string" variable="$query">
            <type by_reference="false">string</type>
          </tag>
          <tag line="152" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
          <tag line="152" name="see" description="\connect()" refers="\connect()"/>
          <tag line="152" name="throws" description="If this method is called before connect()" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="160">
          <name>$query</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="184" package="Default">
        <name>showSchema</name>
        <type>function</type>
        <docblock line="176">
          <description><![CDATA[Show database schema]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="176" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
          <tag line="176" name="throws" description="If this method is called before connect()" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="176" name="throws" description="If this method is called before dbExists()" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="176" name="throws" description="If something wrong happen during getting database schema" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="206" package="Default">
        <name>showConnections</name>
        <type>function</type>
        <docblock line="200">
          <description><![CDATA[Show connections and their status]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="200" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
          <tag line="200" name="throws" description="If this method is called before connect()" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="227" package="Default">
        <name>showServerInfo</name>
        <type>function</type>
        <docblock line="221">
          <description><![CDATA[Show server info]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="221" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
          <tag line="221" name="throws" description="If this method is called before connect()" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="242" package="Default">
        <name>closeConnection</name>
        <type>function</type>
        <docblock line="237">
          <description><![CDATA[Close connection to db]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="237" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="phpRack/Package/Php.php" hash="e40ac92eb9167ffe0c8cfc51bb0b6218">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Package/Php.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Package.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Package" refers="\phpRack_Package"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="40" package="Tests">
      <name>phpRack_Package_Php</name>
      <full_name>\phpRack_Package_Php</full_name>
      <extends>\phpRack_Package</extends>
      <docblock line="35">
        <description><![CDATA[PHP related assertions]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="package" description="Tests"/>
      </docblock>
      <constant namespace="default" line="48" package="Default">
        <name>SIZE_FORMAT</name>
        <value><![CDATA[1024]]></value>
        <docblock line="42">
          <description><![CDATA[Format of a megabyte]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="42" name="see" description="\http://en.wikipedia.org/wiki/Megabyte" refers="\http://en.wikipedia.org/wiki/Megabyte"/>
          <tag line="42" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="protected" line="55" package="Default">
        <name>$_iniValue</name>
        <default><![CDATA[]]></default>
        <docblock line="50">
          <description><![CDATA[Storage for the ini value]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="50" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="74" package="Default">
        <name>ini</name>
        <type>function</type>
        <docblock line="57">
          <description><![CDATA[Check php.ini param with expected value]]></description>
          <long-description><![CDATA[<p>Good example:</p>

<pre><code>class MyTest extends phpRack_Test {
  public fuction testPhpIni() {
    $this->assert->php->ini('short_open_tag');
  }
}
</code></pre>]]></long-description>
          <tag line="57" name="param" description="Name of param to check" type="string" variable="$param">
            <type by_reference="false">string</type>
          </tag>
          <tag line="57" name="param" description="Expected value" type="mixed" variable="$expected">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="57" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
        </docblock>
        <argument line="74">
          <name>$param</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="74">
          <name>$expected</name>
          <default><![CDATA[true]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="103" package="Default">
        <name>atLeast</name>
        <type>function</type>
        <docblock line="87">
          <description><![CDATA[Check value according required size]]></description>
          <long-description><![CDATA[<p>Example:</p>

<pre><code>class MyTest extends phpRack_Test {
  public fuction testPhpIniAtleast() {
    $this->assert->php->ini('memory_limit')->atLeast('128M');
  }
}
</code></pre>]]></long-description>
          <tag line="87" name="param" description="value to check" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="87" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
        </docblock>
        <argument line="103">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="126" package="Default">
        <name>phpinfo</name>
        <type>function</type>
        <docblock line="121">
          <description><![CDATA[Show phpinfo() in proper format]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="121" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="190" package="Default">
        <name>lint</name>
        <type>function</type>
        <docblock line="166">
          <description><![CDATA[Check files in directory have correct php syntax]]></description>
          <long-description><![CDATA[<p>Possible options are:</p>

<pre><code>class MyTest extends phpRack_Test {
  public function testCodeValidity() {
    $this->assert->php->lint(
      '/home/myproject/php', // path to PHP files
      array(
        'extensions' => 'php,phtml', // comma-separated list of extensions to parse
        'exclude' => array('/\.svn/'), // list of RegExps to exclude
        'verbose' => true, // show detailed log, with one file per line
      )
    );
  }
}
</code></pre>]]></long-description>
          <tag line="166" name="param" description="Directory path to check" type="string" variable="$dir">
            <type by_reference="false">string</type>
          </tag>
          <tag line="166" name="param" description="List of options" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="166" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
        </docblock>
        <argument line="190">
          <name>$dir</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="190">
          <name>$options</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="258" package="Default">
        <name>_sizeFormat</name>
        <type>function</type>
        <docblock line="252">
          <description><![CDATA[Convert string into size]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="252" name="param" description="value to convert" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="252" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="258">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="phpRack/Package/Simple.php" hash="4edaf8eb177e31766141fff3935a9395">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Package/Simple.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Package.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Package" refers="\phpRack_Package"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="40" package="Tests">
      <name>phpRack_Package_Simple</name>
      <full_name>\phpRack_Package_Simple</full_name>
      <extends>\phpRack_Package</extends>
      <docblock line="35">
        <description><![CDATA[Simple package, for simple assertions]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="package" description="Tests"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="49" package="Default">
        <name>fail</name>
        <type>function</type>
        <docblock line="43">
          <description><![CDATA[Just fail the test]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="43" name="param" description="Message to show" type="string" variable="$msg">
            <type by_reference="false">string</type>
          </tag>
          <tag line="43" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
        </docblock>
        <argument line="49">
          <name>$msg</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="61" package="Default">
        <name>success</name>
        <type>function</type>
        <docblock line="55">
          <description><![CDATA[Mark the test as successful]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="55" name="param" description="Message to show" type="string" variable="$msg">
            <type by_reference="false">string</type>
          </tag>
          <tag line="55" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
        </docblock>
        <argument line="61">
          <name>$msg</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="73" package="Default">
        <name>isTrue</name>
        <type>function</type>
        <docblock line="67">
          <description><![CDATA[Is it true?]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="67" name="param" description="Variable to check" type="mixed" variable="$var">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="67" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$var</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="89" package="Default">
        <name>isFalse</name>
        <type>function</type>
        <docblock line="83">
          <description><![CDATA[Is it false?]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="83" name="param" description="Variable to check" type="mixed" variable="$var">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="83" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
        </docblock>
        <argument line="89">
          <name>$var</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="phpRack/Package/Shell.php" hash="b8114b1fc72b383fcbf5cb30458103f9">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Package/Shell.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Package.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Package" refers="\phpRack_Package"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="40" package="Tests">
      <name>phpRack_Package_Shell</name>
      <full_name>\phpRack_Package_Shell</full_name>
      <extends>\phpRack_Package</extends>
      <docblock line="35">
        <description><![CDATA[Assertions related to SHELL]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="package" description="Tests"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="61" package="Default">
        <name>exec</name>
        <type>function</type>
        <docblock line="43">
          <description><![CDATA[Execute a command and tries to find a regex inside it's result]]></description>
          <long-description><![CDATA[<p>Use it like this, to make sure that PHP scripts are started
by "apache" user:</p>

<pre><code>class MyTest extends phpRack_Test {
  public function testAuthorship() {
    $this->assert->shell->exec('whoami', '/apache/');
  }
}
</code></pre>]]></long-description>
          <tag line="43" name="param" description="Command to run" type="string" variable="$cmd">
            <type by_reference="false">string</type>
          </tag>
          <tag line="43" name="param" description="Regular exception" type="string" variable="$regex">
            <type by_reference="false">string</type>
          </tag>
          <tag line="43" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
        </docblock>
        <argument line="61">
          <name>$cmd</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="61">
          <name>$regex</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="phpRack/Package/Network/Ports.php" hash="955370dfaf1fd143ba562c62ac1d3837">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Package/Network/Ports.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Package.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Package" refers="\phpRack_Package"/>
      </docblock>
    </include>
    <include line="38" type="Require Once" package="Default">
      <name>/Adapters/Url.php</name>
      <docblock line="35">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="see" description="\phpRack_Adapters_Url" refers="\phpRack_Adapters_Url"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="45" package="Tests">
      <name>phpRack_Package_Network_Ports</name>
      <full_name>\phpRack_Package_Network_Ports</full_name>
      <extends>\phpRack_Package</extends>
      <docblock line="40">
        <description><![CDATA[Ports on the server]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="40" name="package" description="Tests"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="55" package="Default">
        <name>isOpen</name>
        <type>function</type>
        <docblock line="48">
          <description><![CDATA[This port is open on this machine as INPUT port?]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="48" name="param" description="Port number to check" type="integer" variable="$port">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="48" name="param" description="IP address of the server to check" type="string" variable="$server">
            <type by_reference="false">string</type>
          </tag>
          <tag line="48" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
        </docblock>
        <argument line="55">
          <name>$port</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="55">
          <name>$server</name>
          <default><![CDATA['127.0.0.1']]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="phpRack/Package/Network/Url.php" hash="43e88c085041106c39d481a024f49264">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Package/Network/Url.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Package.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Package" refers="\phpRack_Package"/>
      </docblock>
    </include>
    <include line="38" type="Require Once" package="Default">
      <name>/Adapters/Url.php</name>
      <docblock line="35">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="see" description="\phpRack_Adapters_Url" refers="\phpRack_Adapters_Url"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="45" package="Tests">
      <name>phpRack_Package_Network_Url</name>
      <full_name>\phpRack_Package_Network_Url</full_name>
      <extends>\phpRack_Package</extends>
      <docblock line="40">
        <description><![CDATA[Network check using Url]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="40" name="package" description="Tests"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="54" package="Default">
        <name>$_adapter</name>
        <default><![CDATA[]]></default>
        <docblock line="47">
          <description><![CDATA[Adapter used for cummunication with server]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="47" name="var" description="" type="\phpRack_Adapters_Url">
            <type by_reference="false">\phpRack_Adapters_Url</type>
          </tag>
          <tag line="47" name="see" description="\url()" refers="\url()"/>
          <tag line="47" name="see" description="\regexp()" refers="\regexp()"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="63" package="Default">
        <name>$_url</name>
        <default><![CDATA[]]></default>
        <docblock line="56">
          <description><![CDATA[Contain url passed to url function, used in other methods of this class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="56" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="56" name="see" description="\url()" refers="\url()"/>
          <tag line="56" name="see" description="\regex()" refers="\regex()"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="73" package="Default">
        <name>url</name>
        <type>function</type>
        <docblock line="65">
          <description><![CDATA[Set URL and validate it]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="65" name="param" description="URL" type="string" variable="$url">
            <type by_reference="false">string</type>
          </tag>
          <tag line="65" name="param" description="Options which will affect connection" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="65" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
          <tag line="65" name="throws" description="if URL is invalid" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$url</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="73">
          <name>$options</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="89" package="Default">
        <name>regex</name>
        <type>function</type>
        <docblock line="80">
          <description><![CDATA[Make HTTP call and check that pattern exists in result]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="80" name="param" description="Pattern to check" type="string" variable="$pattern">
            <type by_reference="false">string</type>
          </tag>
          <tag line="80" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
          <tag line="80" name="see" description="\url()" refers="\url()"/>
          <tag line="80" name="throws" description="If this method is called before url()" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="80" name="throws" description="If can't connect" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="89">
          <name>$pattern</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="phpRack/Package/Cpu.php" hash="9731406bb891759a2aac05e4f4a9057c">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Package/Cpu.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Package.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Package" refers="\phpRack_Package"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="40" package="Tests">
      <name>phpRack_Package_Cpu</name>
      <full_name>\phpRack_Package_Cpu</full_name>
      <extends>\phpRack_Package</extends>
      <docblock line="35">
        <description><![CDATA[CPU related assertions]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="package" description="Tests"/>
      </docblock>
    </class>
  </file>
  <file path="phpRack/Package/Disc.php" hash="085bdba2168c9f8754df745c914ed21f">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Package/Disc.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Package.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Package" refers="\phpRack_Package"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="40" package="Tests">
      <name>phpRack_Package_Disc</name>
      <full_name>\phpRack_Package_Disc</full_name>
      <extends>\phpRack_Package</extends>
      <docblock line="35">
        <description><![CDATA[Local HDD related assertions]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="package" description="Tests"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="50" package="Default">
        <name>showDirectory</name>
        <type>function</type>
        <docblock line="43">
          <description><![CDATA[Show directory structure]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="43" name="param" description="Relative path, in relation to the location of {@link PHPRACK_PATH} file" type="string" variable="$dir">
            <type by_reference="false">string</type>
          </tag>
          <tag line="43" name="param" description="List of options" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="43" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$dir</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="50">
          <name>$options</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="90" package="Default">
        <name>_convertDirectoriesToLines</name>
        <type>function</type>
        <docblock line="82">
          <description><![CDATA[Convert list of files to lines to show]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="82" name="param" description="List of files" type="\Iterator" variable="$iterator">
            <type by_reference="false">\Iterator</type>
          </tag>
          <tag line="82" name="param" description="Parent directory name, absolute" type="string" variable="$dir">
            <type by_reference="false">string</type>
          </tag>
          <tag line="82" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="82" name="see" description="\showDirectory()" refers="\showDirectory()"/>
        </docblock>
        <argument line="90">
          <name>$iterator</name>
          <default><![CDATA[]]></default>
          <type>Iterator</type>
        </argument>
        <argument line="90">
          <name>$dir</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="phpRack/Package/Disc/FreeSpace.php" hash="5d24a4351ca44bdb36a9fe25fc42fcb0">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Package/Disc/FreeSpace.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Package.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Package" refers="\phpRack_Package"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="40" package="Tests">
      <name>phpRack_Package_Disc_FreeSpace</name>
      <full_name>\phpRack_Package_Disc_FreeSpace</full_name>
      <extends>\phpRack_Package</extends>
      <docblock line="35">
        <description><![CDATA[Free space on HDD]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="package" description="Tests"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="49" package="Default">
        <name>atLeast</name>
        <type>function</type>
        <docblock line="43">
          <description><![CDATA[We have at least this amount of space on the current disc?]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="43" name="param" description="Mega-bytes to check" type="integer" variable="$mb">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="43" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
        </docblock>
        <argument line="49">
          <name>$mb</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="phpRack/Package/Disc/File.php" hash="23ad9c30e9c97ff38f5dbdd6f5541dde">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Package/Disc/File.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Package.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Package" refers="\phpRack_Package"/>
      </docblock>
    </include>
    <include line="38" type="Require Once" package="Default">
      <name>/Adapters/File.php</name>
      <docblock line="35">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="see" description="\phpRack_Adapters_File" refers="\phpRack_Adapters_File"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="45" package="Tests">
      <name>phpRack_Package_Disc_File</name>
      <full_name>\phpRack_Package_Disc_File</full_name>
      <extends>\phpRack_Package</extends>
      <docblock line="40">
        <description><![CDATA[File informations and content]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="40" name="package" description="Tests"/>
      </docblock>
      <constant namespace="default" line="50" package="Default">
        <name>READ_BUFFER_SIZE</name>
        <value><![CDATA[1024]]></value>
        <docblock line="47">
          <description><![CDATA[Buffer used is tail function to read blocks from file end]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="default" line="55" package="Default">
        <name>LINES_TO_SHOW</name>
        <value><![CDATA[25]]></value>
        <docblock line="52">
          <description><![CDATA[Default number of lines to show]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="protected" line="62" package="Default">
        <name>$_maxBytesToRender</name>
        <default><![CDATA[50000]]></default>
        <docblock line="57">
          <description><![CDATA[Maximum number of bytes we can render, if more we will skip the rest]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="57" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="70" package="Default">
        <name>setMaxBytesToRender</name>
        <type>function</type>
        <docblock line="64">
          <description><![CDATA[Set another limit for max bytes to render]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="64" name="param" description="Number of bytes that is allowed for rendering" type="int" variable="$maxBytesToRender">
            <type by_reference="false">int</type>
          </tag>
          <tag line="64" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
        </docblock>
        <argument line="70">
          <name>$maxBytesToRender</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="82" package="Default">
        <name>cat</name>
        <type>function</type>
        <docblock line="76">
          <description><![CDATA[Show the content of the file]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="76" name="param" description="File name to display" type="string" variable="$fileName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="76" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
        </docblock>
        <argument line="82">
          <name>$fileName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="119" package="Default">
        <name>tail</name>
        <type>function</type>
        <docblock line="112">
          <description><![CDATA[Show last x lines from the file]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="112" name="param" description="File name" type="string" variable="$fileName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="112" name="param" description="How many lines to display?" type="string" variable="$linesCount">
            <type by_reference="false">string</type>
          </tag>
          <tag line="112" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
        </docblock>
        <argument line="119">
          <name>$fileName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="119">
          <name>$linesCount</name>
          <default><![CDATA[self::LINES_TO_SHOW]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="187" package="Default">
        <name>tailf</name>
        <type>function</type>
        <docblock line="178">
          <description><![CDATA[Show last x lines from the file, and refresh it imediatelly]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="178" name="param" description="File name" type="string" variable="$fileName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="178" name="param" description="How many lines to display?" type="string" variable="$linesCount">
            <type by_reference="false">string</type>
          </tag>
          <tag line="178" name="param" description="How many seconds each line should be visible" type="string" variable="$secVisible">
            <type by_reference="false">string</type>
          </tag>
          <tag line="178" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
          <tag line="178" name="see" description="\phpRack_Runner::run()" refers="\phpRack_Runner::run()"/>
        </docblock>
        <argument line="187">
          <name>$fileName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="187">
          <name>$linesCount</name>
          <default><![CDATA[self::LINES_TO_SHOW]]></default>
          <type/>
        </argument>
        <argument line="187">
          <name>$secVisible</name>
          <default><![CDATA[5]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="257" package="Default">
        <name>head</name>
        <type>function</type>
        <docblock line="250">
          <description><![CDATA[Show first x lines from the file]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="250" name="param" description="File name" type="string" variable="$fileName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="250" name="param" description="How many lines to display?" type="string" variable="$linesCount">
            <type by_reference="false">string</type>
          </tag>
          <tag line="250" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
        </docblock>
        <argument line="257">
          <name>$fileName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="257">
          <name>$linesCount</name>
          <default><![CDATA[self::LINES_TO_SHOW]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="304" package="Default">
        <name>exists</name>
        <type>function</type>
        <docblock line="298">
          <description><![CDATA[Checks whether a file exists]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="298" name="param" description="File name to check" type="string" variable="$fileName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="298" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
        </docblock>
        <argument line="304">
          <name>$fileName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="323" package="Default">
        <name>isReadable</name>
        <type>function</type>
        <docblock line="317">
          <description><![CDATA[Checks whether a file is readable]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="317" name="param" description="File name to check" type="string" variable="$fileName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="317" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
        </docblock>
        <argument line="323">
          <name>$fileName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="342" package="Default">
        <name>isWritable</name>
        <type>function</type>
        <docblock line="336">
          <description><![CDATA[Check whether a file is writable]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="336" name="param" description="File name to check" type="string" variable="$fileName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="336" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
        </docblock>
        <argument line="342">
          <name>$fileName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="361" package="Default">
        <name>isDir</name>
        <type>function</type>
        <docblock line="355">
          <description><![CDATA[Check whether the filename is a directory]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="355" name="param" description="File name to check" type="string" variable="$fileName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="355" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
        </docblock>
        <argument line="361">
          <name>$fileName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="380" package="Default">
        <name>_isFileExists</name>
        <type>function</type>
        <docblock line="374">
          <description><![CDATA[Check that file exists]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="374" name="param" description="File name to check" type="string" variable="$fileName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="374" name="return" description="True if file exists" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="380">
          <name>$fileName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="405" package="Default">
        <name>_modifiedOn</name>
        <type>function</type>
        <docblock line="398">
          <description><![CDATA[Show when this file was modified]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="398" name="param" description="Time/date when this file was modifed, result of filemtime()" type="integer" variable="$time">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="398" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="398" name="see" description="\_isFileExists()" refers="\_isFileExists()"/>
        </docblock>
        <argument line="405">
          <name>$time</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="phpRack/Package/Network.php" hash="7790d1831cca1513f64dc788839ed1e1">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Package/Network.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Package.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Package" refers="\phpRack_Package"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="40" package="Tests">
      <name>phpRack_Package_Network</name>
      <full_name>\phpRack_Package_Network</full_name>
      <extends>\phpRack_Package</extends>
      <docblock line="35">
        <description><![CDATA[Network-related assertions]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="package" description="Tests"/>
      </docblock>
    </class>
  </file>
  <file path="phpRack/Package/Cpu/Performance.php" hash="c35468b9eca8a507db7039944e079937">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Package/Cpu/Performance.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Package.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Package" refers="\phpRack_Package"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="40" package="Tests">
      <name>phpRack_Package_Cpu_Performance</name>
      <full_name>\phpRack_Package_Cpu_Performance</full_name>
      <extends>\phpRack_Package</extends>
      <docblock line="35">
        <description><![CDATA[CPU Performance check]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="package" description="Tests"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="49" package="Default">
        <name>atLeast</name>
        <type>function</type>
        <docblock line="42">
          <description><![CDATA[Check whether server CPU has least this BogoMips]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="42" name="param" description="required BogoMips" type="float" variable="$bogoMips">
            <type by_reference="false">float</type>
          </tag>
          <tag line="42" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
          <tag line="42" name="see" description="\PerformanceTest::testServerIsFast()" refers="\PerformanceTest::testServerIsFast()"/>
        </docblock>
        <argument line="49">
          <name>$bogoMips</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="phpRack/Runner/Auth.php" hash="f1df16d2b5fe2e8395ce1ca7526f19dd">
    <parse_markers>
      <error line="100" code="50010">No DocBlock was found for method __construct()</error>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Runner/Auth.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Runner.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Runner" refers="\phpRack_Runner"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="40" package="Tests">
      <name>phpRack_Runner_Auth</name>
      <full_name>\phpRack_Runner_Auth</full_name>
      <extends/>
      <docblock line="35">
        <description><![CDATA[Runner authentication adapter]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="package" description="Tests"/>
      </docblock>
      <constant namespace="default" line="48" package="Default">
        <name>COOKIE_NAME</name>
        <value><![CDATA['phpRack_auth']]></value>
        <docblock line="43">
          <description><![CDATA[COOKIE name]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="43" name="see" description="\isAuthenticated()" refers="\isAuthenticated()"/>
        </docblock>
      </constant>
      <constant namespace="default" line="57" package="Default">
        <name>COOKIE_LIFETIME</name>
        <value><![CDATA[2592000]]></value>
        <docblock line="50">
          <description><![CDATA[COOKIE lifetime in seconds]]></description>
          <long-description><![CDATA[<p>We set to 30 days, which equals to 30 * 24 * 60 * 60 = 2592000</p>]]></long-description>
          <tag line="50" name="see" description="\isAuthenticated()" refers="\isAuthenticated()"/>
        </docblock>
      </constant>
      <constant namespace="default" line="65" package="Default">
        <name>POST_LOGIN</name>
        <value><![CDATA['login']]></value>
        <docblock line="59">
          <description><![CDATA[Form param names]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="59" name="see" description="\isAuthenticated()" refers="\isAuthenticated()"/>
          <tag line="59" name="see" description="\login.phtml" refers="\login.phtml"/>
        </docblock>
      </constant>
      <constant namespace="default" line="66">
        <name>POST_PWD</name>
        <value><![CDATA['password']]></value>
      </constant>
      <constant namespace="default" line="73" package="Default">
        <name>GET_LOGIN</name>
        <value><![CDATA['login']]></value>
        <docblock line="68">
          <description><![CDATA[Param names for authenticating using GET]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="68" name="see" description="\isAuthenticated()" refers="\isAuthenticated()"/>
        </docblock>
      </constant>
      <constant namespace="default" line="74">
        <name>GET_PWD</name>
        <value><![CDATA['password']]></value>
      </constant>
      <property final="false" static="false" visibility="protected" line="82" package="Default">
        <name>$_authResult</name>
        <default><![CDATA[null]]></default>
        <docblock line="76">
          <description><![CDATA[Auth result, if authentication was already performed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="76" name="var" description="" type="\phpRack_Runner_Auth_Result">
            <type by_reference="false">\phpRack_Runner_Auth_Result</type>
          </tag>
          <tag line="76" name="see" description="\authenticate()" refers="\authenticate()"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="91" package="Default">
        <name>$_runner</name>
        <default><![CDATA[null]]></default>
        <docblock line="84">
          <description><![CDATA[Tests runner]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="84" name="var" description="" type="\phpRack_Runner">
            <type by_reference="false">\phpRack_Runner</type>
          </tag>
          <tag line="84" name="see" description="\__construct()" refers="\__construct()"/>
          <tag line="84" name="see" description="\isAuthenticated()" refers="\isAuthenticated()"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="98" package="Default">
        <name>$_options</name>
        <default><![CDATA[null]]></default>
        <docblock line="93">
          <description><![CDATA[Authentication options]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="93" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="100">
        <name>__construct</name>
        <type>function</type>
        <argument line="100">
          <name>$runner</name>
          <default><![CDATA[]]></default>
          <type>phpRack_Runner</type>
        </argument>
        <argument line="100">
          <name>$options</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="115" package="Default">
        <name>authenticate</name>
        <type>function</type>
        <docblock line="106">
          <description><![CDATA[Authenticate the user before running any tests]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="106" name="param" description="Login of the user" type="string" variable="$login">
            <type by_reference="false">string</type>
          </tag>
          <tag line="106" name="param" description="Secret password of the user" type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="106" name="param" description="Defines whether second argument is password or it's hash" type="boolean" variable="$isHash">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="106" name="return" description="" type="\phpRack_Runner_Auth_Result">
            <type by_reference="false">\phpRack_Runner_Auth_Result</type>
          </tag>
          <tag line="106" name="see" description="\bootstrap.php" refers="\bootstrap.php"/>
        </docblock>
        <argument line="115">
          <name>$login</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="115">
          <name>$password</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="115">
          <name>$isHash</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="174" package="Default">
        <name>_tryHttpPost</name>
        <type>function</type>
        <docblock line="165">
          <description><![CDATA[Try HTTP POST authentication method]]></description>
          <long-description><![CDATA[<p>Login/password are provided in HTTP request, through POST params.
we should save them in COOKIE in order to avoid further login requests.</p>]]></long-description>
          <tag line="165" name="throws" description="if some required request parameter is missed" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="165" name="return" description="with retrieved login and hash" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="203" package="Default">
        <name>_tryHttpGet</name>
        <type>function</type>
        <docblock line="194">
          <description><![CDATA[Try HTTP GET authentication method]]></description>
          <long-description><![CDATA[<p>Login/password are provided as GET params as it's only one-time Phing
bridge, we don't store them anywhere</p>]]></long-description>
          <tag line="194" name="throws" description="if some required request parameter is missed" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="194" name="return" description="with retrieved login and hash" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="224" package="Default">
        <name>_tryHttpCookie</name>
        <type>function</type>
        <docblock line="216">
          <description><![CDATA[Try HTTP Cookie authentication method]]></description>
          <long-description><![CDATA[<p>Login/password are provided as GET params as it's only one-time Phing
bridge, we don't store them anywhere</p>]]></long-description>
          <tag line="216" name="return" description="with retrieved login and hash" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="250" package="Default">
        <name>_tryPlainAuth</name>
        <type>function</type>
        <docblock line="242">
          <description><![CDATA[Try HTTP Plan authentication method]]></description>
          <long-description><![CDATA[<p>We expect authentication information to be sent via headers for example
by Phing</p>]]></long-description>
          <tag line="242" name="return" description="with retrieved login and hash" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="269" package="Default">
        <name>isAuthenticated</name>
        <type>function</type>
        <docblock line="263">
          <description><![CDATA[Checks whether user is authenticated before running any tests]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="263" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="263" name="see" description="\bootstrap.php" refers="\bootstrap.php"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="310" package="Default">
        <name>getAuthResult</name>
        <type>function</type>
        <docblock line="303">
          <description><![CDATA[Get current auth result, if it exists]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="303" name="return" description="" type="\phpRack_Runner_Auth_Result">
            <type by_reference="false">\phpRack_Runner_Auth_Result</type>
          </tag>
          <tag line="303" name="see" description="\boostrap.php" refers="\boostrap.php"/>
          <tag line="303" name="throws" description="If the result is not set yet" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="326" package="Default">
        <name>_validated</name>
        <type>function</type>
        <docblock line="318">
          <description><![CDATA[Save and return an AuthResult]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="318" name="param" description="Success/failure of the validation" type="boolean" variable="$result">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="318" name="param" description="Optional error message" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="318" name="return" description="" type="\phpRack_Runner_Auth_Result">
            <type by_reference="false">\phpRack_Runner_Auth_Result</type>
          </tag>
          <tag line="318" name="see" description="\authenticate()" refers="\authenticate()"/>
        </docblock>
        <argument line="326">
          <name>$result</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="326">
          <name>$message</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="phpRack/Runner/Auth/Result.php" hash="d22dc8867c94d0a349e3deb6ce9a14ef">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Runner/Auth/Result.php</error>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="36" package="Tests">
      <name>phpRack_Runner_Auth_Result</name>
      <full_name>\phpRack_Runner_Auth_Result</full_name>
      <extends/>
      <docblock line="30">
        <description><![CDATA[Result of authentication before running tests]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="package" description="Tests"/>
        <tag line="30" name="see" description="\phpRack_Runner_Auth::_validated()" refers="\phpRack_Runner_Auth::_validated()"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="45" package="Default">
        <name>$_valid</name>
        <default><![CDATA[]]></default>
        <docblock line="39">
          <description><![CDATA[Stores auth result]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="39" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="39" name="see" description="\isValid()" refers="\isValid()"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="53" package="Default">
        <name>$_message</name>
        <default><![CDATA[]]></default>
        <docblock line="47">
          <description><![CDATA[Optional error message]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="47" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="47" name="see" description="\isValid()" refers="\isValid()"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="62" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="55">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="55" name="param" description="Whether the auth is valid or not" type="boolean" variable="$valid">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="55" name="param" description="Optional error message" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="55" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="62">
          <name>$valid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="62">
          <name>$message</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="73" package="Default">
        <name>isValid</name>
        <type>function</type>
        <docblock line="68">
          <description><![CDATA[Result is VALID?]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="68" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="83" package="Default">
        <name>getMessage</name>
        <type>function</type>
        <docblock line="78">
          <description><![CDATA[Error message, if exists]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="78" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="phpRack/Runner/Logger.php" hash="f88d85754c6a1ab8640695b884c90597">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Runner/Logger.php</error>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="36" package="Tests">
      <name>phpRack_Runner_Logger</name>
      <full_name>\phpRack_Runner_Logger</full_name>
      <extends/>
      <docblock line="30">
        <description><![CDATA[Runner logger]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="package" description="Tests"/>
        <tag line="30" name="see" description="\phpRack_Runner::run()" refers="\phpRack_Runner::run()"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="46" package="Default">
        <name>cutLog</name>
        <type>function</type>
        <docblock line="38">
          <description><![CDATA[Cuts log according to the limit provided]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="38" name="param" description="Log to cut" type="string" variable="$log">
            <type by_reference="false">string</type>
          </tag>
          <tag line="38" name="param" description="Limit in Kb" type="integer" variable="$limit">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="38" name="see" description="\run()" refers="\run()"/>
          <tag line="38" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="46">
          <name>$log</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="46">
          <name>$limit</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="91" package="Default">
        <name>utf8Encode</name>
        <type>function</type>
        <docblock line="82">
          <description><![CDATA[Checks for string encoding, and if encoding is not utf-8, encodes to utf-8]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="82" name="param" description="String to convert into UTF-8" type="string" variable="$str">
            <type by_reference="false">string</type>
          </tag>
          <tag line="82" name="return" description="Proper UTF-8 formatted string" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="82" name="see" description="\run()" refers="\run()"/>
          <tag line="82" name="see" description="\#60" refers="\#60"/>
        </docblock>
        <argument line="91">
          <name>$str</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="phpRack/Package.php" hash="f241723d67bb6af0526eb4d79c2f314c">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Package.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Result.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Result" refers="\phpRack_Result"/>
      </docblock>
    </include>
    <include line="38" type="Require Once" package="Default">
      <name>/Test.php</name>
      <docblock line="35">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="see" description="\phpRack_Test" refers="\phpRack_Test"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="60" package="Tests">
      <name>phpRack_Package</name>
      <full_name>\phpRack_Package</full_name>
      <extends/>
      <docblock line="40">
        <description><![CDATA[One test assertion package]]></description>
        <long-description><![CDATA[<p>The package is used from your custom integration test, through the instance
of {@link phpRack_Assertion} class, which is available like this:</p>

<pre><code>class MyTest extends phpRack_Test {
  public function testPhpVersion() {
    $this->assert->php->version->atLeast('5.2');
  }
}
</code></pre>

<p>In this example package {@link phpRack_Package_Php_Version} will be instantiated
and returned. Later, method atLeast() will be called in this package.</p>]]></long-description>
        <tag line="40" name="package" description="Tests"/>
        <tag line="40" name="see" description="\phpRack_Assertion::__call()" refers="\phpRack_Assertion::__call()"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="70" package="Default">
        <name>$_result</name>
        <default><![CDATA[]]></default>
        <docblock line="63">
          <description><![CDATA[Result collector]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="63" name="var" description="" type="\phpRack_Result">
            <type by_reference="false">\phpRack_Result</type>
          </tag>
          <tag line="63" name="see" description="\__construct()" refers="\__construct()"/>
          <tag line="63" name="see" description="\__get()" refers="\__get()"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="79" package="Default">
        <name>$_latestCallSuccess</name>
        <default><![CDATA[false]]></default>
        <docblock line="72">
          <description><![CDATA[Result of the latest call]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="72" name="var" description="TRUE means that the latest call was successful" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="72" name="see" description="\_failure()" refers="\_failure()"/>
          <tag line="72" name="see" description="\_success()" refers="\_success()"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="97" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="81">
          <description><![CDATA[Construct the class]]></description>
          <long-description><![CDATA[<p>The method is PROTECTED in order to avoid direct instantiation of
packages outside our factory method {@link factory()}. Some packages
may override the method, that's why it is protected, not private. For
example {@link phpRack_Package_Db_Mysql}.</p>

<p>phpRack_Result passed here as parameter is used as a holder of test
results. This package will ADD new results to this holder, instead of
creating new one. This holder is passed from {@link phpRack_Test}, normally.</p>]]></long-description>
          <tag line="81" name="param" description="Result to use" type="\phpRack_Result" variable="$result">
            <type by_reference="false">\phpRack_Result</type>
          </tag>
          <tag line="81" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="81" name="see" description="\factory()" refers="\factory()"/>
        </docblock>
        <argument line="97">
          <name>$result</name>
          <default><![CDATA[]]></default>
          <type>phpRack_Result</type>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="default" line="110" package="Default">
        <name>__call</name>
        <type>function</type>
        <docblock line="102">
          <description><![CDATA[Call to unknown function]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="102" name="param" description="Name of the method" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="102" name="param" description="List of arguments" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="102" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="102" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="110">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="110">
          <name>$args</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="137" package="Default">
        <name>factory</name>
        <type>function</type>
        <docblock line="122">
          <description><![CDATA[Create new package]]></description>
          <long-description><![CDATA[<p>The method is called factory, but this is not really a static factory. This method
just simplifies the instantiation of phpRack_Package and encapsulates private
constructor. Some time ago we had a static factory here, but then removed it. The
organization of methods stay like before (factory + private constructor). Maybe in
the future we might decide to introduce static factory again.</p>]]></long-description>
          <tag line="122" name="param" description="Name of the package, like &quot;php/version&quot;" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="122" name="param" description="Collector of log lines" type="\phpRack_Result" variable="$result">
            <type by_reference="false">\phpRack_Result</type>
          </tag>
          <tag line="122" name="return" description="" type="\phpRack_Package">
            <type by_reference="false">\phpRack_Package</type>
          </tag>
          <tag line="122" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="122" name="see" description="\phpRack_Assertion::__call()" refers="\phpRack_Assertion::__call()"/>
        </docblock>
        <argument line="137">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="137">
          <name>$result</name>
          <default><![CDATA[]]></default>
          <type>phpRack_Result</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="171" package="Default">
        <name>__get</name>
        <type>function</type>
        <docblock line="153">
          <description><![CDATA[Dispatcher of calls to packages]]></description>
          <long-description><![CDATA[<p>Here we create a sub-package, for example:</p>

<pre><code>// inside your instance of phpRack_Test:
$this->assert->php->extensions->isLoaded('simplexml');
</code></pre>

<p>The call in the example will lead you to this method, and will call
__get('extensions'). In return we will create an instance of
phpRack_Package_Php_Extensions and return it.</p>]]></long-description>
          <tag line="153" name="param" description="Name of the property to get" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="153" name="return" description="" type="\phpRack_Package">
            <type by_reference="false">\phpRack_Package</type>
          </tag>
          <tag line="153" name="see" description="\PhpConfigurationTest::testPhpExtensionsExist" refers="\PhpConfigurationTest::testPhpExtensionsExist"/>
        </docblock>
        <argument line="171">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="default" line="182" package="Default">
        <name>onSuccess</name>
        <type>function</type>
        <docblock line="176">
          <description><![CDATA[What to do on success?]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="176" name="param" description="What to do? STRING will log this string" type="mixed" variable="$action">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="176" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
        </docblock>
        <argument line="182">
          <name>$action</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="default" line="196" package="Default">
        <name>onFailure</name>
        <type>function</type>
        <docblock line="190">
          <description><![CDATA[What to do on failure?]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="190" name="param" description="What to do? STRING will log this string" type="mixed" variable="$action">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="190" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
        </docblock>
        <argument line="196">
          <name>$action</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="210" package="Default">
        <name>_getName</name>
        <type>function</type>
        <docblock line="204">
          <description><![CDATA[Get my name, like: "php/version"]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="204" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="204" name="see" description="\__get()" refers="\__get()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="232" package="Default">
        <name>_failure</name>
        <type>function</type>
        <docblock line="225">
          <description><![CDATA[Call failed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="225" name="param" description="String to log" type="string" variable="$log">
            <type by_reference="false">string</type>
          </tag>
          <tag line="225" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="225" name="see" description="\phpRack_Package_Php::lint()" refers="\phpRack_Package_Php::lint()"/>
        </docblock>
        <argument line="232">
          <name>$log</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="246" package="Default">
        <name>_success</name>
        <type>function</type>
        <docblock line="239">
          <description><![CDATA[Call was successful]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="239" name="param" description="String to log" type="string" variable="$log">
            <type by_reference="false">string</type>
          </tag>
          <tag line="239" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="239" name="see" description="\phpRack_Package_Php::lint()" refers="\phpRack_Package_Php::lint()"/>
        </docblock>
        <argument line="246">
          <name>$log</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="259" package="Default">
        <name>_log</name>
        <type>function</type>
        <docblock line="252">
          <description><![CDATA[Just log a line]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="252" name="param" description="String to log" type="string" variable="$log">
            <type by_reference="false">string</type>
          </tag>
          <tag line="252" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="252" name="see" description="\phpRack_Package_Php::lint()" refers="\phpRack_Package_Php::lint()"/>
        </docblock>
        <argument line="259">
          <name>$log</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="phpRack/Runner.php" hash="8e39f195e2c4c37ea621c82ae9120c34">
    <markers>
      <todo line="277">handle situation when login screen should appear</todo>
    </markers>
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Runner.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Test.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Test" refers="\phpRack_Test"/>
      </docblock>
    </include>
    <include line="38" type="Require Once" package="Default">
      <name>/Suite.php</name>
      <docblock line="35">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="see" description="\phpRack_Suite" refers="\phpRack_Suite"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="58" package="Tests">
      <name>phpRack_Runner</name>
      <full_name>\phpRack_Runner</full_name>
      <extends/>
      <docblock line="40">
        <description><![CDATA[Run all tests together, or one by one]]></description>
        <long-description><![CDATA[<p>First you should create an instance of this class, providing it an array
of options. Then you can either run individual test or all tests in a
test suite:</p>

<pre><code>$runner = new phpRack_Runner(array('dir'=>'/path/to/my-tests'));
echo $runner->runSuite();
</code></pre>

<p>This code will give you a plain-text report of all tests in your collection,
executed and logged.</p>]]></long-description>
        <tag line="40" name="package" description="Tests"/>
        <tag line="40" name="see" description="\bootstrap.php" refers="\bootstrap.php"/>
      </docblock>
      <constant namespace="default" line="68" package="Default">
        <name>TEST_PATTERN</name>
        <value><![CDATA['/(\w+Test)\.php$/i']]></value>
        <docblock line="61">
          <description><![CDATA[This is how you should name your test files, if you want
them to be found by the Runner]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="61" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="61" name="see" description="\getTests()" refers="\getTests()"/>
        </docblock>
      </constant>
      <constant namespace="default" line="77" package="Default">
        <name>SUITE_PATTERN</name>
        <value><![CDATA['/(\w+Suite)\.php$/i']]></value>
        <docblock line="70">
          <description><![CDATA[This is how you should name your suite files, if you want
them to be found by the Runner]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="70" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="70" name="see" description="\getTests()" refers="\getTests()"/>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="protected" line="85" package="Default">
        <name>$_options</name>
        <default><![CDATA[array(
        'dir'      => null,
        'auth'     => null,
        'htpasswd' => null,
        'notify'   => null,
    )]]></default>
        <docblock line="79">
          <description><![CDATA[List of options, which are changeable]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="79" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="79" name="see" description="\__construct()" refers="\__construct()"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="97" package="Default">
        <name>$_auth</name>
        <default><![CDATA[]]></default>
        <docblock line="92">
          <description><![CDATA[Authentication adapter]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="92" name="var" description="" type="\phpRack_Runner_Auth">
            <type by_reference="false">\phpRack_Runner_Auth</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="107" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="99">
          <description><![CDATA[Construct the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="99" name="param" description="Options to set to the class" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="99" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="99" name="throws" description="If an option is invalid" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="99" name="see" description="\bootstrap.php" refers="\bootstrap.php"/>
        </docblock>
        <argument line="107">
          <name>$options</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="128" package="Default">
        <name>getAuth</name>
        <type>function</type>
        <docblock line="122">
          <description><![CDATA[Return authentication adapter]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="122" name="return" description="" type="\phpRack_Runner_Auth">
            <type by_reference="false">\phpRack_Runner_Auth</type>
          </tag>
          <tag line="122" name="see" description="\bootstrap.php" refers="\bootstrap.php"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="139" package="Default">
        <name>isCliEnvironment</name>
        <type>function</type>
        <docblock line="133">
          <description><![CDATA[We're running the tests in CLI environment?]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="133" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="133" name="see" description="\phpRack_Runner_Auth::isAuthenticated()" refers="\phpRack_Runner_Auth::isAuthenticated()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="151" package="Default">
        <name>isEnoughSecurityLevel</name>
        <type>function</type>
        <docblock line="145">
          <description><![CDATA[Check whether client connection has enough security level?]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="145" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="145" name="see" description="\bootstrap.php" refers="\bootstrap.php"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="167" package="Default">
        <name>getDir</name>
        <type>function</type>
        <docblock line="160">
          <description><![CDATA[Get tests location directory]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="160" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="160" name="throws" description="If directory is absent" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="160" name="see" description="\getTests()" refers="\getTests()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="193" package="Default">
        <name>getTests</name>
        <type>function</type>
        <docblock line="176">
          <description><![CDATA[Get full list of tests, in array]]></description>
          <long-description><![CDATA[<p>This method builds a list of phpRack_Test class instances, collecting
them from integration 1) tests and 2) suites. They both are located in
the same directory (pre-configured in $phpRackConfig), but differ only
in file name suffix. Integration test ends with "...Test.php" and integration
suite ends with "...Suite.php".</p>

<p>Suite is an integration of tests, that allows you to use library tests
and suites. The majority of testing tasks are similar from server to server.
If you want to avoid manual development of tests for every application, just
use our library suites, and taylor them for your application needs.</p>]]></long-description>
          <tag line="176" name="return" description="" type="\phpRack_Test[]">
            <type by_reference="false">\phpRack_Test[]</type>
          </tag>
          <tag line="176" name="see" description="\index.phtml" refers="\index.phtml"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="219" package="Default">
        <name>runSuite</name>
        <type>function</type>
        <docblock line="213">
          <description><![CDATA[Run all tests and return a text report about their execution]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="213" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="213" name="see" description="\boostrap.php" refers="\boostrap.php"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="274" package="Default">
        <name>run</name>
        <type>function</type>
        <docblock line="264">
          <description><![CDATA[Run one test and return JSON result]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="264" name="param" description="Test file name (absolute name of PHP file)" type="string" variable="$fileName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="264" name="param" description="Unique token to return back, if required" type="string" variable="$token">
            <type by_reference="false">string</type>
          </tag>
          <tag line="264" name="param" description="Associative array of options to be used for setAjaxOptions()" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="264" name="return" description="JSON" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="264" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="264" name="see" description="\bootstrap.php" refers="\bootstrap.php"/>
        </docblock>
        <argument line="274">
          <name>$fileName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="274">
          <name>$token</name>
          <default><![CDATA['token']]></default>
          <type/>
        </argument>
        <argument line="274">
          <name>$options</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="317" package="Default">
        <name>_notifyAboutFailure</name>
        <type>function</type>
        <docblock line="305">
          <description><![CDATA[Notify admin about suite failure]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="305" name="param" description="Full suite text report" type="string" variable="$report">
            <type by_reference="false">string</type>
          </tag>
          <tag line="305" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="305" name="see" description="\runSuite()" refers="\runSuite()"/>
          <tag line="305" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="305" name="todo" description="Now we work only with one notifier, which is in class phpRack_Mail. Later&#10;we should add other notifiers, like SMS, IRC, ICQ, etc. When we add them we&#10;should move our phpRack_Mail class to phpRack_Notifier_Mail and create other&#10;notifiers there."/>
        </docblock>
        <argument line="317">
          <name>$report</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="phpRack/Assertion.php" hash="8398c82e67e6f0f9199e934d14daf2d1">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Assertion.php</error>
    </parse_markers>
    <include line="33" type="Require Once" package="Default">
      <name>/Package.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\phpRack_Package" refers="\phpRack_Package"/>
      </docblock>
    </include>
    <include line="38" type="Require Once" package="Default">
      <name>/Result.php</name>
      <docblock line="35">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="see" description="\phpRack_Result" refers="\phpRack_Result"/>
      </docblock>
    </include>
    <include line="43" type="Require Once" package="Default">
      <name>/Test.php</name>
      <docblock line="40">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="40" name="see" description="\phpRack_Test" refers="\phpRack_Test"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="51" package="Tests">
      <name>phpRack_Assertion</name>
      <full_name>\phpRack_Assertion</full_name>
      <extends/>
      <docblock line="45">
        <description><![CDATA[One single test assertion]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="45" name="package" description="Tests"/>
        <tag line="45" name="see" description="\phpRack_Test::__get()" refers="\phpRack_Test::__get()"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="60" package="Default">
        <name>$_result</name>
        <default><![CDATA[]]></default>
        <docblock line="54">
          <description><![CDATA[Result collector]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="54" name="var" description="" type="\phpRack_Result">
            <type by_reference="false">\phpRack_Result</type>
          </tag>
          <tag line="54" name="see" description="\__construct()" refers="\__construct()"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="69" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="62">
          <description><![CDATA[Construct the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="62" name="param" description="Test, which pushes results here" type="\phpRack_Test" variable="$test">
            <type by_reference="false">\phpRack_Test</type>
          </tag>
          <tag line="62" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="62" name="see" description="\phpRack_Test::__get()" refers="\phpRack_Test::__get()"/>
        </docblock>
        <argument line="69">
          <name>$test</name>
          <default><![CDATA[]]></default>
          <type>phpRack_Test</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="87" package="Default">
        <name>factory</name>
        <type>function</type>
        <docblock line="74">
          <description><![CDATA[Create new assertion]]></description>
          <long-description><![CDATA[<p>There is a combination of static factory() method and a private
constructor. However we don't have any static factory here, just an
incapsulation of constructor. Some time ago we had a static factory,
but then removed it. Maybe in the future we might get back to this
design approach.</p>]]></long-description>
          <tag line="74" name="param" description="Test that is using this assertion" type="\phpRack_Test" variable="$test">
            <type by_reference="false">\phpRack_Test</type>
          </tag>
          <tag line="74" name="return" description="" type="\phpRack_Assertion">
            <type by_reference="false">\phpRack_Assertion</type>
          </tag>
          <tag line="74" name="see" description="\phpRack_Test::__get()" refers="\phpRack_Test::__get()"/>
        </docblock>
        <argument line="87">
          <name>$test</name>
          <default><![CDATA[]]></default>
          <type>phpRack_Test</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="99" package="Default">
        <name>__get</name>
        <type>function</type>
        <docblock line="92">
          <description><![CDATA[Dispatcher of calls to packages]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="92" name="param" description="Name of the package to get" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="92" name="return" description="" type="\phpRack_Package">
            <type by_reference="false">\phpRack_Package</type>
          </tag>
          <tag line="92" name="see" description="\phpRack_Test::_log()" refers="\phpRack_Test::_log()"/>
        </docblock>
        <argument line="99">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="123" package="Default">
        <name>__call</name>
        <type>function</type>
        <docblock line="104">
          <description><![CDATA[Call method, any one]]></description>
          <long-description><![CDATA[<p>This magic method will be called when you're using any assertion and
some method inside it, for example:</p>

<pre><code>// inside your instance of phpRack_Test:
$this->assert->php->extensions->isLoaded('simplexml');
</code></pre>

<p>The call in the example will lead you to this method, and will call
__call('simplexml', array()).</p>]]></long-description>
          <tag line="104" name="param" description="Name of the method to call" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="104" name="param" description="Arguments to pass" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="104" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="104" name="see" description="\PhpConfigurationTest::testPhpExtensionsExist" refers="\PhpConfigurationTest::testPhpExtensionsExist"/>
        </docblock>
        <argument line="123">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="123">
          <name>$args</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="140" package="Default">
        <name>getResult</name>
        <type>function</type>
        <docblock line="134">
          <description><![CDATA[Get instance of result collector]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="134" name="return" description="" type="\phpRack_Result">
            <type by_reference="false">\phpRack_Result</type>
          </tag>
          <tag line="134" name="see" description="\phpRack_Test::_log()" refers="\phpRack_Test::_log()"/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="phpRack/bootstrap.php" hash="6cdfc5b8100d70668aec0869d05dd144">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/bootstrap.php</error>
    </parse_markers>
    <include line="100" type="Require Once" package="Default">
      <name>/Runner.php</name>
      <docblock line="97">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="97" name="see" description="\phpRack_Runner" refers="\phpRack_Runner"/>
      </docblock>
    </include>
    <include line="106" type="Require Once" package="Default">
      <name>/View.php</name>
      <docblock line="103">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="103" name="see" description="\phpRack_View" refers="\phpRack_View"/>
      </docblock>
    </include>
    <constant namespace="default" line="82">
      <name>PHPRACK_VERSION</name>
      <value><![CDATA['0.2dev']]></value>
    </constant>
    <constant namespace="default" line="86">
      <name>PHPRACK_AJAX_TAG</name>
      <value><![CDATA['test']]></value>
    </constant>
    <constant namespace="default" line="90">
      <name>PHPRACK_AJAX_TOKEN</name>
      <value><![CDATA['token']]></value>
    </constant>
    <constant namespace="default" line="94">
      <name>PHPRACK_PATH</name>
      <value><![CDATA[dirname(__FILE__)]]></value>
    </constant>
  </file>
  <file path="phpRack/Suite.php" hash="170ea2296d0b651b75cbe3fc20364a38">
    <parse_markers>
      <error line="1" code="50007">No page-level DocBlock was found in file phpRack/Suite.php</error>
    </parse_markers>
    <class final="false" abstract="true" namespace="default" line="40" package="Tests">
      <name>PhpRack_Suite</name>
      <full_name>\PhpRack_Suite</full_name>
      <extends/>
      <docblock line="30">
        <description><![CDATA[Parent class of all test suites]]></description>
        <long-description><![CDATA[<p>Suites are maintained as directories full of tests, inside "phpRack/Suite/library"
holder. When we {@link _addSuite()}, this class files all tests in this suite
directory and add them all to itself. Also, library contains individual
tests, which can be added to the suite by means of {@link _addTest()}.</p>]]></long-description>
        <tag line="30" name="package" description="Tests"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="60" package="Default">
        <name>$_tests</name>
        <default><![CDATA[array()]]></default>
        <docblock line="53">
          <description><![CDATA[Suite tests]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="53" name="var" description="of phpRack_Test" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="53" name="see" description="\getTests()" refers="\getTests()"/>
          <tag line="53" name="see" description="\_addTest()" refers="\_addTest()"/>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="69" package="Default">
        <name>$_suites</name>
        <default><![CDATA[array()]]></default>
        <docblock line="62">
          <description><![CDATA[Sub-suites]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="62" name="var" description="of PhpRack_Suite" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="62" name="see" description="\getTests()" refers="\getTests()"/>
          <tag line="62" name="see" description="\_addSuite()" refers="\_addSuite()"/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="81" package="Default">
        <name>factory</name>
        <type>function</type>
        <docblock line="71">
          <description><![CDATA[Create new instance of the class, using PHP absolute file name]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="71" name="param" description="ID of the suite, absolute (!) file name" type="string" variable="$fileName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="71" name="param" description="Instance of test runner" type="\phpRack_Runner" variable="$runner">
            <type by_reference="false">\phpRack_Runner</type>
          </tag>
          <tag line="71" name="return" description="" type="\phpRack_Suite">
            <type by_reference="false">\phpRack_Suite</type>
          </tag>
          <tag line="71" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="71" name="see" description="\_addSuite()" refers="\_addSuite()"/>
          <tag line="71" name="see" description="\phpRack_Runner::getTests()" refers="\phpRack_Runner::getTests()"/>
        </docblock>
        <argument line="81">
          <name>$fileName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="81">
          <name>$runner</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="104" package="Default">
        <name>getTests</name>
        <type>function</type>
        <docblock line="98">
          <description><![CDATA[Get tests defined in this suite and sub suites]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="98" name="return" description="of phpRack_Test" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="98" name="see" description="\phpRack_Runner::getTests()" refers="\phpRack_Runner::getTests()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="120" package="Default">
        <name>__init</name>
        <type>function</type>
        <docblock line="113">
          <description><![CDATA[Allow child class to add tests and sub suites by overwritting this
method]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="113" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="113" name="see" description="\__construct()" refers="\__construct()"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="138" package="Default">
        <name>_addSuite</name>
        <type>function</type>
        <docblock line="125">
          <description><![CDATA[Add suite]]></description>
          <long-description><![CDATA[<p>Suite is a collection of tests. Name of the suite ($suiteName) is a name
of directory in "phpRack/Suite/library".</p>]]></long-description>
          <tag line="125" name="param" description="Suite name" type="string" variable="$suiteName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="125" name="param" description="options" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="125" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
          <tag line="125" name="throws" description="if suite can't be found" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="125" name="see" description="\MySuite::_init()" refers="\MySuite::_init()"/>
          <tag line="125" name="see" description="\phpRack_Suite_Test" refers="\phpRack_Suite_Test"/>
        </docblock>
        <argument line="138">
          <name>$suiteName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="138">
          <name>$options</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="162" package="Default">
        <name>_addTest</name>
        <type>function</type>
        <docblock line="149">
          <description><![CDATA[Add test]]></description>
          <long-description><![CDATA[<p>Test should be located in our test library, inside "phpRack/Suite/library"
directory, and should be inherited from {@link phpRack_Suite_Test} class.</p>]]></long-description>
          <tag line="149" name="param" description="Suite name" type="string" variable="$testName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="149" name="param" description="options" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="149" name="return" description="" type="\$this">
            <type by_reference="false">\$this</type>
          </tag>
          <tag line="149" name="throws" description="if test can't be found" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="149" name="see" description="\MySuite::_init()" refers="\MySuite::_init()"/>
          <tag line="149" name="see" description="\phpRack_Suite_Test" refers="\phpRack_Suite_Test"/>
        </docblock>
        <argument line="162">
          <name>$testName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="162">
          <name>$options</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="180" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="174">
          <description><![CDATA[Test suite constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="174" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="174" name="see" description="\factory()" refers="\factory()"/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Amf/Exception.php" hash="79c8a4d3d3749948cc80bde8d0eda033" package="Zend\Amf">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Amf"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Exception.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="27" code="50005">No short description for class Zend_Amf_Exception</critical>
    </parse_markers>
    <include line="25" type="Require Once" package="Default">
      <name>Zend/Exception.php</name>
      <docblock line="22">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="22" name="see" description="\Zend_Exception" refers="\Zend_Exception"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="32" package="Zend\Amf">
      <name>Zend_Amf_Exception</name>
      <full_name>\Zend_Amf_Exception</full_name>
      <extends>\Zend_Exception</extends>
      <docblock line="27">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="27" name="package" description="Zend_Amf"/>
        <tag line="27" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="27" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
    </class>
  </file>
  <file path="Zend/Amf/Request/Http.php" hash="fa024c7a751bd9ba5bd35c0949b56fa3" package="Zend\Amf\Request">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Amf"/>
      <tag line="2" name="subpackage" description="Request"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Http.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <include line="24" type="Require Once" package="Default">
      <name>Zend/Amf/Request.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Amf_Request" refers="\Zend_Amf_Request"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="38" package="Zend\Amf\Request">
      <name>Zend_Amf_Request_Http</name>
      <full_name>\Zend_Amf_Request_Http</full_name>
      <extends>\Zend_Amf_Request</extends>
      <docblock line="26">
        <description><![CDATA[AMF Request object -- Request via HTTP]]></description>
        <long-description><![CDATA[<p>Extends {@link Zend_Amf_Request} to accept a request via HTTP. Request is
built at construction time using a raw POST; if no data is available, the
request is declared a fault.</p>]]></long-description>
        <tag line="26" name="package" description="Zend_Amf"/>
        <tag line="26" name="subpackage" description="Request"/>
        <tag line="26" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="26" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="44" package="Default">
        <name>$_rawRequest</name>
        <default><![CDATA[]]></default>
        <docblock line="40">
          <description><![CDATA[Raw AMF request]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="40" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="55" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="46">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[<p>Attempts to read from php://input to get raw POST request; if an error
occurs in doing so, or if the AMF body is invalid, the request is declared a
fault.</p>]]></long-description>
          <tag line="46" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="76" package="Default">
        <name>getRawRequest</name>
        <type>function</type>
        <docblock line="71">
          <description><![CDATA[Retrieve raw AMF Request]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="71" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Amf/Adobe/Introspector.php" hash="ee2a555d8a337eea9ed3ede3586f4832" package="Zend\Amf">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Amf"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Introspector.php 23953 2011-05-03 05:47:39Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="50" code="50019">No short description for property $_types</critical>
      <critical line="55" code="50019">No short description for property $_typesMap</critical>
      <critical line="60" code="50019">No short description for property $_xml</critical>
    </parse_markers>
    <include line="23" type="Require Once" package="Default">
      <name>Zend/Amf/Parse/TypeLoader.php</name>
      <docblock line="22">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="22" name="see" description="\Zend_Amf_Parse_TypeLoader" refers="\Zend_Amf_Parse_TypeLoader"/>
      </docblock>
    </include>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Reflection/Class.php</name>
      <docblock line="25">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="25" name="see" description="\Zend_Reflection_Class" refers="\Zend_Reflection_Class"/>
      </docblock>
    </include>
    <include line="29" type="Require Once" package="Default">
      <name>Zend/Server/Reflection.php</name>
      <docblock line="28">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="28" name="see" description="\Zend_Server_Reflection" refers="\Zend_Server_Reflection"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="39" package="Zend\Amf\Adobe">
      <name>Zend_Amf_Adobe_Introspector</name>
      <full_name>\Zend_Amf_Adobe_Introspector</full_name>
      <extends/>
      <docblock line="31">
        <description><![CDATA[This class implements a service for generating AMF service descriptions as XML.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="31" name="package" description="Zend_Amf"/>
        <tag line="31" name="subpackage" description="Adobe"/>
        <tag line="31" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="31" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="48" package="Default">
        <name>$_options</name>
        <default><![CDATA[]]></default>
        <docblock line="41">
          <description><![CDATA[Options used:
- server: instance of Zend_Amf_Server to use
- directories: directories where class files may be looked up]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="41" name="var" description="Introspector options" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="53" package="Default">
        <name>$_types</name>
        <default><![CDATA[]]></default>
        <docblock line="50">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="50" name="var" description="DOM element to store types" type="\DOMElement">
            <type by_reference="false">\DOMElement</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="58" package="Default">
        <name>$_typesMap</name>
        <default><![CDATA[array()]]></default>
        <docblock line="55">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="55" name="var" description="Map of the known types" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="63" package="Default">
        <name>$_xml</name>
        <default><![CDATA[]]></default>
        <docblock line="60">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="60" name="var" description="XML document to store data" type="\DOMDocument">
            <type by_reference="false">\DOMDocument</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="70" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="65">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="65" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="82" package="Default">
        <name>introspect</name>
        <type>function</type>
        <docblock line="75">
          <description><![CDATA[Create XML definition on an AMF service class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="75" name="param" description="Service class name" type="string" variable="$serviceClass">
            <type by_reference="false">string</type>
          </tag>
          <tag line="75" name="param" description="invocation options" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="75" name="return" description="XML with service class introspection" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="82">
          <name>$serviceClass</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="82">
          <name>$options</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="121" package="Default">
        <name>initAcl</name>
        <type>function</type>
        <docblock line="115">
          <description><![CDATA[Authentication handler]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="115" name="param" description="" type="\Zend_Acl" variable="$acl">
            <type by_reference="false">\Zend_Acl</type>
          </tag>
          <tag line="115" name="return" description="" type="\unknown_type">
            <type by_reference="false">\unknown_type</type>
          </tag>
        </docblock>
        <argument line="121">
          <name>$acl</name>
          <default><![CDATA[]]></default>
          <type>Zend_Acl</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="133" package="Default">
        <name>_addClassAttributes</name>
        <type>function</type>
        <docblock line="126">
          <description><![CDATA[Generate map of public class attributes]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="126" name="param" description="type name" type="string" variable="$typename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="126" name="param" description="target XML element" type="\DOMElement" variable="$typexml">
            <type by_reference="false">\DOMElement</type>
          </tag>
          <tag line="126" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="133">
          <name>$typename</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="133">
          <name>$typexml</name>
          <default><![CDATA[]]></default>
          <type>DOMElement</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="164" package="Default">
        <name>_addService</name>
        <type>function</type>
        <docblock line="157">
          <description><![CDATA[Build XML service description from reflection class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="157" name="param" description="" type="\Zend_Server_Reflection_Class" variable="$refclass">
            <type by_reference="false">\Zend_Server_Reflection_Class</type>
          </tag>
          <tag line="157" name="param" description="target XML element" type="\DOMElement" variable="$target">
            <type by_reference="false">\DOMElement</type>
          </tag>
          <tag line="157" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="164">
          <name>$refclass</name>
          <default><![CDATA[]]></default>
          <type>Zend_Server_Reflection_Class</type>
        </argument>
        <argument line="164">
          <name>$target</name>
          <default><![CDATA[]]></default>
          <type>DOMElement</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="211" package="Default">
        <name>_getPropertyType</name>
        <type>function</type>
        <docblock line="205">
          <description><![CDATA[Extract type of the property from DocBlock]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="205" name="param" description="reflection property object" type="\Zend_Reflection_Property" variable="$prop">
            <type by_reference="false">\Zend_Reflection_Property</type>
          </tag>
          <tag line="205" name="return" description="Property type" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="211">
          <name>$prop</name>
          <default><![CDATA[]]></default>
          <type>Zend_Reflection_Property</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="232" package="Default">
        <name>_getServicePath</name>
        <type>function</type>
        <docblock line="227">
          <description><![CDATA[Get the array of service directories]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="227" name="return" description="Service class directories" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="251" package="Default">
        <name>_phpTypeToAS</name>
        <type>function</type>
        <docblock line="245">
          <description><![CDATA[Map from PHP type name to AS type name]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="245" name="param" description="PHP type name" type="string" variable="$typename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="245" name="return" description="AS type name" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="251">
          <name>$typename</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="274" package="Default">
        <name>_registerType</name>
        <type>function</type>
        <docblock line="268">
          <description><![CDATA[Register new type on the system]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="268" name="param" description="type name" type="string" variable="$typename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="268" name="return" description="New type name" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="274">
          <name>$typename</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="314" package="Default">
        <name>_returnError</name>
        <type>function</type>
        <docblock line="308">
          <description><![CDATA[Return error with error message]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="308" name="param" description="Error message" type="string" variable="$msg">
            <type by_reference="false">string</type>
          </tag>
          <tag line="308" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="314">
          <name>$msg</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Amf/Adobe/Auth.php" hash="1a0c0b9757af8826c7eacce0e0b26d8f" package="Zend\Amf">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Amf"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Auth.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <include line="23" type="Require Once" package="Default">
      <name>Zend/Amf/Auth/Abstract.php</name>
      <docblock line="22">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="22" name="see" description="\Zend_Amf_Auth_Abstract" refers="\Zend_Amf_Auth_Abstract"/>
      </docblock>
    </include>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Acl.php</name>
      <docblock line="25">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="25" name="see" description="\Zend_Acl" refers="\Zend_Acl"/>
      </docblock>
    </include>
    <include line="29" type="Require Once" package="Default">
      <name>Zend/Auth/Result.php</name>
      <docblock line="28">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="28" name="see" description="\Zend_Auth_Result" refers="\Zend_Auth_Result"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="39" package="Zend\Amf\Adobe">
      <name>Zend_Amf_Adobe_Auth</name>
      <full_name>\Zend_Amf_Adobe_Auth</full_name>
      <extends>\Zend_Amf_Auth_Abstract</extends>
      <docblock line="31">
        <description><![CDATA[This class implements authentication against XML file with roles for Flex Builder.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="31" name="package" description="Zend_Amf"/>
        <tag line="31" name="subpackage" description="Adobe"/>
        <tag line="31" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="31" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="47" package="Default">
        <name>$_acl</name>
        <default><![CDATA[]]></default>
        <docblock line="42">
          <description><![CDATA[ACL for authorization]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="42" name="var" description="" type="\Zend_Acl">
            <type by_reference="false">\Zend_Acl</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="54" package="Default">
        <name>$_users</name>
        <default><![CDATA[array()]]></default>
        <docblock line="49">
          <description><![CDATA[Username/password array]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="49" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="61" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="56">
          <description><![CDATA[Create auth adapter]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="56" name="param" description="File containing XML with users and roles" type="string" variable="$rolefile">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="61">
          <name>$rolefile</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="90" package="Default">
        <name>getAcl</name>
        <type>function</type>
        <docblock line="85">
          <description><![CDATA[Get ACL with roles from XML file]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="85" name="return" description="" type="\Zend_Acl">
            <type by_reference="false">\Zend_Acl</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="102" package="Default">
        <name>authenticate</name>
        <type>function</type>
        <docblock line="95">
          <description><![CDATA[Perform authentication]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="95" name="throws" description="" type="\Zend_Auth_Adapter_Exception">
            <type by_reference="false">\Zend_Auth_Adapter_Exception</type>
          </tag>
          <tag line="95" name="return" description="" type="\Zend_Auth_Result">
            <type by_reference="false">\Zend_Auth_Result</type>
          </tag>
          <tag line="95" name="see" description="\Zend_Auth_Adapter_Interface#authenticate()" refers="\Zend_Auth_Adapter_Interface#authenticate()"/>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Amf/Adobe/DbInspector.php" hash="7ed32e8a6a494b761c6fbaedfdda3a73" package="Zend\Amf">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Amf"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: DbInspector.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <class final="false" abstract="false" namespace="default" line="30" package="Zend\Amf\Adobe">
      <name>Zend_Amf_Adobe_DbInspector</name>
      <full_name>\Zend_Amf_Adobe_DbInspector</full_name>
      <extends/>
      <docblock line="22">
        <description><![CDATA[This class implements authentication against XML file with roles for Flex Builder.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="22" name="package" description="Zend_Amf"/>
        <tag line="22" name="subpackage" description="Adobe"/>
        <tag line="22" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="22" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="41" package="Default">
        <name>_connect</name>
        <type>function</type>
        <docblock line="33">
          <description><![CDATA[Connect to the database]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="33" name="param" description="Database adapter type for Zend_Db" type="string" variable="$dbType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="33" name="param" description="Adapter-specific connection settings" type="array|object" variable="$dbDescription">
            <type by_reference="false">array</type>
            <type by_reference="false">object</type>
          </tag>
          <tag line="33" name="return" description="" type="\Zend_Db_Adapter_Abstract">
            <type by_reference="false">\Zend_Db_Adapter_Abstract</type>
          </tag>
          <tag line="33" name="see" description="\Zend_Db::factory()" refers="\Zend_Db::factory()"/>
        </docblock>
        <argument line="41">
          <name>$dbType</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="41">
          <name>$dbDescription</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="70" package="Default">
        <name>describeTable</name>
        <type>function</type>
        <docblock line="49">
          <description><![CDATA[Describe database object.]]></description>
          <long-description><![CDATA[<p>Usage example:
$inspector->describeTable('Pdo_Mysql',
    array(
        'host'     => '127.0.0.1',
        'username' => 'webuser',
        'password' => 'xxxxxxxx',
        'dbname'   => 'test'
    ),
    'mytable'
);</p>]]></long-description>
          <tag line="49" name="param" description="Database adapter type for Zend_Db" type="string" variable="$dbType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="49" name="param" description="Adapter-specific connection settings" type="array|object" variable="$dbDescription">
            <type by_reference="false">array</type>
            <type by_reference="false">object</type>
          </tag>
          <tag line="49" name="param" description="Table name" type="string" variable="$tableName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="49" name="return" description="Table description" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="49" name="see" description="\Zend_Db::describeTable()" refers="\Zend_Db::describeTable()"/>
          <tag line="49" name="see" description="\Zend_Db::factory()" refers="\Zend_Db::factory()"/>
        </docblock>
        <argument line="70">
          <name>$dbType</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="70">
          <name>$dbDescription</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="70">
          <name>$tableName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="84" package="Default">
        <name>connect</name>
        <type>function</type>
        <docblock line="76">
          <description><![CDATA[Test database connection]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="76" name="param" description="Database adapter type for Zend_Db" type="string" variable="$dbType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="76" name="param" description="Adapter-specific connection settings" type="array|object" variable="$dbDescription">
            <type by_reference="false">array</type>
            <type by_reference="false">object</type>
          </tag>
          <tag line="76" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="76" name="see" description="\Zend_Db::factory()" refers="\Zend_Db::factory()"/>
        </docblock>
        <argument line="84">
          <name>$dbType</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="84">
          <name>$dbDescription</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="98" package="Default">
        <name>getTables</name>
        <type>function</type>
        <docblock line="91">
          <description><![CDATA[Get the list of database tables]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="91" name="param" description="Database adapter type for Zend_Db" type="string" variable="$dbType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="91" name="param" description="Adapter-specific connection settings" type="array|object" variable="$dbDescription">
            <type by_reference="false">array</type>
            <type by_reference="false">object</type>
          </tag>
          <tag line="91" name="return" description="List of the tables" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="98">
          <name>$dbType</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="98">
          <name>$dbDescription</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Amf/Constants.php" hash="a94b0a36bd103d3a4a8fe53924c7c70a" package="Zend\Amf">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Amf"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Constants.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <class final="true" abstract="false" namespace="default" line="30" package="Zend\Amf">
      <name>Zend_Amf_Constants</name>
      <full_name>\Zend_Amf_Constants</full_name>
      <extends/>
      <docblock line="22">
        <description><![CDATA[The following constants are used throughout serialization and
deserialization to detect the AMF marker and encoding types.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="22" name="package" description="Zend_Amf"/>
        <tag line="22" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="22" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <constant namespace="default" line="32">
        <name>AMF0_NUMBER</name>
        <value><![CDATA[0x00]]></value>
      </constant>
      <constant namespace="default" line="33">
        <name>AMF0_BOOLEAN</name>
        <value><![CDATA[0x01]]></value>
      </constant>
      <constant namespace="default" line="34">
        <name>AMF0_STRING</name>
        <value><![CDATA[0x02]]></value>
      </constant>
      <constant namespace="default" line="35">
        <name>AMF0_OBJECT</name>
        <value><![CDATA[0x03]]></value>
      </constant>
      <constant namespace="default" line="36">
        <name>AMF0_MOVIECLIP</name>
        <value><![CDATA[0x04]]></value>
      </constant>
      <constant namespace="default" line="37">
        <name>AMF0_NULL</name>
        <value><![CDATA[0x05]]></value>
      </constant>
      <constant namespace="default" line="38">
        <name>AMF0_UNDEFINED</name>
        <value><![CDATA[0x06]]></value>
      </constant>
      <constant namespace="default" line="39">
        <name>AMF0_REFERENCE</name>
        <value><![CDATA[0x07]]></value>
      </constant>
      <constant namespace="default" line="40">
        <name>AMF0_MIXEDARRAY</name>
        <value><![CDATA[0x08]]></value>
      </constant>
      <constant namespace="default" line="41">
        <name>AMF0_OBJECTTERM</name>
        <value><![CDATA[0x09]]></value>
      </constant>
      <constant namespace="default" line="42">
        <name>AMF0_ARRAY</name>
        <value><![CDATA[0x0a]]></value>
      </constant>
      <constant namespace="default" line="43">
        <name>AMF0_DATE</name>
        <value><![CDATA[0x0b]]></value>
      </constant>
      <constant namespace="default" line="44">
        <name>AMF0_LONGSTRING</name>
        <value><![CDATA[0x0c]]></value>
      </constant>
      <constant namespace="default" line="45">
        <name>AMF0_UNSUPPORTED</name>
        <value><![CDATA[0x0e]]></value>
      </constant>
      <constant namespace="default" line="46">
        <name>AMF0_XML</name>
        <value><![CDATA[0x0f]]></value>
      </constant>
      <constant namespace="default" line="47">
        <name>AMF0_TYPEDOBJECT</name>
        <value><![CDATA[0x10]]></value>
      </constant>
      <constant namespace="default" line="48">
        <name>AMF0_AMF3</name>
        <value><![CDATA[0x11]]></value>
      </constant>
      <constant namespace="default" line="49">
        <name>AMF0_OBJECT_ENCODING</name>
        <value><![CDATA[0x00]]></value>
      </constant>
      <constant namespace="default" line="51">
        <name>AMF3_UNDEFINED</name>
        <value><![CDATA[0x00]]></value>
      </constant>
      <constant namespace="default" line="52">
        <name>AMF3_NULL</name>
        <value><![CDATA[0x01]]></value>
      </constant>
      <constant namespace="default" line="53">
        <name>AMF3_BOOLEAN_FALSE</name>
        <value><![CDATA[0x02]]></value>
      </constant>
      <constant namespace="default" line="54">
        <name>AMF3_BOOLEAN_TRUE</name>
        <value><![CDATA[0x03]]></value>
      </constant>
      <constant namespace="default" line="55">
        <name>AMF3_INTEGER</name>
        <value><![CDATA[0x04]]></value>
      </constant>
      <constant namespace="default" line="56">
        <name>AMF3_NUMBER</name>
        <value><![CDATA[0x05]]></value>
      </constant>
      <constant namespace="default" line="57">
        <name>AMF3_STRING</name>
        <value><![CDATA[0x06]]></value>
      </constant>
      <constant namespace="default" line="58">
        <name>AMF3_XML</name>
        <value><![CDATA[0x07]]></value>
      </constant>
      <constant namespace="default" line="59">
        <name>AMF3_DATE</name>
        <value><![CDATA[0x08]]></value>
      </constant>
      <constant namespace="default" line="60">
        <name>AMF3_ARRAY</name>
        <value><![CDATA[0x09]]></value>
      </constant>
      <constant namespace="default" line="61">
        <name>AMF3_OBJECT</name>
        <value><![CDATA[0x0A]]></value>
      </constant>
      <constant namespace="default" line="62">
        <name>AMF3_XMLSTRING</name>
        <value><![CDATA[0x0B]]></value>
      </constant>
      <constant namespace="default" line="63">
        <name>AMF3_BYTEARRAY</name>
        <value><![CDATA[0x0C]]></value>
      </constant>
      <constant namespace="default" line="64">
        <name>AMF3_OBJECT_ENCODING</name>
        <value><![CDATA[0x03]]></value>
      </constant>
      <constant namespace="default" line="67">
        <name>ET_PROPLIST</name>
        <value><![CDATA[0x00]]></value>
      </constant>
      <constant namespace="default" line="68">
        <name>ET_EXTERNAL</name>
        <value><![CDATA[0x01]]></value>
      </constant>
      <constant namespace="default" line="69">
        <name>ET_DYNAMIC</name>
        <value><![CDATA[0x02]]></value>
      </constant>
      <constant namespace="default" line="70">
        <name>ET_PROXY</name>
        <value><![CDATA[0x03]]></value>
      </constant>
      <constant namespace="default" line="72">
        <name>FMS_OBJECT_ENCODING</name>
        <value><![CDATA[0x01]]></value>
      </constant>
      <constant namespace="default" line="78" package="Default">
        <name>UNKNOWN_CONTENT_LENGTH</name>
        <value><![CDATA[-1]]></value>
        <docblock line="74">
          <description><![CDATA[Special content length value that indicates "unknown" content length
per AMF Specification]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="default" line="79">
        <name>URL_APPEND_HEADER</name>
        <value><![CDATA['AppendToGatewayUrl']]></value>
      </constant>
      <constant namespace="default" line="80">
        <name>RESULT_METHOD</name>
        <value><![CDATA['/onResult']]></value>
      </constant>
      <constant namespace="default" line="81">
        <name>STATUS_METHOD</name>
        <value><![CDATA['/onStatus']]></value>
      </constant>
      <constant namespace="default" line="82">
        <name>CREDENTIALS_HEADER</name>
        <value><![CDATA['Credentials']]></value>
      </constant>
      <constant namespace="default" line="83">
        <name>PERSISTENT_HEADER</name>
        <value><![CDATA['RequestPersistentHeader']]></value>
      </constant>
      <constant namespace="default" line="84">
        <name>DESCRIBE_HEADER</name>
        <value><![CDATA['DescribeService']]></value>
      </constant>
      <constant namespace="default" line="86">
        <name>GUEST_ROLE</name>
        <value><![CDATA['anonymous']]></value>
      </constant>
    </class>
  </file>
  <file path="Zend/Amf/Response.php" hash="8a43e1a158d3608ae224e651b3f1ffc9" package="Zend\Amf">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Amf"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Response.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="40" code="50019">No short description for property $_objectEncoding</critical>
      <critical line="57" code="50019">No short description for property $_outputStream</critical>
    </parse_markers>
    <include line="23" type="Require Once" package="Default">
      <name>Zend/Amf/Constants.php</name>
      <docblock line="22">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="22" name="see" description="\Zend_Amf_Constants" refers="\Zend_Amf_Constants"/>
      </docblock>
    </include>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Amf/Parse/OutputStream.php</name>
      <docblock line="25">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="25" name="see" description="\Zend_Amf_Parse_OutputStream" refers="\Zend_Amf_Parse_OutputStream"/>
      </docblock>
    </include>
    <include line="29" type="Require Once" package="Default">
      <name>Zend/Amf/Parse/Amf0/Serializer.php</name>
      <docblock line="28">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="28" name="see" description="\Zend_Amf_Parse_Amf0_Serializer" refers="\Zend_Amf_Parse_Amf0_Serializer"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="38" package="Zend\Amf">
      <name>Zend_Amf_Response</name>
      <full_name>\Zend_Amf_Response</full_name>
      <extends/>
      <docblock line="31">
        <description><![CDATA[Handles converting the PHP object ready for response back into AMF]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="31" name="package" description="Zend_Amf"/>
        <tag line="31" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="31" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="43" package="Default">
        <name>$_objectEncoding</name>
        <default><![CDATA[0]]></default>
        <docblock line="40">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="40" name="var" description="Object encoding for response" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="49" package="Default">
        <name>$_bodies</name>
        <default><![CDATA[array()]]></default>
        <docblock line="45">
          <description><![CDATA[Array of Zend_Amf_Value_MessageBody objects]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="45" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="55" package="Default">
        <name>$_headers</name>
        <default><![CDATA[array()]]></default>
        <docblock line="51">
          <description><![CDATA[Array of Zend_Amf_Value_MessageHeader objects]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="51" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="60" package="Default">
        <name>$_outputStream</name>
        <default><![CDATA[]]></default>
        <docblock line="57">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="57" name="var" description="" type="\Zend_Amf_Parse_OutputStream">
            <type by_reference="false">\Zend_Amf_Parse_OutputStream</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="67" package="Default">
        <name>finalize</name>
        <type>function</type>
        <docblock line="62">
          <description><![CDATA[Instantiate new output stream and start serialization]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="62" name="return" description="" type="\Zend_Amf_Response">
            <type by_reference="false">\Zend_Amf_Response</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="81" package="Default">
        <name>writeMessage</name>
        <type>function</type>
        <docblock line="74">
          <description><![CDATA[Serialize the PHP data types back into Actionscript and
create and AMF stream.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="74" name="param" description="" type="\Zend_Amf_Parse_OutputStream" variable="$stream">
            <type by_reference="false">\Zend_Amf_Parse_OutputStream</type>
          </tag>
          <tag line="74" name="return" description="" type="\Zend_Amf_Response">
            <type by_reference="false">\Zend_Amf_Response</type>
          </tag>
        </docblock>
        <argument line="81">
          <name>$stream</name>
          <default><![CDATA[]]></default>
          <type>Zend_Amf_Parse_OutputStream</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="135" package="Default">
        <name>getResponse</name>
        <type>function</type>
        <docblock line="130">
          <description><![CDATA[Return the output stream content]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="130" name="return" description="The contents of the output stream" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="145" package="Default">
        <name>__toString</name>
        <type>function</type>
        <docblock line="140">
          <description><![CDATA[Return the output stream content]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="140" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="156" package="Default">
        <name>addAmfBody</name>
        <type>function</type>
        <docblock line="150">
          <description><![CDATA[Add an AMF body to be sent to the Flash Player]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="150" name="param" description="" type="\Zend_Amf_Value_MessageBody" variable="$body">
            <type by_reference="false">\Zend_Amf_Value_MessageBody</type>
          </tag>
          <tag line="150" name="return" description="" type="\Zend_Amf_Response">
            <type by_reference="false">\Zend_Amf_Response</type>
          </tag>
        </docblock>
        <argument line="156">
          <name>$body</name>
          <default><![CDATA[]]></default>
          <type>Zend_Amf_Value_MessageBody</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="167" package="Default">
        <name>getAmfBodies</name>
        <type>function</type>
        <docblock line="162">
          <description><![CDATA[Return an array of AMF bodies to be serialized]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="162" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="178" package="Default">
        <name>addAmfHeader</name>
        <type>function</type>
        <docblock line="172">
          <description><![CDATA[Add an AMF Header to be sent back to the flash player]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="172" name="param" description="" type="\Zend_Amf_Value_MessageHeader" variable="$header">
            <type by_reference="false">\Zend_Amf_Value_MessageHeader</type>
          </tag>
          <tag line="172" name="return" description="" type="\Zend_Amf_Response">
            <type by_reference="false">\Zend_Amf_Response</type>
          </tag>
        </docblock>
        <argument line="178">
          <name>$header</name>
          <default><![CDATA[]]></default>
          <type>Zend_Amf_Value_MessageHeader</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="189" package="Default">
        <name>getAmfHeaders</name>
        <type>function</type>
        <docblock line="184">
          <description><![CDATA[Retrieve attached AMF message headers]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="184" name="return" description="Array of Zend_Amf_Value_MessageHeader objects" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="200" package="Default">
        <name>setObjectEncoding</name>
        <type>function</type>
        <docblock line="194">
          <description><![CDATA[Set the AMF encoding that will be used for serialization]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="194" name="param" description="" type="int" variable="$encoding">
            <type by_reference="false">int</type>
          </tag>
          <tag line="194" name="return" description="" type="\Zend_Amf_Response">
            <type by_reference="false">\Zend_Amf_Response</type>
          </tag>
        </docblock>
        <argument line="200">
          <name>$encoding</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Amf/Server/Exception.php" hash="bfe157d439aac0136208faf754014fbc" package="Zend\Amf\Server">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Amf"/>
      <tag line="2" name="subpackage" description="Server"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Exception.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <include line="24" type="Require Once" package="Default">
      <name>Zend/Amf/Exception.php</name>
      <docblock line="23">
        <description><![CDATA[Zend_Amf_Exception]]></description>
        <long-description><![CDATA[]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="35" package="Zend\Amf\Server">
      <name>Zend_Amf_Server_Exception</name>
      <full_name>\Zend_Amf_Server_Exception</full_name>
      <extends>\Zend_Amf_Exception</extends>
      <docblock line="26">
        <description><![CDATA[Zend_Amf_Server_Exception]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="26" name="category" description="Zend"/>
        <tag line="26" name="package" description="Zend_Amf"/>
        <tag line="26" name="subpackage" description="Server"/>
        <tag line="26" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="26" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
    </class>
  </file>
  <file path="Zend/Amf/Value/Messaging/ArrayCollection.php" hash="db9d8c48b29b4ca7f3965f582e5f18aa" package="Zend\Amf\Value">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Amf"/>
      <tag line="2" name="subpackage" description="Value"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: ArrayCollection.php 24473 2011-09-26 19:33:55Z matthew $"/>
    </docblock>
    <class final="false" abstract="false" namespace="default" line="33" package="Zend\Amf\Value">
      <name>Zend_Amf_Value_Messaging_ArrayCollection</name>
      <full_name>\Zend_Amf_Value_Messaging_ArrayCollection</full_name>
      <extends>\ArrayObject</extends>
      <docblock line="23">
        <description><![CDATA[Type encapsulating Flex ArrayCollection]]></description>
        <long-description><![CDATA[<p>Corresponds to flex.messaging.io.ArrayCollection</p>]]></long-description>
        <tag line="23" name="package" description="Zend_Amf"/>
        <tag line="23" name="subpackage" description="Value"/>
        <tag line="23" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="23" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
    </class>
  </file>
  <file path="Zend/Amf/Value/Messaging/RemotingMessage.php" hash="10551cf752d3d3dabb5536a3ccd155f4" package="Zend\Amf\Value">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Amf"/>
      <tag line="2" name="subpackage" description="Value"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: RemotingMessage.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <include line="24" type="Require Once" package="Default">
      <name>Zend/Amf/Value/Messaging/AbstractMessage.php</name>
      <docblock line="23">
        <description><![CDATA[Zend_Amf_Value_Messaging_AbstractMessage]]></description>
        <long-description><![CDATA[]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="37" package="Zend\Amf\Value">
      <name>Zend_Amf_Value_Messaging_RemotingMessage</name>
      <full_name>\Zend_Amf_Value_Messaging_RemotingMessage</full_name>
      <extends>\Zend_Amf_Value_Messaging_AbstractMessage</extends>
      <docblock line="26">
        <description><![CDATA[This type of message contains information needed to perform
a Remoting invocation.]]></description>
        <long-description><![CDATA[<p>Corresponds to flex.messaging.messages.RemotingMessage</p>]]></long-description>
        <tag line="26" name="package" description="Zend_Amf"/>
        <tag line="26" name="subpackage" description="Value"/>
        <tag line="26" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="26" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="44" package="Default">
        <name>$source</name>
        <default><![CDATA[]]></default>
        <docblock line="40">
          <description><![CDATA[The name of the service to be called including package name]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="40" name="var" description="" type="String">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="50" package="Default">
        <name>$operation</name>
        <default><![CDATA[]]></default>
        <docblock line="46">
          <description><![CDATA[The name of the method to be called]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="46" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="56" package="Default">
        <name>$parameters</name>
        <default><![CDATA[]]></default>
        <docblock line="52">
          <description><![CDATA[The arguments to call the mathod with]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="52" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="63" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="58">
          <description><![CDATA[Create a new Remoting Message]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="58" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Amf/Value/Messaging/AbstractMessage.php" hash="defd09c180203970f5170ac14c803745" package="Zend\Amf\Value">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Amf"/>
      <tag line="2" name="subpackage" description="Value"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: AbstractMessage.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="34" code="50019">No short description for property $clientId</critical>
      <critical line="39" code="50019">No short description for property $destination</critical>
      <critical line="44" code="50019">No short description for property $messageId</critical>
      <critical line="49" code="50019">No short description for property $timestamp</critical>
      <critical line="54" code="50019">No short description for property $timeToLive</critical>
      <critical line="59" code="50019">No short description for property $headers</critical>
      <critical line="64" code="50019">No short description for property $body</critical>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="32" package="Zend\Amf\Value">
      <name>Zend_Amf_Value_Messaging_AbstractMessage</name>
      <full_name>\Zend_Amf_Value_Messaging_AbstractMessage</full_name>
      <extends/>
      <docblock line="23">
        <description><![CDATA[This is the default Implementation of Message, which provides
a convenient base for behavior and association of common endpoints]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="package" description="Zend_Amf"/>
        <tag line="23" name="subpackage" description="Value"/>
        <tag line="23" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="23" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="37" package="Default">
        <name>$clientId</name>
        <default><![CDATA[]]></default>
        <docblock line="34">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="34" name="var" description="Client identifier" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="42" package="Default">
        <name>$destination</name>
        <default><![CDATA[]]></default>
        <docblock line="39">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="39" name="var" description="Destination" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="47" package="Default">
        <name>$messageId</name>
        <default><![CDATA[]]></default>
        <docblock line="44">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="44" name="var" description="Message identifier" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="52" package="Default">
        <name>$timestamp</name>
        <default><![CDATA[]]></default>
        <docblock line="49">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="49" name="var" description="Message timestamp" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="57" package="Default">
        <name>$timeToLive</name>
        <default><![CDATA[]]></default>
        <docblock line="54">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="54" name="var" description="Message TTL" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="62" package="Default">
        <name>$headers</name>
        <default><![CDATA[]]></default>
        <docblock line="59">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="59" name="var" description="Message headers" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="67" package="Default">
        <name>$body</name>
        <default><![CDATA[]]></default>
        <docblock line="64">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="64" name="var" description="Message body" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="78" package="Default">
        <name>generateId</name>
        <type>function</type>
        <docblock line="69">
          <description><![CDATA[generate a unique id]]></description>
          <long-description><![CDATA[<p>Format is: ########-####-####-####-############
Where # is an uppercase letter or number
example: 6D9DC7EC-A273-83A9-ABE3-00005FD752D6</p>]]></long-description>
          <tag line="69" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Amf/Value/Messaging/AcknowledgeMessage.php" hash="13a1062751452ec3501dab1cb7ea676d" package="Zend\Amf\Value">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Amf"/>
      <tag line="2" name="subpackage" description="Value"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: AcknowledgeMessage.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <include line="24" type="Require Once" package="Default">
      <name>Zend/Amf/Value/Messaging/AsyncMessage.php</name>
      <docblock line="23">
        <description><![CDATA[Zend_Amf_Value_Messaging_AsyncMessage]]></description>
        <long-description><![CDATA[]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="38" package="Zend\Amf\Value">
      <name>Zend_Amf_Value_Messaging_AcknowledgeMessage</name>
      <full_name>\Zend_Amf_Value_Messaging_AcknowledgeMessage</full_name>
      <extends>\Zend_Amf_Value_Messaging_AsyncMessage</extends>
      <docblock line="26">
        <description><![CDATA[This is the type of message returned by the MessageBroker
to endpoints after the broker has routed an endpoint's message
to a service.]]></description>
        <long-description><![CDATA[<p>flex.messaging.messages.AcknowledgeMessage</p>]]></long-description>
        <tag line="26" name="package" description="Zend_Amf"/>
        <tag line="26" name="subpackage" description="Value"/>
        <tag line="26" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="26" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="45" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="40">
          <description><![CDATA[Create a new Acknowledge Message]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="40" name="param" description="" type="\unknown_type" variable="$message">
            <type by_reference="false">\unknown_type</type>
          </tag>
        </docblock>
        <argument line="45">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Amf/Value/Messaging/CommandMessage.php" hash="e64489b1621184907bb5210b15cf628e" package="Zend\Amf\Value">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Amf"/>
      <tag line="2" name="subpackage" description="Value"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: CommandMessage.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Amf/Value/Messaging/AsyncMessage.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Amf_Value_Messaging_AsyncMessage" refers="\Zend_Amf_Value_Messaging_AsyncMessage"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="42" package="Zend\Amf\Value">
      <name>Zend_Amf_Value_Messaging_CommandMessage</name>
      <full_name>\Zend_Amf_Value_Messaging_CommandMessage</full_name>
      <extends>\Zend_Amf_Value_Messaging_AsyncMessage</extends>
      <docblock line="28">
        <description><![CDATA[A message that represents an infrastructure command passed between
client and server. Subscribe/unsubscribe operations result in
CommandMessage transmissions, as do polling operations.]]></description>
        <long-description><![CDATA[<p>Corresponds to flex.messaging.messages.CommandMessage</p>

<p>Note: THESE VALUES MUST BE THE SAME ON CLIENT AND SERVER</p>]]></long-description>
        <tag line="28" name="package" description="Zend_Amf"/>
        <tag line="28" name="subpackage" description="Value"/>
        <tag line="28" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="28" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <constant namespace="default" line="47" package="Default">
        <name>SUBSCRIBE_OPERATION</name>
        <value><![CDATA[0]]></value>
        <docblock line="44">
          <description><![CDATA[This operation is used to subscribe to a remote destination.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="default" line="52" package="Default">
        <name>UNSUSBSCRIBE_OPERATION</name>
        <value><![CDATA[1]]></value>
        <docblock line="49">
          <description><![CDATA[This operation is used to unsubscribe from a remote destination.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="default" line="58" package="Default">
        <name>POLL_OPERATION</name>
        <value><![CDATA[2]]></value>
        <docblock line="54">
          <description><![CDATA[This operation is used to poll a remote destination for pending,
undelivered messages.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="default" line="64" package="Default">
        <name>CLIENT_SYNC_OPERATION</name>
        <value><![CDATA[4]]></value>
        <docblock line="60">
          <description><![CDATA[This operation is used by a remote destination to sync missed or cached messages
back to a client as a result of a client issued poll command.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="default" line="70" package="Default">
        <name>CLIENT_PING_OPERATION</name>
        <value><![CDATA[5]]></value>
        <docblock line="66">
          <description><![CDATA[This operation is used to test connectivity over the current channel to
the remote endpoint.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="default" line="76" package="Default">
        <name>CLUSTER_REQUEST_OPERATION</name>
        <value><![CDATA[7]]></value>
        <docblock line="72">
          <description><![CDATA[This operation is used to request a list of failover endpoint URIs
for the remote destination based on cluster membership.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="default" line="84" package="Default">
        <name>LOGIN_OPERATION</name>
        <value><![CDATA[8]]></value>
        <docblock line="78">
          <description><![CDATA[This operation is used to send credentials to the endpoint so that
the user can be logged in over the current channel.]]></description>
          <long-description><![CDATA[<p>The credentials need to be Base64 encoded and stored in the</p>

<pre><code>body</code></pre>

<p>of the message.</p>]]></long-description>
        </docblock>
      </constant>
      <constant namespace="default" line="90" package="Default">
        <name>LOGOUT_OPERATION</name>
        <value><![CDATA[9]]></value>
        <docblock line="86">
          <description><![CDATA[This operation is used to log the user out of the current channel, and
will invalidate the server session if the channel is HTTP based.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="default" line="96" package="Default">
        <name>SESSION_INVALIDATE_OPERATION</name>
        <value><![CDATA[10]]></value>
        <docblock line="92">
          <description><![CDATA[This operation is used to indicate that the client's subscription to a
remote destination has been invalidated.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="default" line="102" package="Default">
        <name>MULTI_SUBSCRIBE_OPERATION</name>
        <value><![CDATA[11]]></value>
        <docblock line="98">
          <description><![CDATA[This operation is used by the MultiTopicConsumer to subscribe/unsubscribe
from multiple subtopics/selectors in the same message.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="default" line="107" package="Default">
        <name>DISCONNECT_OPERATION</name>
        <value><![CDATA[12]]></value>
        <docblock line="104">
          <description><![CDATA[This operation is used to indicate that a channel has disconnected]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="default" line="112" package="Default">
        <name>UNKNOWN_OPERATION</name>
        <value><![CDATA[10000]]></value>
        <docblock line="109">
          <description><![CDATA[This is the default operation for new CommandMessage instances.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="public" line="118" package="Default">
        <name>$operation</name>
        <default><![CDATA[self::UNKNOWN_OPERATION]]></default>
        <docblock line="114">
          <description><![CDATA[The operation to execute for messages of this type]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="114" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
    </class>
  </file>
  <file path="Zend/Amf/Value/Messaging/AsyncMessage.php" hash="80ed392f09b0ff4ef92b15635db7deca" package="Zend\Amf\Value">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Amf"/>
      <tag line="2" name="subpackage" description="Value"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: AsyncMessage.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <include line="25" type="Require Once" package="Default">
      <name>Zend/Amf/Value/Messaging/AbstractMessage.php</name>
      <docblock line="24">
        <description><![CDATA[Zend_Amf_Value_Messaging_AbstractMessage]]></description>
        <long-description><![CDATA[]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="36" package="Zend\Amf\Value">
      <name>Zend_Amf_Value_Messaging_AsyncMessage</name>
      <full_name>\Zend_Amf_Value_Messaging_AsyncMessage</full_name>
      <extends>\Zend_Amf_Value_Messaging_AbstractMessage</extends>
      <docblock line="27">
        <description><![CDATA[This type of message contains information necessary to perform
point-to-point or publish-subscribe messaging.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="27" name="package" description="Zend_Amf"/>
        <tag line="27" name="subpackage" description="Value"/>
        <tag line="27" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="27" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="42" package="Default">
        <name>$correlationId</name>
        <default><![CDATA[]]></default>
        <docblock line="38">
          <description><![CDATA[The message id to be responded to.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="38" name="var" description="" type="String">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
      </property>
    </class>
  </file>
  <file path="Zend/Amf/Value/Messaging/ErrorMessage.php" hash="f37cf8c20a79ff71834baf761ec81bdd" package="Zend\Amf\Value">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Amf"/>
      <tag line="2" name="subpackage" description="Value"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: ErrorMessage.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <include line="24" type="Require Once" package="Default">
      <name>Zend/Amf/Value/Messaging/AcknowledgeMessage.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Amf_Value_Messaging_AcknowledgeMessage" refers="\Zend_Amf_Value_Messaging_AcknowledgeMessage"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="36" package="Zend\Amf\Value">
      <name>Zend_Amf_Value_Messaging_ErrorMessage</name>
      <full_name>\Zend_Amf_Value_Messaging_ErrorMessage</full_name>
      <extends>\Zend_Amf_Value_Messaging_AcknowledgeMessage</extends>
      <docblock line="26">
        <description><![CDATA[Creates the error message to report to flex the issue with the call]]></description>
        <long-description><![CDATA[<p>Corresponds to flex.messaging.messages.ErrorMessage</p>]]></long-description>
        <tag line="26" name="package" description="Zend_Amf"/>
        <tag line="26" name="subpackage" description="Value"/>
        <tag line="26" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="26" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="42" package="Default">
        <name>$extendedData</name>
        <default><![CDATA[null]]></default>
        <docblock line="38">
          <description><![CDATA[Additional data with error]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="38" name="var" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="48" package="Default">
        <name>$faultCode</name>
        <default><![CDATA[]]></default>
        <docblock line="44">
          <description><![CDATA[Error code number]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="44" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="54" package="Default">
        <name>$faultDetail</name>
        <default><![CDATA[]]></default>
        <docblock line="50">
          <description><![CDATA[Description as to the cause of the error]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="50" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="60" package="Default">
        <name>$faultString</name>
        <default><![CDATA['']]></default>
        <docblock line="56">
          <description><![CDATA[Short description of error]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="56" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="66" package="Default">
        <name>$rootCause</name>
        <default><![CDATA[null]]></default>
        <docblock line="62">
          <description><![CDATA[root cause of error]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="62" name="var" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
      </property>
    </class>
  </file>
  <file path="Zend/Amf/Value/ByteArray.php" hash="b2dbfa7f4e24eea72ec6a2088d387f93" package="Zend\Amf\Value">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Amf"/>
      <tag line="2" name="subpackage" description="Value"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: ByteArray.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="33" code="50019">No short description for property $_data</critical>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="31" package="Zend\Amf\Value">
      <name>Zend_Amf_Value_ByteArray</name>
      <full_name>\Zend_Amf_Value_ByteArray</full_name>
      <extends/>
      <docblock line="23">
        <description><![CDATA[Wrapper class to store an AMF3 flash.utils.ByteArray]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="package" description="Zend_Amf"/>
        <tag line="23" name="subpackage" description="Value"/>
        <tag line="23" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="23" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="36" package="Default">
        <name>$_data</name>
        <default><![CDATA['']]></default>
        <docblock line="33">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="33" name="var" description="ByteString Data" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="44" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="38">
          <description><![CDATA[Create a ByteArray]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="38" name="param" description="" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="38" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="44">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="54" package="Default">
        <name>getData</name>
        <type>function</type>
        <docblock line="49">
          <description><![CDATA[Return the byte stream]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="49" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Amf/Value/MessageHeader.php" hash="1bf4c8fdf31395c0b539df83eda8278a" package="Zend\Amf\Value">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Amf"/>
      <tag line="2" name="subpackage" description="Value"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: MessageHeader.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <error line="64" code="50014">Name of argument $data does not match with the DocBlock's name $content in __construct()</error>
      <notice line="64" code="50013">Parameter $content could not be found in __construct()</notice>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="34" package="Zend\Amf\Value">
      <name>Zend_Amf_Value_MessageHeader</name>
      <full_name>\Zend_Amf_Value_MessageHeader</full_name>
      <extends/>
      <docblock line="23">
        <description><![CDATA[Message Headers provide context for the processing of the
the AMF Packet and all subsequent Messages.]]></description>
        <long-description><![CDATA[<p>Multiple Message Headers may be included within an AMF Packet.</p>]]></long-description>
        <tag line="23" name="package" description="Zend_Amf"/>
        <tag line="23" name="subpackage" description="Value"/>
        <tag line="23" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="23" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="public" line="41" package="Default">
        <name>$name</name>
        <default><![CDATA[]]></default>
        <docblock line="36">
          <description><![CDATA[Name of the header]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="36" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="48" package="Default">
        <name>$mustRead</name>
        <default><![CDATA[]]></default>
        <docblock line="43">
          <description><![CDATA[Flag if the data has to be parsed on return]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="43" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="55" package="Default">
        <name>$length</name>
        <default><![CDATA[]]></default>
        <docblock line="50">
          <description><![CDATA[Length of the data field]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="50" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="public" line="62" package="Default">
        <name>$data</name>
        <default><![CDATA[]]></default>
        <docblock line="57">
          <description><![CDATA[Data sent with the header name]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="57" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="72" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="64">
          <description><![CDATA[Used to create and store AMF Header data.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="64" name="param" description="" type="String" variable="$name">
            <type by_reference="false">String</type>
          </tag>
          <tag line="64" name="param" description="" type="Boolean" variable="$mustRead">
            <type by_reference="false">Boolean</type>
          </tag>
          <tag line="64" name="param" description="" type="\misc" variable="$content">
            <type by_reference="false">\misc</type>
          </tag>
          <tag line="64" name="param" description="" type="integer" variable="$length">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="72">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="72">
          <name>$mustRead</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="72">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="72">
          <name>$length</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Amf/Value/MessageBody.php" hash="5998fc7f2499799b8af2621b4f0f3b68" package="Zend\Amf\Value">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Amf"/>
      <tag line="2" name="subpackage" description="Value"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: MessageBody.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <class final="false" abstract="false" namespace="default" line="39" package="Zend\Amf\Value">
      <name>Zend_Amf_Value_MessageBody</name>
      <full_name>\Zend_Amf_Value_MessageBody</full_name>
      <extends/>
      <docblock line="23">
        <description><![CDATA[An AMF Message contains information about the actual individual
transaction that is to be performed. It specifies the remote
operation that is to be performed; a local (client) operation
to be invoked upon success; and, the data to be used in the
operation.]]></description>
        <long-description><![CDATA[<p/>

<p>This Message structure defines how a local client would
invoke a method/operation on a remote server. Additionally,
the response from the Server is structured identically.</p>]]></long-description>
        <tag line="23" name="package" description="Zend_Amf"/>
        <tag line="23" name="subpackage" description="Value"/>
        <tag line="23" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="23" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="46" package="Default">
        <name>$_targetUri</name>
        <default><![CDATA[""]]></default>
        <docblock line="41">
          <description><![CDATA[A string describing which operation, function, or method
is to be remotley invoked.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="41" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="64" package="Default">
        <name>$_responseUri</name>
        <default><![CDATA[""]]></default>
        <docblock line="48">
          <description><![CDATA[Universal Resource Identifier that uniquely targets the originator's
Object that should receive the server's response. The server will
use this path specification to target the "OnResult()" or "onStatus()"
handlers within the client. For Flash, it specifies an ActionScript
Object path only. The NetResponse object pointed to by the Response Uri
contains the connection state information. Passing/specifying this
provides a convenient mechanism for the client/server to share access
to an object that is managing the state of the shared connection.]]></description>
          <long-description><![CDATA[<p>Since the server will use this field in the event of an error,
this field is required even if a successful server request would
not be expected to return a value to the client.</p>]]></long-description>
          <tag line="48" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="79" package="Default">
        <name>$_data</name>
        <default><![CDATA[]]></default>
        <docblock line="66">
          <description><![CDATA[Contains the actual data associated with the operation. It contains
the client's parameter data that is passed to the server's operation/method.]]></description>
          <long-description><![CDATA[<p>When serializing a root level data type or a parameter list array, no
name field is included. That is, the data is anonomously represented
as "Type Marker"/"Value" pairs. When serializing member data, the data is
represented as a series of "Name"/"Type"/"Value" combinations.</p>

<p>For server generated responses, it may contain any ActionScript
data/objects that the server was expected to provide.</p>]]></long-description>
          <tag line="66" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="89" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="81">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="81" name="param" description="" type="string" variable="$targetUri">
            <type by_reference="false">string</type>
          </tag>
          <tag line="81" name="param" description="" type="string" variable="$responseUri">
            <type by_reference="false">string</type>
          </tag>
          <tag line="81" name="param" description="" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="81" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="89">
          <name>$targetUri</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="89">
          <name>$responseUri</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="89">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="101" package="Default">
        <name>getTargetUri</name>
        <type>function</type>
        <docblock line="96">
          <description><![CDATA[Retrieve target Uri]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="96" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="112" package="Default">
        <name>setTargetUri</name>
        <type>function</type>
        <docblock line="106">
          <description><![CDATA[Set target Uri]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="106" name="param" description="" type="string" variable="$targetUri">
            <type by_reference="false">string</type>
          </tag>
          <tag line="106" name="return" description="" type="\Zend_Amf_Value_MessageBody">
            <type by_reference="false">\Zend_Amf_Value_MessageBody</type>
          </tag>
        </docblock>
        <argument line="112">
          <name>$targetUri</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="126" package="Default">
        <name>getResponseUri</name>
        <type>function</type>
        <docblock line="121">
          <description><![CDATA[Get target Uri]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="121" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="137" package="Default">
        <name>setResponseUri</name>
        <type>function</type>
        <docblock line="131">
          <description><![CDATA[Set response Uri]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="131" name="param" description="" type="string" variable="$responseUri">
            <type by_reference="false">string</type>
          </tag>
          <tag line="131" name="return" description="" type="\Zend_Amf_Value_MessageBody">
            <type by_reference="false">\Zend_Amf_Value_MessageBody</type>
          </tag>
        </docblock>
        <argument line="137">
          <name>$responseUri</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="151" package="Default">
        <name>getData</name>
        <type>function</type>
        <docblock line="146">
          <description><![CDATA[Retrieve response data]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="146" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="162" package="Default">
        <name>setData</name>
        <type>function</type>
        <docblock line="156">
          <description><![CDATA[Set response data]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="156" name="param" description="" type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="156" name="return" description="" type="\Zend_Amf_Value_MessageBody">
            <type by_reference="false">\Zend_Amf_Value_MessageBody</type>
          </tag>
        </docblock>
        <argument line="162">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="174" package="Default">
        <name>setReplyMethod</name>
        <type>function</type>
        <docblock line="168">
          <description><![CDATA[Set reply method]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="168" name="param" description="" type="string" variable="$methodName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="168" name="return" description="" type="\Zend_Amf_Value_MessageBody">
            <type by_reference="false">\Zend_Amf_Value_MessageBody</type>
          </tag>
        </docblock>
        <argument line="174">
          <name>$methodName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Amf/Value/TraitsInfo.php" hash="f34be34b9f8b7ce5cf272fa9a82457fe" package="Zend\Amf\Value">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Amf"/>
      <tag line="2" name="subpackage" description="Value"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: TraitsInfo.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="33" code="50019">No short description for property $_className</critical>
      <critical line="38" code="50019">No short description for property $_dynamic</critical>
      <critical line="43" code="50019">No short description for property $_externalizable</critical>
      <critical line="48" code="50019">No short description for property $_properties</critical>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="31" package="Zend\Amf\Value">
      <name>Zend_Amf_Value_TraitsInfo</name>
      <full_name>\Zend_Amf_Value_TraitsInfo</full_name>
      <extends/>
      <docblock line="23">
        <description><![CDATA[Zend_Amf_Value_TraitsInfo]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="package" description="Zend_Amf"/>
        <tag line="23" name="subpackage" description="Value"/>
        <tag line="23" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="23" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="36" package="Default">
        <name>$_className</name>
        <default><![CDATA[]]></default>
        <docblock line="33">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="33" name="var" description="Class name" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="41" package="Default">
        <name>$_dynamic</name>
        <default><![CDATA[]]></default>
        <docblock line="38">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="38" name="var" description="Whether or not this is a dynamic class" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="46" package="Default">
        <name>$_externalizable</name>
        <default><![CDATA[]]></default>
        <docblock line="43">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="43" name="var" description="Whether or not the class is externalizable" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="51" package="Default">
        <name>$_properties</name>
        <default><![CDATA[]]></default>
        <docblock line="48">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="48" name="var" description="Class properties" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="62" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="53">
          <description><![CDATA[Used to keep track of all class traits of an AMF3 object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="53" name="param" description="" type="string" variable="$className">
            <type by_reference="false">string</type>
          </tag>
          <tag line="53" name="param" description="" type="boolean" variable="$dynamic">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="53" name="param" description="" type="boolean" variable="$externalizable">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="53" name="param" description="" type="boolean" variable="$properties">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="53" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="62">
          <name>$className</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="62">
          <name>$dynamic</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
        <argument line="62">
          <name>$externalizable</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
        <argument line="62">
          <name>$properties</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="75" package="Default">
        <name>isDynamic</name>
        <type>function</type>
        <docblock line="70">
          <description><![CDATA[Test if the class is a dynamic class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="70" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="85" package="Default">
        <name>isExternalizable</name>
        <type>function</type>
        <docblock line="80">
          <description><![CDATA[Test if class is externalizable]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="80" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="95" package="Default">
        <name>length</name>
        <type>function</type>
        <docblock line="90">
          <description><![CDATA[Return the number of properties in the class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="90" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="105" package="Default">
        <name>getClassName</name>
        <type>function</type>
        <docblock line="100">
          <description><![CDATA[Return the class name]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="100" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="116" package="Default">
        <name>addProperty</name>
        <type>function</type>
        <docblock line="110">
          <description><![CDATA[Add an additional property]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="110" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="110" name="return" description="" type="\Zend_Amf_Value_TraitsInfo">
            <type by_reference="false">\Zend_Amf_Value_TraitsInfo</type>
          </tag>
        </docblock>
        <argument line="116">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="128" package="Default">
        <name>addAllProperties</name>
        <type>function</type>
        <docblock line="122">
          <description><![CDATA[Add all properties of the class.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="122" name="param" description="" type="array" variable="$props">
            <type by_reference="false">array</type>
          </tag>
          <tag line="122" name="return" description="" type="\Zend_Amf_Value_TraitsInfo">
            <type by_reference="false">\Zend_Amf_Value_TraitsInfo</type>
          </tag>
        </docblock>
        <argument line="128">
          <name>$props</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="140" package="Default">
        <name>getProperty</name>
        <type>function</type>
        <docblock line="134">
          <description><![CDATA[Get the property at a given index]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="134" name="param" description="" type="int" variable="$index">
            <type by_reference="false">int</type>
          </tag>
          <tag line="134" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="140">
          <name>$index</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="150" package="Default">
        <name>getAllProperties</name>
        <type>function</type>
        <docblock line="145">
          <description><![CDATA[Return all properties of the class.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="145" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Amf/Server.php" hash="68a6f00b2bb64ba4705212982859c9dd" package="Zend\Amf">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Amf"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Server.php 24206 2011-07-06 13:52:02Z matthew $"/>
    </docblock>
    <parse_markers>
      <critical line="81" code="50019">No short description for property $_production</critical>
      <critical line="104" code="50019">No short description for property $_session</critical>
      <error line="212" code="50012">No short description for method setSession()</error>
      <error line="293" code="50014">Name of argument $params does not match with the DocBlock's name $param in _dispatch()</error>
      <error line="293" code="50015">Argument $source is missing from the Docblock of _dispatch()</error>
      <notice line="293" code="50013">Parameter $param could not be found in _dispatch()</notice>
      <error line="742" code="50014">Name of argument $argv does not match with the DocBlock's name $arg in setClass()</error>
      <notice line="742" code="50013">Parameter $arg could not be found in setClass()</notice>
      <error line="890" code="50015">Argument $code is missing from the Docblock of fault()</error>
    </parse_markers>
    <include line="23" type="Require Once" package="Default">
      <name>Zend/Server/Interface.php</name>
      <docblock line="22">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="22" name="see" description="\Zend_Server_Interface" refers="\Zend_Server_Interface"/>
      </docblock>
    </include>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Server/Reflection.php</name>
      <docblock line="25">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="25" name="see" description="\Zend_Server_Reflection" refers="\Zend_Server_Reflection"/>
      </docblock>
    </include>
    <include line="29" type="Require Once" package="Default">
      <name>Zend/Amf/Constants.php</name>
      <docblock line="28">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="28" name="see" description="\Zend_Amf_Constants" refers="\Zend_Amf_Constants"/>
      </docblock>
    </include>
    <include line="32" type="Require Once" package="Default">
      <name>Zend/Amf/Value/MessageBody.php</name>
      <docblock line="31">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="31" name="see" description="\Zend_Amf_Value_MessageBody" refers="\Zend_Amf_Value_MessageBody"/>
      </docblock>
    </include>
    <include line="35" type="Require Once" package="Default">
      <name>Zend/Amf/Value/MessageHeader.php</name>
      <docblock line="34">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="34" name="see" description="\Zend_Amf_Value_MessageHeader" refers="\Zend_Amf_Value_MessageHeader"/>
      </docblock>
    </include>
    <include line="38" type="Require Once" package="Default">
      <name>Zend/Amf/Value/Messaging/CommandMessage.php</name>
      <docblock line="37">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="37" name="see" description="\Zend_Amf_Value_Messaging_CommandMessage" refers="\Zend_Amf_Value_Messaging_CommandMessage"/>
      </docblock>
    </include>
    <include line="41" type="Require Once" package="Default">
      <name>Zend/Loader/PluginLoader.php</name>
      <docblock line="40">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="40" name="see" description="\Zend_Loader_PluginLoader" refers="\Zend_Loader_PluginLoader"/>
      </docblock>
    </include>
    <include line="44" type="Require Once" package="Default">
      <name>Zend/Amf/Parse/TypeLoader.php</name>
      <docblock line="43">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="43" name="see" description="\Zend_Amf_Parse_TypeLoader" refers="\Zend_Amf_Parse_TypeLoader"/>
      </docblock>
    </include>
    <include line="47" type="Require Once" package="Default">
      <name>Zend/Auth.php</name>
      <docblock line="46">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="46" name="see" description="\Zend_Auth" refers="\Zend_Auth"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="58" package="Zend\Amf\Server">
      <name>Zend_Amf_Server</name>
      <full_name>\Zend_Amf_Server</full_name>
      <extends/>
      <extends>\Zend_Server_Interface</extends>
      <docblock line="48">
        <description><![CDATA[An AMF gateway server implementation to allow the connection of the Adobe Flash Player to
Zend Framework]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="48" name="todo" description="Make the reflection methods cache and autoload."/>
        <tag line="48" name="package" description="Zend_Amf"/>
        <tag line="48" name="subpackage" description="Server"/>
        <tag line="48" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="48" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="64" package="Default">
        <name>$_methods</name>
        <default><![CDATA[array()]]></default>
        <docblock line="60">
          <description><![CDATA[Array of dispatchables]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="60" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="73" package="Default">
        <name>$_classAllowed</name>
        <default><![CDATA[array()]]></default>
        <docblock line="66">
          <description><![CDATA[Array of classes that can be called without being explicitly loaded]]></description>
          <long-description><![CDATA[<p>Keys are class names.</p>]]></long-description>
          <tag line="66" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="79" package="Default">
        <name>$_loader</name>
        <default><![CDATA[]]></default>
        <docblock line="75">
          <description><![CDATA[Loader for classes in added directories]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="75" name="var" description="" type="\Zend_Loader_PluginLoader">
            <type by_reference="false">\Zend_Loader_PluginLoader</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="84" package="Default">
        <name>$_production</name>
        <default><![CDATA[true]]></default>
        <docblock line="81">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="81" name="var" description="Production flag; whether or not to return exception messages" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="90" package="Default">
        <name>$_request</name>
        <default><![CDATA[null]]></default>
        <docblock line="86">
          <description><![CDATA[Request processed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="86" name="var" description="" type="null|\Zend_Amf_Request">
            <type by_reference="false">null</type>
            <type by_reference="false">\Zend_Amf_Request</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="96" package="Default">
        <name>$_response</name>
        <default><![CDATA[]]></default>
        <docblock line="92">
          <description><![CDATA[Class to use for responses]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="92" name="var" description="" type="null|\Zend_Amf_Response">
            <type by_reference="false">null</type>
            <type by_reference="false">\Zend_Amf_Response</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="102" package="Default">
        <name>$_table</name>
        <default><![CDATA[array()]]></default>
        <docblock line="98">
          <description><![CDATA[Dispatch table of name => method pairs]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="98" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="108" package="Default">
        <name>$_session</name>
        <default><![CDATA[false]]></default>
        <docblock line="104">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="104" name="var" description="session flag; whether or not to add a session to each response." type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="114" package="Default">
        <name>$_sesionNamespace</name>
        <default><![CDATA['zend_amf']]></default>
        <docblock line="110">
          <description><![CDATA[Namespace allows all AMF calls to not clobber other PHP session variables]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="110" name="var" description="default session namespace zend_amf" type="\Zend_Session_NameSpace">
            <type by_reference="false">\Zend_Session_NameSpace</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="120" package="Default">
        <name>$_sessionName</name>
        <default><![CDATA['PHPSESSID']]></default>
        <docblock line="116">
          <description><![CDATA[Set the default session.name if php_]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="116" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="127" package="Default">
        <name>$_auth</name>
        <default><![CDATA[]]></default>
        <docblock line="122">
          <description><![CDATA[Authentication handler object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="122" name="var" description="" type="\Zend_Amf_Auth_Abstract">
            <type by_reference="false">\Zend_Amf_Auth_Abstract</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="133" package="Default">
        <name>$_acl</name>
        <default><![CDATA[]]></default>
        <docblock line="128">
          <description><![CDATA[ACL handler object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="128" name="var" description="" type="\Zend_Acl">
            <type by_reference="false">\Zend_Acl</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="137" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="134">
          <description><![CDATA[The server constructor]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="151" package="Default">
        <name>setAuth</name>
        <type>function</type>
        <docblock line="142">
          <description><![CDATA[Set authentication adapter]]></description>
          <long-description><![CDATA[<p>If the authentication adapter implements a "getAcl()" method, populate
the ACL of this instance with it (if none exists already).</p>]]></long-description>
          <tag line="142" name="param" description="" type="\Zend_Amf_Auth_Abstract" variable="$auth">
            <type by_reference="false">\Zend_Amf_Auth_Abstract</type>
          </tag>
          <tag line="142" name="return" description="" type="\Zend_Amf_Server">
            <type by_reference="false">\Zend_Amf_Server</type>
          </tag>
        </docblock>
        <argument line="151">
          <name>$auth</name>
          <default><![CDATA[]]></default>
          <type>Zend_Amf_Auth_Abstract</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="164" package="Default">
        <name>getAuth</name>
        <type>function</type>
        <docblock line="159">
          <description><![CDATA[Get authentication adapter]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="159" name="return" description="" type="\Zend_Amf_Auth_Abstract">
            <type by_reference="false">\Zend_Amf_Auth_Abstract</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="175" package="Default">
        <name>setAcl</name>
        <type>function</type>
        <docblock line="169">
          <description><![CDATA[Set ACL adapter]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="169" name="param" description="" type="\Zend_Acl" variable="$acl">
            <type by_reference="false">\Zend_Acl</type>
          </tag>
          <tag line="169" name="return" description="" type="\Zend_Amf_Server">
            <type by_reference="false">\Zend_Amf_Server</type>
          </tag>
        </docblock>
        <argument line="175">
          <name>$acl</name>
          <default><![CDATA[]]></default>
          <type>Zend_Acl</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="185" package="Default">
        <name>getAcl</name>
        <type>function</type>
        <docblock line="180">
          <description><![CDATA[Get ACL adapter]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="180" name="return" description="" type="\Zend_Acl">
            <type by_reference="false">\Zend_Acl</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="196" package="Default">
        <name>setProduction</name>
        <type>function</type>
        <docblock line="190">
          <description><![CDATA[Set production flag]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="190" name="param" description="" type="bool" variable="$flag">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="190" name="return" description="" type="\Zend_Amf_Server">
            <type by_reference="false">\Zend_Amf_Server</type>
          </tag>
        </docblock>
        <argument line="196">
          <name>$flag</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="207" package="Default">
        <name>isProduction</name>
        <type>function</type>
        <docblock line="202">
          <description><![CDATA[Whether or not the server is in production]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="202" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="216" package="Default">
        <name>setSession</name>
        <type>function</type>
        <docblock line="212">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="212" name="param" description="of all incoming sessions defaults to Zend_Amf" type="\default" variable="$namespace">
            <type by_reference="false">\default</type>
          </tag>
          <tag line="212" name="return" description="" type="\Zend_Amf_Server">
            <type by_reference="false">\Zend_Amf_Server</type>
          </tag>
        </docblock>
        <argument line="216">
          <name>$namespace</name>
          <default><![CDATA['Zend_Amf']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="228" package="Default">
        <name>isSession</name>
        <type>function</type>
        <docblock line="224">
          <description><![CDATA[Whether of not the server is using sessions]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="224" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="240" package="Default">
        <name>_checkAcl</name>
        <type>function</type>
        <docblock line="233">
          <description><![CDATA[Check if the ACL allows accessing the function or method]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="233" name="param" description="Object or class being accessed" type="string|object" variable="$object">
            <type by_reference="false">string</type>
            <type by_reference="false">object</type>
          </tag>
          <tag line="233" name="param" description="Function or method being accessed" type="string" variable="$function">
            <type by_reference="false">string</type>
          </tag>
          <tag line="233" name="return" description="" type="\unknown_type">
            <type by_reference="false">\unknown_type</type>
          </tag>
        </docblock>
        <argument line="240">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="240">
          <name>$function</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="284" package="Default">
        <name>getLoader</name>
        <type>function</type>
        <docblock line="279">
          <description><![CDATA[Get PluginLoader for the Server]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="279" name="return" description="" type="\Zend_Loader_PluginLoader">
            <type by_reference="false">\Zend_Loader_PluginLoader</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="302" package="Default">
        <name>_dispatch</name>
        <type>function</type>
        <docblock line="293">
          <description><![CDATA[Loads a remote class or method and executes the function and returns
the result]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="293" name="param" description="Is the method to execute" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="293" name="param" description="values for the method" type="mixed" variable="$param">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="293" name="return" description="$response the result of executing the method" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="293" name="throws" description="" type="\Zend_Amf_Server_Exception">
            <type by_reference="false">\Zend_Amf_Server_Exception</type>
          </tag>
        </docblock>
        <argument line="302">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="302">
          <name>$params</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="302">
          <name>$source</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="384" package="Default">
        <name>_loadCommandMessage</name>
        <type>function</type>
        <docblock line="375">
          <description><![CDATA[Handles each of the 11 different command message types.]]></description>
          <long-description><![CDATA[<p>A command message is a flex.messaging.messages.CommandMessage</p>]]></long-description>
          <tag line="375" name="see" description="\Zend_Amf_Value_Messaging_CommandMessage" refers="\Zend_Amf_Value_Messaging_CommandMessage"/>
          <tag line="375" name="param" description="" type="\Zend_Amf_Value_Messaging_CommandMessage" variable="$message">
            <type by_reference="false">\Zend_Amf_Value_Messaging_CommandMessage</type>
          </tag>
          <tag line="375" name="return" description="" type="\Zend_Amf_Value_Messaging_AcknowledgeMessage">
            <type by_reference="false">\Zend_Amf_Value_Messaging_AcknowledgeMessage</type>
          </tag>
        </docblock>
        <argument line="384">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type>Zend_Amf_Value_Messaging_CommandMessage</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="431" package="Default">
        <name>_errorMessage</name>
        <type>function</type>
        <docblock line="420">
          <description><![CDATA[Create appropriate error message]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="420" name="param" description="Current AMF encoding" type="int" variable="$objectEncoding">
            <type by_reference="false">int</type>
          </tag>
          <tag line="420" name="param" description="Message that was being processed when error happened" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="420" name="param" description="Error description" type="string" variable="$description">
            <type by_reference="false">string</type>
          </tag>
          <tag line="420" name="param" description="Detailed data about the error" type="mixed" variable="$detail">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="420" name="param" description="Error code" type="int" variable="$code">
            <type by_reference="false">int</type>
          </tag>
          <tag line="420" name="param" description="Error line" type="int" variable="$line">
            <type by_reference="false">int</type>
          </tag>
          <tag line="420" name="return" description="" type="\Zend_Amf_Value_Messaging_ErrorMessage|array">
            <type by_reference="false">\Zend_Amf_Value_Messaging_ErrorMessage</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="431">
          <name>$objectEncoding</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="431">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="431">
          <name>$description</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="431">
          <name>$detail</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="431">
          <name>$code</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="431">
          <name>$line</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="460" package="Default">
        <name>_handleAuth</name>
        <type>function</type>
        <docblock line="453">
          <description><![CDATA[Handle AMF authentication]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="453" name="param" description="" type="string" variable="$userid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="453" name="param" description="" type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="453" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="460">
          <name>$userid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="460">
          <name>$password</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="492" package="Default">
        <name>_handle</name>
        <type>function</type>
        <docblock line="483">
          <description><![CDATA[Takes the deserialized AMF request and performs any operations.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="483" name="todo" description="should implement and SPL observer pattern for custom AMF headers"/>
          <tag line="483" name="todo" description="DescribeService support"/>
          <tag line="483" name="param" description="" type="\Zend_Amf_Request" variable="$request">
            <type by_reference="false">\Zend_Amf_Request</type>
          </tag>
          <tag line="483" name="return" description="" type="\Zend_Amf_Response">
            <type by_reference="false">\Zend_Amf_Response</type>
          </tag>
          <tag line="483" name="throws" description="" type="\Zend_Amf_server_Exception|\Exception">
            <type by_reference="false">\Zend_Amf_server_Exception</type>
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="492">
          <name>$request</name>
          <default><![CDATA[]]></default>
          <type>Zend_Amf_Request</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="638" package="Default">
        <name>handle</name>
        <type>function</type>
        <docblock line="632">
          <description><![CDATA[Handle an AMF call from the gateway.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="632" name="param" description="Optional" type="null|\Zend_Amf_Request" variable="$request">
            <type by_reference="false">null</type>
            <type by_reference="false">\Zend_Amf_Request</type>
          </tag>
          <tag line="632" name="return" description="" type="\Zend_Amf_Response">
            <type by_reference="false">\Zend_Amf_Response</type>
          </tag>
        </docblock>
        <argument line="638">
          <name>$request</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="675" package="Default">
        <name>setRequest</name>
        <type>function</type>
        <docblock line="669">
          <description><![CDATA[Set request object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="669" name="param" description="" type="string|\Zend_Amf_Request" variable="$request">
            <type by_reference="false">string</type>
            <type by_reference="false">\Zend_Amf_Request</type>
          </tag>
          <tag line="669" name="return" description="" type="\Zend_Amf_Server">
            <type by_reference="false">\Zend_Amf_Server</type>
          </tag>
        </docblock>
        <argument line="675">
          <name>$request</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="696" package="Default">
        <name>getRequest</name>
        <type>function</type>
        <docblock line="691">
          <description><![CDATA[Return currently registered request object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="691" name="return" description="" type="null|\Zend_Amf_Request">
            <type by_reference="false">null</type>
            <type by_reference="false">\Zend_Amf_Request</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="712" package="Default">
        <name>setResponse</name>
        <type>function</type>
        <docblock line="706">
          <description><![CDATA[Public access method to private Zend_Amf_Server_Response reference]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="706" name="param" description="" type="string|\Zend_Amf_Server_Response" variable="$response">
            <type by_reference="false">string</type>
            <type by_reference="false">\Zend_Amf_Server_Response</type>
          </tag>
          <tag line="706" name="return" description="" type="\Zend_Amf_Server">
            <type by_reference="false">\Zend_Amf_Server</type>
          </tag>
        </docblock>
        <argument line="712">
          <name>$response</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="733" package="Default">
        <name>getResponse</name>
        <type>function</type>
        <docblock line="728">
          <description><![CDATA[get a reference to the Zend_Amf_response instance]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="728" name="return" description="" type="\Zend_Amf_Server_Response">
            <type by_reference="false">\Zend_Amf_Server_Response</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="757" package="Default">
        <name>setClass</name>
        <type>function</type>
        <docblock line="742">
          <description><![CDATA[Attach a class or object to the server]]></description>
          <long-description><![CDATA[<p>Class may be either a class name or an instantiated object. Reflection
is done on the class or object to determine the available public
methods, and each is attached to the server as and available method. If
a $namespace has been provided, that namespace is used to prefix
AMF service call.</p>]]></long-description>
          <tag line="742" name="param" description="" type="string|object" variable="$class">
            <type by_reference="false">string</type>
            <type by_reference="false">object</type>
          </tag>
          <tag line="742" name="param" description="Optional" type="string" variable="$namespace">
            <type by_reference="false">string</type>
          </tag>
          <tag line="742" name="param" description="Optional arguments to pass to a method" type="mixed" variable="$arg">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="742" name="return" description="" type="\Zend_Amf_Server">
            <type by_reference="false">\Zend_Amf_Server</type>
          </tag>
          <tag line="742" name="throws" description="on invalid input" type="\Zend_Amf_Server_Exception">
            <type by_reference="false">\Zend_Amf_Server_Exception</type>
          </tag>
        </docblock>
        <argument line="757">
          <name>$class</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="757">
          <name>$namespace</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
        <argument line="757">
          <name>$argv</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="798" package="Default">
        <name>addFunction</name>
        <type>function</type>
        <docblock line="786">
          <description><![CDATA[Attach a function to the server]]></description>
          <long-description><![CDATA[<p>Additional arguments to pass to the function at dispatch may be passed;
any arguments following the namespace will be aggregated and passed at
dispatch time.</p>]]></long-description>
          <tag line="786" name="param" description="Valid callback" type="string|array" variable="$function">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="786" name="param" description="Optional namespace prefix" type="string" variable="$namespace">
            <type by_reference="false">string</type>
          </tag>
          <tag line="786" name="return" description="" type="\Zend_Amf_Server">
            <type by_reference="false">\Zend_Amf_Server</type>
          </tag>
          <tag line="786" name="throws" description="" type="\Zend_Amf_Server_Exception">
            <type by_reference="false">\Zend_Amf_Server_Exception</type>
          </tag>
        </docblock>
        <argument line="798">
          <name>$function</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="798">
          <name>$namespace</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="830" package="Default">
        <name>addDirectory</name>
        <type>function</type>
        <docblock line="824">
          <description><![CDATA[Creates an array of directories in which services can reside.]]></description>
          <long-description><![CDATA[<p>TODO: add support for prefixes?</p>]]></long-description>
          <tag line="824" name="param" description="" type="string" variable="$dir">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="830">
          <name>$dir</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="840" package="Default">
        <name>getDirectory</name>
        <type>function</type>
        <docblock line="835">
          <description><![CDATA[Returns an array of directories that can hold services.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="835" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="853" package="Default">
        <name>_buildDispatchTable</name>
        <type>function</type>
        <docblock line="845">
          <description><![CDATA[(Re)Build the dispatch table]]></description>
          <long-description><![CDATA[<p>The dispatch table consists of a an array of method name =>
Zend_Server_Reflection_Function_Abstract pairs</p>]]></long-description>
          <tag line="845" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="898" package="Default">
        <name>fault</name>
        <type>function</type>
        <docblock line="890">
          <description><![CDATA[Raise a server fault]]></description>
          <long-description><![CDATA[<p>Unimplemented</p>]]></long-description>
          <tag line="890" name="param" description="" type="string|\Exception" variable="$fault">
            <type by_reference="false">string</type>
            <type by_reference="false">\Exception</type>
          </tag>
          <tag line="890" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="898">
          <name>$fault</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="898">
          <name>$code</name>
          <default><![CDATA[404]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="910" package="Default">
        <name>getFunctions</name>
        <type>function</type>
        <docblock line="902">
          <description><![CDATA[Returns a list of registered methods]]></description>
          <long-description><![CDATA[<p>Returns an array of dispatchables (Zend_Server_Reflection_Function,
_Method, and _Class items).</p>]]></long-description>
          <tag line="902" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="923" package="Default">
        <name>setPersistence</name>
        <type>function</type>
        <docblock line="915">
          <description><![CDATA[Set server persistence]]></description>
          <long-description><![CDATA[<p>Unimplemented</p>]]></long-description>
          <tag line="915" name="param" description="" type="mixed" variable="$mode">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="915" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="923">
          <name>$mode</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="935" package="Default">
        <name>loadFunctions</name>
        <type>function</type>
        <docblock line="927">
          <description><![CDATA[Load server definition]]></description>
          <long-description><![CDATA[<p>Unimplemented</p>]]></long-description>
          <tag line="927" name="param" description="" type="array" variable="$definition">
            <type by_reference="false">array</type>
          </tag>
          <tag line="927" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="935">
          <name>$definition</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="946" package="Default">
        <name>setClassMap</name>
        <type>function</type>
        <docblock line="939">
          <description><![CDATA[Map ActionScript classes to PHP classes]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="939" name="param" description="" type="string" variable="$asClass">
            <type by_reference="false">string</type>
          </tag>
          <tag line="939" name="param" description="" type="string" variable="$phpClass">
            <type by_reference="false">string</type>
          </tag>
          <tag line="939" name="return" description="" type="\Zend_Amf_Server">
            <type by_reference="false">\Zend_Amf_Server</type>
          </tag>
        </docblock>
        <argument line="946">
          <name>$asClass</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="946">
          <name>$phpClass</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="960" package="Default">
        <name>listMethods</name>
        <type>function</type>
        <docblock line="953">
          <description><![CDATA[List all available methods]]></description>
          <long-description><![CDATA[<p>Returns an array of method names.</p>]]></long-description>
          <tag line="953" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Amf/Auth/Abstract.php" hash="8a10e51288a7f63994df15382e9c1256" package="Zend\Amf">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Amf"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Abstract.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <error line="35" code="50018">No DocBlock was found for property $_username</error>
      <error line="36" code="50018">No DocBlock was found for property $_password</error>
      <error line="38" code="50010">No DocBlock was found for method setCredentials()</error>
    </parse_markers>
    <include line="23" type="Require Once" package="Default">
      <name>Zend/Auth/Adapter/Interface.php</name>
      <docblock line="22">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="22" name="see" description="\Zend_Auth_Adapter_Interface" refers="\Zend_Auth_Adapter_Interface"/>
      </docblock>
    </include>
    <class final="false" abstract="true" namespace="default" line="33" package="Zend\Amf\Auth">
      <name>Zend_Amf_Auth_Abstract</name>
      <full_name>\Zend_Amf_Auth_Abstract</full_name>
      <extends/>
      <extends>\Zend_Auth_Adapter_Interface</extends>
      <docblock line="25">
        <description><![CDATA[Base abstract class for AMF authentication implementation]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="25" name="package" description="Zend_Amf"/>
        <tag line="25" name="subpackage" description="Auth"/>
        <tag line="25" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="25" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="35">
        <name>$_username</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="36">
        <name>$_password</name>
        <default><![CDATA[]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="38">
        <name>setCredentials</name>
        <type>function</type>
        <argument line="38">
          <name>$username</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="38">
          <name>$password</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Amf/Response/Http.php" hash="c8a6ce38d1c5a121dc66a464bbde7d2b" package="Zend\Amf\Response">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Amf"/>
      <tag line="2" name="subpackage" description="Response"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Http.php 24482 2011-09-29 14:19:21Z matthew $"/>
    </docblock>
    <parse_markers>
      <error line="57" code="50010">No DocBlock was found for method isIeOverSsl()</error>
    </parse_markers>
    <include line="24" type="Require Once" package="Default">
      <name>Zend/Amf/Response.php</name>
      <docblock line="23">
        <description><![CDATA[Zend_Amf_Response]]></description>
        <long-description><![CDATA[]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="34" package="Zend\Amf\Response">
      <name>Zend_Amf_Response_Http</name>
      <full_name>\Zend_Amf_Response_Http</full_name>
      <extends>\Zend_Amf_Response</extends>
      <docblock line="26">
        <description><![CDATA[Creates the proper http headers and send the serialized AMF stream to standard out.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="26" name="package" description="Zend_Amf"/>
        <tag line="26" name="subpackage" description="Response"/>
        <tag line="26" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="26" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="41" package="Default">
        <name>getResponse</name>
        <type>function</type>
        <docblock line="36">
          <description><![CDATA[Create the application response header for AMF and sends the serialized AMF string]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="36" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="57">
        <name>isIeOverSsl</name>
        <type>function</type>
      </method>
    </class>
  </file>
  <file path="Zend/Amf/Request.php" hash="fe639d6f393be9596e4e16f8ad498a5f" package="Zend\Amf">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Amf"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Request.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="48" code="50019">No short description for property $_clientType</critical>
      <critical line="53" code="50019">No short description for property $_bodies</critical>
      <critical line="58" code="50019">No short description for property $_headers</critical>
      <critical line="63" code="50019">No short description for property $_objectEncoding</critical>
      <critical line="68" code="50019">No short description for property $_inputStream</critical>
      <critical line="73" code="50019">No short description for property $_deserializer</critical>
      <error line="98" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $stream in readMessage()</error>
    </parse_markers>
    <include line="23" type="Require Once" package="Default">
      <name>Zend/Amf/Parse/InputStream.php</name>
      <docblock line="22">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="22" name="see" description="\Zend_Amf_Parse_InputStream" refers="\Zend_Amf_Parse_InputStream"/>
      </docblock>
    </include>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Amf/Parse/Amf0/Deserializer.php</name>
      <docblock line="25">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="25" name="see" description="\Zend_Amf_Parse_Amf0_Deserializer" refers="\Zend_Amf_Parse_Amf0_Deserializer"/>
      </docblock>
    </include>
    <include line="29" type="Require Once" package="Default">
      <name>Zend/Amf/Constants.php</name>
      <docblock line="28">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="28" name="see" description="\Zend_Amf_Constants" refers="\Zend_Amf_Constants"/>
      </docblock>
    </include>
    <include line="32" type="Require Once" package="Default">
      <name>Zend/Amf/Value/MessageHeader.php</name>
      <docblock line="31">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="31" name="see" description="\Zend_Amf_Value_MessageHeader" refers="\Zend_Amf_Value_MessageHeader"/>
      </docblock>
    </include>
    <include line="35" type="Require Once" package="Default">
      <name>Zend/Amf/Value/MessageBody.php</name>
      <docblock line="34">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="34" name="see" description="\Zend_Amf_Value_MessageBody" refers="\Zend_Amf_Value_MessageBody"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="46" package="Zend\Amf">
      <name>Zend_Amf_Request</name>
      <full_name>\Zend_Amf_Request</full_name>
      <extends/>
      <docblock line="37">
        <description><![CDATA[Handle the incoming AMF request by deserializing the data to php object
types and storing the data for Zend_Amf_Server to handle for processing.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="37" name="todo" description="Currently not checking if the object needs to be Type Mapped to a server object."/>
        <tag line="37" name="package" description="Zend_Amf"/>
        <tag line="37" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="37" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="51" package="Default">
        <name>$_clientType</name>
        <default><![CDATA[0]]></default>
        <docblock line="48">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="48" name="var" description="AMF client type (AMF0, AMF3)" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="56" package="Default">
        <name>$_bodies</name>
        <default><![CDATA[array()]]></default>
        <docblock line="53">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="53" name="var" description="Message bodies" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="61" package="Default">
        <name>$_headers</name>
        <default><![CDATA[array()]]></default>
        <docblock line="58">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="58" name="var" description="Message headers" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="66" package="Default">
        <name>$_objectEncoding</name>
        <default><![CDATA[0]]></default>
        <docblock line="63">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="63" name="var" description="Message encoding to use for objects in response" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="71" package="Default">
        <name>$_inputStream</name>
        <default><![CDATA[]]></default>
        <docblock line="68">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="68" name="var" description="" type="\Zend_Amf_Parse_InputStream">
            <type by_reference="false">\Zend_Amf_Parse_InputStream</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="76" package="Default">
        <name>$_deserializer</name>
        <default><![CDATA[]]></default>
        <docblock line="73">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="73" name="var" description="" type="\Zend_Amf_Parse_AMF0_Deserializer">
            <type by_reference="false">\Zend_Amf_Parse_AMF0_Deserializer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="82" package="Default">
        <name>$_time</name>
        <default><![CDATA[]]></default>
        <docblock line="78">
          <description><![CDATA[Time of the request]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="78" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="90" package="Default">
        <name>initialize</name>
        <type>function</type>
        <docblock line="84">
          <description><![CDATA[Prepare the AMF InputStream for parsing.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="84" name="param" description="" type="string" variable="$request">
            <type by_reference="false">string</type>
          </tag>
          <tag line="84" name="return" description="" type="\Zend_Amf_Request">
            <type by_reference="false">\Zend_Amf_Request</type>
          </tag>
        </docblock>
        <argument line="90">
          <name>$request</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="104" package="Default">
        <name>readMessage</name>
        <type>function</type>
        <docblock line="98">
          <description><![CDATA[Takes the raw AMF input stream and converts it into valid PHP objects]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="98" name="param" description="Zend_Amf_Parse_InputStream" type="" variable="$stream"/>
          <tag line="98" name="return" description="" type="\Zend_Amf_Request">
            <type by_reference="false">\Zend_Amf_Request</type>
          </tag>
        </docblock>
        <argument line="104">
          <name>$stream</name>
          <default><![CDATA[]]></default>
          <type>Zend_Amf_Parse_InputStream</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="144" package="Default">
        <name>readHeader</name>
        <type>function</type>
        <docblock line="133">
          <description><![CDATA[Deserialize a message header from the input stream.]]></description>
          <long-description><![CDATA[<p>A message header is structured as:
- NAME String
- MUST UNDERSTAND Boolean
- LENGTH Int
- DATA Object</p>]]></long-description>
          <tag line="133" name="return" description="" type="\Zend_Amf_Value_MessageHeader">
            <type by_reference="false">\Zend_Amf_Value_MessageHeader</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="166" package="Default">
        <name>readBody</name>
        <type>function</type>
        <docblock line="161">
          <description><![CDATA[Deserialize a message body from the input stream]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="161" name="return" description="" type="\Zend_Amf_Value_MessageBody">
            <type by_reference="false">\Zend_Amf_Value_MessageBody</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="203" package="Default">
        <name>getAmfBodies</name>
        <type>function</type>
        <docblock line="198">
          <description><![CDATA[Return an array of the body objects that were found in the amf request.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="198" name="return" description="{target, response, length, content}" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="214" package="Default">
        <name>addAmfBody</name>
        <type>function</type>
        <docblock line="208">
          <description><![CDATA[Accessor to private array of message bodies.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="208" name="param" description="" type="\Zend_Amf_Value_MessageBody" variable="$message">
            <type by_reference="false">\Zend_Amf_Value_MessageBody</type>
          </tag>
          <tag line="208" name="return" description="" type="\Zend_Amf_Request">
            <type by_reference="false">\Zend_Amf_Request</type>
          </tag>
        </docblock>
        <argument line="214">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type>Zend_Amf_Value_MessageBody</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="225" package="Default">
        <name>getAmfHeaders</name>
        <type>function</type>
        <docblock line="220">
          <description><![CDATA[Return an array of headers that were found in the amf request.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="220" name="return" description="{operation, mustUnderstand, length, param}" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="235" package="Default">
        <name>getObjectEncoding</name>
        <type>function</type>
        <docblock line="230">
          <description><![CDATA[Return the either 0 or 3 for respect AMF version]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="230" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="246" package="Default">
        <name>setObjectEncoding</name>
        <type>function</type>
        <docblock line="240">
          <description><![CDATA[Set the object response encoding]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="240" name="param" description="" type="mixed" variable="$int">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="240" name="return" description="" type="\Zend_Amf_Request">
            <type by_reference="false">\Zend_Amf_Request</type>
          </tag>
        </docblock>
        <argument line="246">
          <name>$int</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Amf/Util/BinaryStream.php" hash="7a5d182545054f57e8aa3ff09c04ca9f" package="Zend\Amf\Util">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Amf"/>
      <tag line="2" name="subpackage" description="Util"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: BinaryStream.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="33" code="50019">No short description for property $_stream</critical>
      <critical line="38" code="50019">No short description for property $_streamLength</critical>
      <critical line="43" code="50019">No short description for property $_bigEndian</critical>
      <critical line="48" code="50019">No short description for property $_needle</critical>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="31" package="Zend\Amf\Util">
      <name>Zend_Amf_Util_BinaryStream</name>
      <full_name>\Zend_Amf_Util_BinaryStream</full_name>
      <extends/>
      <docblock line="23">
        <description><![CDATA[Utility class to walk through a data stream byte by byte with conventional names]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="package" description="Zend_Amf"/>
        <tag line="23" name="subpackage" description="Util"/>
        <tag line="23" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="23" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="36" package="Default">
        <name>$_stream</name>
        <default><![CDATA[]]></default>
        <docblock line="33">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="33" name="var" description="Byte stream" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="41" package="Default">
        <name>$_streamLength</name>
        <default><![CDATA[]]></default>
        <docblock line="38">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="38" name="var" description="Length of stream" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="46" package="Default">
        <name>$_bigEndian</name>
        <default><![CDATA[]]></default>
        <docblock line="43">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="43" name="var" description="BigEndian encoding?" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="51" package="Default">
        <name>$_needle</name>
        <default><![CDATA[]]></default>
        <docblock line="48">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="48" name="var" description="Current position in stream" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="63" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="53">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[<p>Create a reference to a byte stream that is going to be parsed or created
by the methods in the class. Detect if the class should use big or
little Endian encoding.</p>]]></long-description>
          <tag line="53" name="param" description="use '' if creating a new stream or pass a string if reading." type="string" variable="$stream">
            <type by_reference="false">string</type>
          </tag>
          <tag line="53" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="63">
          <name>$stream</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="81" package="Default">
        <name>getStream</name>
        <type>function</type>
        <docblock line="76">
          <description><![CDATA[Returns the current stream]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="76" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="94" package="Default">
        <name>readBytes</name>
        <type>function</type>
        <docblock line="86">
          <description><![CDATA[Read the number of bytes in a row for the length supplied.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="86" name="todo" description="Should check that there are enough bytes left in the stream we are about to read."/>
          <tag line="86" name="param" description="" type="int" variable="$length">
            <type by_reference="false">int</type>
          </tag>
          <tag line="86" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="86" name="throws" description="for buffer underrun" type="\Zend_Amf_Exception">
            <type by_reference="false">\Zend_Amf_Exception</type>
          </tag>
        </docblock>
        <argument line="94">
          <name>$length</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="113" package="Default">
        <name>writeBytes</name>
        <type>function</type>
        <docblock line="105">
          <description><![CDATA[Write any length of bytes to the stream]]></description>
          <long-description><![CDATA[<p>Usually a string.</p>]]></long-description>
          <tag line="105" name="param" description="" type="string" variable="$bytes">
            <type by_reference="false">string</type>
          </tag>
          <tag line="105" name="return" description="" type="\Zend_Amf_Util_BinaryStream">
            <type by_reference="false">\Zend_Amf_Util_BinaryStream</type>
          </tag>
        </docblock>
        <argument line="113">
          <name>$bytes</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="124" package="Default">
        <name>readByte</name>
        <type>function</type>
        <docblock line="119">
          <description><![CDATA[Reads a signed byte]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="119" name="return" description="Value is in the range of -128 to 127." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="140" package="Default">
        <name>writeByte</name>
        <type>function</type>
        <docblock line="134">
          <description><![CDATA[Writes the passed string into a signed byte on the stream.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="134" name="param" description="" type="string" variable="$stream">
            <type by_reference="false">string</type>
          </tag>
          <tag line="134" name="return" description="" type="\Zend_Amf_Util_BinaryStream">
            <type by_reference="false">\Zend_Amf_Util_BinaryStream</type>
          </tag>
        </docblock>
        <argument line="140">
          <name>$stream</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="151" package="Default">
        <name>readInt</name>
        <type>function</type>
        <docblock line="146">
          <description><![CDATA[Reads a signed 32-bit integer from the data stream.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="146" name="return" description="Value is in the range of -2147483648 to 2147483647" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="162" package="Default">
        <name>writeInt</name>
        <type>function</type>
        <docblock line="156">
          <description><![CDATA[Write an the integer to the output stream as a 32 bit signed integer]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="156" name="param" description="" type="int" variable="$stream">
            <type by_reference="false">int</type>
          </tag>
          <tag line="156" name="return" description="" type="\Zend_Amf_Util_BinaryStream">
            <type by_reference="false">\Zend_Amf_Util_BinaryStream</type>
          </tag>
        </docblock>
        <argument line="162">
          <name>$stream</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="173" package="Default">
        <name>readUtf</name>
        <type>function</type>
        <docblock line="168">
          <description><![CDATA[Reads a UTF-8 string from the data stream]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="168" name="return" description="A UTF-8 string produced by the byte representation of characters" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="185" package="Default">
        <name>writeUtf</name>
        <type>function</type>
        <docblock line="179">
          <description><![CDATA[Wite a UTF-8 string to the outputstream]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="179" name="param" description="" type="string" variable="$stream">
            <type by_reference="false">string</type>
          </tag>
          <tag line="179" name="return" description="" type="\Zend_Amf_Util_BinaryStream">
            <type by_reference="false">\Zend_Amf_Util_BinaryStream</type>
          </tag>
        </docblock>
        <argument line="185">
          <name>$stream</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="198" package="Default">
        <name>readLongUtf</name>
        <type>function</type>
        <docblock line="193">
          <description><![CDATA[Read a long UTF string]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="193" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="210" package="Default">
        <name>writeLongUtf</name>
        <type>function</type>
        <docblock line="204">
          <description><![CDATA[Write a long UTF string to the buffer]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="204" name="param" description="" type="string" variable="$stream">
            <type by_reference="false">string</type>
          </tag>
          <tag line="204" name="return" description="" type="\Zend_Amf_Util_BinaryStream">
            <type by_reference="false">\Zend_Amf_Util_BinaryStream</type>
          </tag>
        </docblock>
        <argument line="210">
          <name>$stream</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="221" package="Default">
        <name>readLong</name>
        <type>function</type>
        <docblock line="216">
          <description><![CDATA[Read a long numeric value]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="216" name="return" description="" type="double">
            <type by_reference="false">double</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="232" package="Default">
        <name>writeLong</name>
        <type>function</type>
        <docblock line="226">
          <description><![CDATA[Write long numeric value to output stream]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="226" name="param" description="" type="int|string" variable="$stream">
            <type by_reference="false">int</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="226" name="return" description="" type="\Zend_Amf_Util_BinaryStream">
            <type by_reference="false">\Zend_Amf_Util_BinaryStream</type>
          </tag>
        </docblock>
        <argument line="232">
          <name>$stream</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="244" package="Default">
        <name>readUnsignedShort</name>
        <type>function</type>
        <docblock line="238">
          <description><![CDATA[Read a 16 bit unsigned short.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="238" name="todo" description="This could use the unpack() w/ S,n, or v"/>
          <tag line="238" name="return" description="" type="double">
            <type by_reference="false">double</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="256" package="Default">
        <name>readDouble</name>
        <type>function</type>
        <docblock line="251">
          <description><![CDATA[Reads an IEEE 754 double-precision floating point number from the data stream.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="251" name="return" description="Floating point number" type="double">
            <type by_reference="false">double</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="275" package="Default">
        <name>writeDouble</name>
        <type>function</type>
        <docblock line="269">
          <description><![CDATA[Writes an IEEE 754 double-precision floating point number from the data stream.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="269" name="param" description="" type="string|double" variable="$stream">
            <type by_reference="false">string</type>
            <type by_reference="false">double</type>
          </tag>
          <tag line="269" name="return" description="" type="\Zend_Amf_Util_BinaryStream">
            <type by_reference="false">\Zend_Amf_Util_BinaryStream</type>
          </tag>
        </docblock>
        <argument line="275">
          <name>$stream</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Amf/Parse/Serializer.php" hash="2c985e42bf34e15bb85df7612f1ba915" package="Zend\Amf\Parse">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Amf"/>
      <tag line="2" name="subpackage" description="Parse"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Serializer.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <class final="false" abstract="true" namespace="default" line="31" package="Zend\Amf\Parse">
      <name>Zend_Amf_Parse_Serializer</name>
      <full_name>\Zend_Amf_Parse_Serializer</full_name>
      <extends/>
      <docblock line="23">
        <description><![CDATA[Base abstract class for all AMF serializers.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="package" description="Zend_Amf"/>
        <tag line="23" name="subpackage" description="Parse"/>
        <tag line="23" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="23" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="38" package="Default">
        <name>$_stream</name>
        <default><![CDATA[]]></default>
        <docblock line="33">
          <description><![CDATA[Reference to the current output stream being constructed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="33" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="46" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="40">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="40" name="param" description="" type="\Zend_Amf_Parse_OutputStream" variable="$stream">
            <type by_reference="false">\Zend_Amf_Parse_OutputStream</type>
          </tag>
          <tag line="40" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="46">
          <name>$stream</name>
          <default><![CDATA[]]></default>
          <type>Zend_Amf_Parse_OutputStream</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="default" line="59" package="Default">
        <name>writeTypeMarker</name>
        <type>function</type>
        <docblock line="51">
          <description><![CDATA[Find the PHP object type and convert it into an AMF object type]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="51" name="param" description="" type="mixed" variable="$content">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="51" name="param" description="" type="int" variable="$markerType">
            <type by_reference="false">int</type>
          </tag>
          <tag line="51" name="param" description="" type="mixed" variable="$contentByVal">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="51" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="59">
          <name>$content</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="59">
          <name>$markerType</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="59">
          <name>$contentByVal</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Amf/Parse/Deserializer.php" hash="45c5b11a0faf91fb13aba9acae548109" package="Zend\Amf\Parse">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Amf"/>
      <tag line="2" name="subpackage" description="Parse"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Deserializer.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <error line="56" code="50014">Name of argument $markerType does not match with the DocBlock's name $typeMarker in readTypeMarker()</error>
      <notice line="56" code="50013">Parameter $typeMarker could not be found in readTypeMarker()</notice>
    </parse_markers>
    <class final="false" abstract="true" namespace="default" line="36" package="Zend\Amf\Parse">
      <name>Zend_Amf_Parse_Deserializer</name>
      <full_name>\Zend_Amf_Parse_Deserializer</full_name>
      <extends/>
      <docblock line="23">
        <description><![CDATA[Abstract cass that all deserializer must implement.]]></description>
        <long-description><![CDATA[<p>Logic for deserialization of the AMF envelop is based on resources supplied
by Adobe Blaze DS. For and example of deserialization please review the BlazeDS
source tree.</p>]]></long-description>
        <tag line="23" name="see" description="\http://opensource.adobe.com/svn/opensource/blazeds/trunk/modules/core/src/java/flex/messaging/io/amf/" refers="\http://opensource.adobe.com/svn/opensource/blazeds/trunk/modules/core/src/java/flex/messaging/io/amf/"/>
        <tag line="23" name="package" description="Zend_Amf"/>
        <tag line="23" name="subpackage" description="Parse"/>
        <tag line="23" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="23" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="43" package="Default">
        <name>$_stream</name>
        <default><![CDATA[]]></default>
        <docblock line="38">
          <description><![CDATA[The raw string that represents the AMF request.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="38" name="var" description="" type="\Zend_Amf_Parse_InputStream">
            <type by_reference="false">\Zend_Amf_Parse_InputStream</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="51" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="45">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="45" name="param" description="" type="\Zend_Amf_Parse_InputStream" variable="$stream">
            <type by_reference="false">\Zend_Amf_Parse_InputStream</type>
          </tag>
          <tag line="45" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$stream</name>
          <default><![CDATA[]]></default>
          <type>Zend_Amf_Parse_InputStream</type>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="default" line="64" package="Default">
        <name>readTypeMarker</name>
        <type>function</type>
        <docblock line="56">
          <description><![CDATA[Checks for AMF marker types and calls the appropriate methods
for deserializing those marker types. Markers are the data type of
the following value.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="56" name="param" description="" type="int" variable="$typeMarker">
            <type by_reference="false">int</type>
          </tag>
          <tag line="56" name="return" description="Whatever the data type is of the marker in php" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="64">
          <name>$markerType</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Amf/Parse/InputStream.php" hash="0809c8a7eb8fc3915dfba4a89ce7211e" package="Zend\Amf\Parse">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Amf"/>
      <tag line="2" name="subpackage" description="Parse"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: InputStream.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <include line="24" type="Require Once" package="Default">
      <name>Zend/Amf/Util/BinaryStream.php</name>
      <docblock line="23">
        <description><![CDATA[Zend_Amf_Util_BinaryStream]]></description>
        <long-description><![CDATA[]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="37" package="Zend\Amf\Parse">
      <name>Zend_Amf_Parse_InputStream</name>
      <full_name>\Zend_Amf_Parse_InputStream</full_name>
      <extends>\Zend_Amf_Util_BinaryStream</extends>
      <docblock line="26">
        <description><![CDATA[InputStream is used to iterate at a binary level through the AMF request.]]></description>
        <long-description><![CDATA[<p>InputStream extends BinaryStream as eventually BinaryStream could be placed
outside of Zend_Amf in order to allow other packages to use the class.</p>]]></long-description>
        <tag line="26" name="package" description="Zend_Amf"/>
        <tag line="26" name="subpackage" description="Parse"/>
        <tag line="26" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="26" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
    </class>
  </file>
  <file path="Zend/Amf/Parse/TypeLoader.php" hash="7dd577bf6a9c635cceb955dc9d9dc745" package="Zend\Amf\Parse">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Amf"/>
      <tag line="2" name="subpackage" description="Parse"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: TypeLoader.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="55" code="50019">No short description for property $callbackClass</critical>
      <critical line="60" code="50019">No short description for property $classMap</critical>
      <critical line="72" code="50019">No short description for property $_defaultClassMap</critical>
      <critical line="84" code="50019">No short description for property $_resourceLoader</critical>
    </parse_markers>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Amf/Value/Messaging/AcknowledgeMessage.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Amf_Value_Messaging_AcknowledgeMessage" refers="\Zend_Amf_Value_Messaging_AcknowledgeMessage"/>
      </docblock>
    </include>
    <include line="30" type="Require Once" package="Default">
      <name>Zend/Amf/Value/Messaging/AsyncMessage.php</name>
      <docblock line="27">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="27" name="see" description="\Zend_Amf_Value_Messaging_AsyncMessage" refers="\Zend_Amf_Value_Messaging_AsyncMessage"/>
      </docblock>
    </include>
    <include line="34" type="Require Once" package="Default">
      <name>Zend/Amf/Value/Messaging/CommandMessage.php</name>
      <docblock line="31">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="31" name="see" description="\Zend_Amf_Value_Messaging_CommandMessage" refers="\Zend_Amf_Value_Messaging_CommandMessage"/>
      </docblock>
    </include>
    <include line="38" type="Require Once" package="Default">
      <name>Zend/Amf/Value/Messaging/ErrorMessage.php</name>
      <docblock line="35">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="see" description="\Zend_Amf_Value_Messaging_ErrorMessage" refers="\Zend_Amf_Value_Messaging_ErrorMessage"/>
      </docblock>
    </include>
    <include line="42" type="Require Once" package="Default">
      <name>Zend/Amf/Value/Messaging/RemotingMessage.php</name>
      <docblock line="39">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="39" name="see" description="\Zend_Amf_Value_Messaging_RemotingMessage" refers="\Zend_Amf_Value_Messaging_RemotingMessage"/>
      </docblock>
    </include>
    <class final="true" abstract="false" namespace="default" line="53" package="Zend\Amf\Parse">
      <name>Zend_Amf_Parse_TypeLoader</name>
      <full_name>\Zend_Amf_Parse_TypeLoader</full_name>
      <extends/>
      <docblock line="44">
        <description><![CDATA[Loads a local class and executes the instantiation of that class.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="44" name="todo" description="PHP 5.3 can drastically change this class w/ namespace and the new call_user_func w/ namespace"/>
        <tag line="44" name="package" description="Zend_Amf"/>
        <tag line="44" name="subpackage" description="Parse"/>
        <tag line="44" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="44" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="true" visibility="public" line="58" package="Default">
        <name>$callbackClass</name>
        <default><![CDATA[]]></default>
        <docblock line="55">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="55" name="var" description="callback class" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="63" package="Default">
        <name>$classMap</name>
        <default><![CDATA[array (
        'flex.messaging.messages.AcknowledgeMessage' => 'Zend_Amf_Value_Messaging_AcknowledgeMessage',
        'flex.messaging.messages.ErrorMessage'       => 'Zend_Amf_Value_Messaging_AsyncMessage',
        'flex.messaging.messages.CommandMessage'     => 'Zend_Amf_Value_Messaging_CommandMessage',
        'flex.messaging.messages.ErrorMessage'       => 'Zend_Amf_Value_Messaging_ErrorMessage',
        'flex.messaging.messages.RemotingMessage'    => 'Zend_Amf_Value_Messaging_RemotingMessage',
        'flex.messaging.io.ArrayCollection'          => 'Zend_Amf_Value_Messaging_ArrayCollection',
    )]]></default>
        <docblock line="60">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="60" name="var" description="AMF class map" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="75" package="Default">
        <name>$_defaultClassMap</name>
        <default><![CDATA[array(
        'flex.messaging.messages.AcknowledgeMessage' => 'Zend_Amf_Value_Messaging_AcknowledgeMessage',
        'flex.messaging.messages.ErrorMessage'       => 'Zend_Amf_Value_Messaging_AsyncMessage',
        'flex.messaging.messages.CommandMessage'     => 'Zend_Amf_Value_Messaging_CommandMessage',
        'flex.messaging.messages.ErrorMessage'       => 'Zend_Amf_Value_Messaging_ErrorMessage',
        'flex.messaging.messages.RemotingMessage'    => 'Zend_Amf_Value_Messaging_RemotingMessage',
        'flex.messaging.io.ArrayCollection'          => 'Zend_Amf_Value_Messaging_ArrayCollection',
    )]]></default>
        <docblock line="72">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="72" name="var" description="Default class map" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="87" package="Default">
        <name>$_resourceLoader</name>
        <default><![CDATA[null]]></default>
        <docblock line="84">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="84" name="var" description="" type="\Zend_Loader_PluginLoader_Interface">
            <type by_reference="false">\Zend_Loader_PluginLoader_Interface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="96" package="Default">
        <name>loadType</name>
        <type>function</type>
        <docblock line="90">
          <description><![CDATA[Load the mapped class type into a callback.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="90" name="param" description="" type="string" variable="$className">
            <type by_reference="false">string</type>
          </tag>
          <tag line="90" name="return" description="" type="object|false">
            <type by_reference="false">object</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="96">
          <name>$className</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="114" package="Default">
        <name>getMappedClassName</name>
        <type>function</type>
        <docblock line="108">
          <description><![CDATA[Looks up the supplied call name to its mapped class name]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="108" name="param" description="" type="string" variable="$className">
            <type by_reference="false">string</type>
          </tag>
          <tag line="108" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="114">
          <name>$className</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="142" package="Default">
        <name>setMapping</name>
        <type>function</type>
        <docblock line="131">
          <description><![CDATA[Map PHP class names to ActionScript class names]]></description>
          <long-description><![CDATA[<p>Allows users to map the class names of there action script classes
to the equivelent php class name. Used in deserialization to load a class
and serialiation to set the class name of the returned object.</p>]]></long-description>
          <tag line="131" name="param" description="" type="string" variable="$asClassName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="131" name="param" description="" type="string" variable="$phpClassName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="131" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="142">
          <name>$asClassName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="142">
          <name>$phpClassName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="152" package="Default">
        <name>resetMap</name>
        <type>function</type>
        <docblock line="147">
          <description><![CDATA[Reset type map]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="147" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="162" package="Default">
        <name>setResourceLoader</name>
        <type>function</type>
        <docblock line="157">
          <description><![CDATA[Set loader for resource type handlers]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="157" name="param" description="" type="\Zend_Loader_PluginLoader_Interface" variable="$loader">
            <type by_reference="false">\Zend_Loader_PluginLoader_Interface</type>
          </tag>
        </docblock>
        <argument line="162">
          <name>$loader</name>
          <default><![CDATA[]]></default>
          <type>Zend_Loader_PluginLoader_Interface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="173" package="Default">
        <name>addResourceDirectory</name>
        <type>function</type>
        <docblock line="167">
          <description><![CDATA[Add directory to the list of places where to look for resource handlers]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="167" name="param" description="" type="string" variable="$prefix">
            <type by_reference="false">string</type>
          </tag>
          <tag line="167" name="param" description="" type="string" variable="$dir">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="173">
          <name>$prefix</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="173">
          <name>$dir</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="186" package="Default">
        <name>getResourceParser</name>
        <type>function</type>
        <docblock line="180">
          <description><![CDATA[Get plugin class that handles this resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="180" name="param" description="Resource type" type="resource" variable="$resource">
            <type by_reference="false">resource</type>
          </tag>
          <tag line="180" name="return" description="Class name" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="186">
          <name>$resource</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="202" package="Default">
        <name>handleResource</name>
        <type>function</type>
        <docblock line="196">
          <description><![CDATA[Convert resource to a serializable object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="196" name="param" description="" type="resource" variable="$resource">
            <type by_reference="false">resource</type>
          </tag>
          <tag line="196" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="202">
          <name>$resource</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Amf/Parse/Amf3/Serializer.php" hash="07e4e0f389f4bc2c39941f26b6103278" package="Zend\Amf\Parse\Amf3">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Amf"/>
      <tag line="2" name="subpackage" description="Parse_Amf3"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Serializer.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <error line="177" code="50014">Name of argument $int does not match with the DocBlock's name $data in writeInteger()</error>
      <notice line="177" code="50013">Parameter $data could not be found in writeInteger()</notice>
      <error line="406" code="50014">Name of argument $object does not match with the DocBlock's name $data in writeObject()</error>
      <notice line="406" code="50013">Parameter $data could not be found in writeObject()</notice>
    </parse_markers>
    <include line="24" type="Require Once" package="Default">
      <name>Zend/Amf/Constants.php</name>
      <docblock line="23">
        <description><![CDATA[Zend_Amf_Constants]]></description>
        <long-description><![CDATA[]]></long-description>
      </docblock>
    </include>
    <include line="28" type="Require Once" package="Default">
      <name>Zend/Amf/Parse/Serializer.php</name>
      <docblock line="27">
        <description><![CDATA[Zend_Amf_Parse_Serializer]]></description>
        <long-description><![CDATA[]]></long-description>
      </docblock>
    </include>
    <include line="31" type="Require Once" package="Default">
      <name>Zend/Amf/Parse/TypeLoader.php</name>
      <docblock line="30">
        <description><![CDATA[Zend_Amf_Parse_TypeLoader]]></description>
        <long-description><![CDATA[]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="41" package="Zend\Amf\Parse\Amf3">
      <name>Zend_Amf_Parse_Amf3_Serializer</name>
      <full_name>\Zend_Amf_Parse_Amf3_Serializer</full_name>
      <extends>\Zend_Amf_Parse_Serializer</extends>
      <docblock line="33">
        <description><![CDATA[Detect PHP object type and convert it to a corresponding AMF3 object type]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="33" name="package" description="Zend_Amf"/>
        <tag line="33" name="subpackage" description="Parse_Amf3"/>
        <tag line="33" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="33" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="47" package="Default">
        <name>$_strEmpty</name>
        <default><![CDATA['']]></default>
        <docblock line="43">
          <description><![CDATA[A constant empty string]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="43" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="53" package="Default">
        <name>$_referenceObjects</name>
        <default><![CDATA[array()]]></default>
        <docblock line="49">
          <description><![CDATA[An array of reference objects per amf body]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="49" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="59" package="Default">
        <name>$_referenceStrings</name>
        <default><![CDATA[array()]]></default>
        <docblock line="55">
          <description><![CDATA[An array of reference strings per amf body]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="55" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="65" package="Default">
        <name>$_referenceDefinitions</name>
        <default><![CDATA[array()]]></default>
        <docblock line="61">
          <description><![CDATA[An array of reference class definitions, indexed by classname]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="61" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="79" package="Default">
        <name>writeTypeMarker</name>
        <type>function</type>
        <docblock line="67">
          <description><![CDATA[Serialize PHP types to AMF3 and write to stream]]></description>
          <long-description><![CDATA[<p>Checks to see if the type was declared and then either
auto negotiates the type or use the user defined markerType to
serialize the data from php back to AMF3</p>]]></long-description>
          <tag line="67" name="param" description="" type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="67" name="param" description="" type="int" variable="$markerType">
            <type by_reference="false">int</type>
          </tag>
          <tag line="67" name="param" description="" type="mixed" variable="$dataByVal">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="67" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="79">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="79">
          <name>$markerType</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="79">
          <name>$dataByVal</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="183" package="Default">
        <name>writeInteger</name>
        <type>function</type>
        <docblock line="177">
          <description><![CDATA[Write an AMF3 integer]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="177" name="param" description="" type="int|float" variable="$data">
            <type by_reference="false">int</type>
            <type by_reference="false">float</type>
          </tag>
          <tag line="177" name="return" description="" type="\Zend_Amf_Parse_Amf3_Serializer">
            <type by_reference="false">\Zend_Amf_Parse_Amf3_Serializer</type>
          </tag>
        </docblock>
        <argument line="183">
          <name>$int</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="217" package="Default">
        <name>writeBinaryString</name>
        <type>function</type>
        <docblock line="210">
          <description><![CDATA[Send string to output stream, without trying to reference it.]]></description>
          <long-description><![CDATA[<p>The string is prepended with strlen($string) &lt;&lt; 1 | 0x01</p>]]></long-description>
          <tag line="210" name="param" description="" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="210" name="return" description="" type="\Zend_Amf_Parse_Amf3_Serializer">
            <type by_reference="false">\Zend_Amf_Parse_Amf3_Serializer</type>
          </tag>
        </docblock>
        <argument line="217">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="231" package="Default">
        <name>writeString</name>
        <type>function</type>
        <docblock line="225">
          <description><![CDATA[Send string to output stream]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="225" name="param" description="" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="225" name="return" description="" type="\Zend_Amf_Parse_Amf3_Serializer">
            <type by_reference="false">\Zend_Amf_Parse_Amf3_Serializer</type>
          </tag>
        </docblock>
        <argument line="231">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="259" package="Default">
        <name>writeByteArray</name>
        <type>function</type>
        <docblock line="253">
          <description><![CDATA[Send ByteArray to output stream]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="253" name="param" description="" type="string|\Zend_Amf_Value_ByteArray" variable="$data">
            <type by_reference="false">string</type>
            <type by_reference="false">\Zend_Amf_Value_ByteArray</type>
          </tag>
          <tag line="253" name="return" description="" type="\Zend_Amf_Parse_Amf3_Serializer">
            <type by_reference="false">\Zend_Amf_Parse_Amf3_Serializer</type>
          </tag>
        </docblock>
        <argument line="259">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="285" package="Default">
        <name>writeXml</name>
        <type>function</type>
        <docblock line="279">
          <description><![CDATA[Send xml to output stream]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="279" name="param" description="" type="\DOMDocument|\SimpleXMLElement" variable="$xml">
            <type by_reference="false">\DOMDocument</type>
            <type by_reference="false">\SimpleXMLElement</type>
          </tag>
          <tag line="279" name="return" description="" type="\Zend_Amf_Parse_Amf3_Serializer">
            <type by_reference="false">\Zend_Amf_Parse_Amf3_Serializer</type>
          </tag>
        </docblock>
        <argument line="285">
          <name>$xml</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="313" package="Default">
        <name>writeDate</name>
        <type>function</type>
        <docblock line="307">
          <description><![CDATA[Convert DateTime/Zend_Date to AMF date]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="307" name="param" description="" type="\DateTime|\Zend_Date" variable="$date">
            <type by_reference="false">\DateTime</type>
            <type by_reference="false">\Zend_Date</type>
          </tag>
          <tag line="307" name="return" description="" type="\Zend_Amf_Parse_Amf3_Serializer">
            <type by_reference="false">\Zend_Amf_Parse_Amf3_Serializer</type>
          </tag>
        </docblock>
        <argument line="313">
          <name>$date</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="340" package="Default">
        <name>writeArray</name>
        <type>function</type>
        <docblock line="334">
          <description><![CDATA[Write a PHP array back to the amf output stream]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="334" name="param" description="" type="array" variable="$array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="334" name="return" description="" type="\Zend_Amf_Parse_Amf3_Serializer">
            <type by_reference="false">\Zend_Amf_Parse_Amf3_Serializer</type>
          </tag>
        </docblock>
        <argument line="340">
          <name>$array</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="383" package="Default">
        <name>writeObjectReference</name>
        <type>function</type>
        <docblock line="375">
          <description><![CDATA[Check if the given object is in the reference table, write the reference if it exists,
otherwise add the object to the reference table]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="375" name="param" description="object reference to check for reference" type="mixed" variable="$object">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="375" name="param" description="object to check for reference" type="mixed" variable="$objectByVal">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="375" name="return" description="true, if the reference was written, false otherwise" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
        <argument line="383">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="383">
          <name>$objectByVal</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="412" package="Default">
        <name>writeObject</name>
        <type>function</type>
        <docblock line="406">
          <description><![CDATA[Write object to ouput stream]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="406" name="param" description="" type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="406" name="return" description="" type="\Zend_Amf_Parse_Amf3_Serializer">
            <type by_reference="false">\Zend_Amf_Parse_Amf3_Serializer</type>
          </tag>
        </docblock>
        <argument line="412">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Amf/Parse/Amf3/Deserializer.php" hash="00a127d778fccea6d783758393699599" package="Zend\Amf\Parse\Amf3">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Amf"/>
      <tag line="2" name="subpackage" description="Parse_Amf3"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Deserializer.php 24386 2011-08-15 18:24:49Z padraic $"/>
    </docblock>
    <include line="24" type="Require Once" package="Default">
      <name>Zend/Amf/Parse/Deserializer.php</name>
      <docblock line="23">
        <description><![CDATA[Zend_Amf_Parse_Deserializer]]></description>
        <long-description><![CDATA[]]></long-description>
      </docblock>
    </include>
    <include line="27" type="Require Once" package="Default">
      <name>Zend/Amf/Parse/TypeLoader.php</name>
      <docblock line="26">
        <description><![CDATA[Zend_Amf_Parse_TypeLoader]]></description>
        <long-description><![CDATA[]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="40" package="Zend\Amf\Parse\Amf3">
      <name>Zend_Amf_Parse_Amf3_Deserializer</name>
      <full_name>\Zend_Amf_Parse_Amf3_Deserializer</full_name>
      <extends>\Zend_Amf_Parse_Deserializer</extends>
      <docblock line="29">
        <description><![CDATA[Read an AMF3 input stream and convert it into PHP data types.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="29" name="todo" description="readObject to handle Typed Objects"/>
        <tag line="29" name="todo" description="readXMLStrimg to be implemented."/>
        <tag line="29" name="todo" description="Class could be implemented as Factory Class with each data type it's own class."/>
        <tag line="29" name="package" description="Zend_Amf"/>
        <tag line="29" name="subpackage" description="Parse_Amf3"/>
        <tag line="29" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="29" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="46" package="Default">
        <name>$_objectCount</name>
        <default><![CDATA[]]></default>
        <docblock line="42">
          <description><![CDATA[Total number of objects in the referenceObject array]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="42" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="52" package="Default">
        <name>$_referenceObjects</name>
        <default><![CDATA[array()]]></default>
        <docblock line="48">
          <description><![CDATA[An array of reference objects per amf body]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="48" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="58" package="Default">
        <name>$_referenceStrings</name>
        <default><![CDATA[array()]]></default>
        <docblock line="54">
          <description><![CDATA[An array of reference strings per amf body]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="54" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="64" package="Default">
        <name>$_referenceDefinitions</name>
        <default><![CDATA[array()]]></default>
        <docblock line="60">
          <description><![CDATA[An array of reference class definitions per body]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="60" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="77" package="Default">
        <name>readTypeMarker</name>
        <type>function</type>
        <docblock line="66">
          <description><![CDATA[Read AMF markers and dispatch for deserialization]]></description>
          <long-description><![CDATA[<p>Checks for AMF marker types and calls the appropriate methods
for deserializing those marker types. markers are the data type of
the following value.</p>]]></long-description>
          <tag line="66" name="param" description="" type="integer" variable="$typeMarker">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="66" name="return" description="Whatever the corresponding PHP data type is" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="66" name="throws" description="for unidentified marker type" type="\Zend_Amf_Exception">
            <type by_reference="false">\Zend_Amf_Exception</type>
          </tag>
        </docblock>
        <argument line="77">
          <name>$typeMarker</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="134" package="Default">
        <name>readInteger</name>
        <type>function</type>
        <docblock line="115">
          <description><![CDATA[Read and deserialize an integer]]></description>
          <long-description><![CDATA[<p>AMF 3 represents smaller integers with fewer bytes using the most
significant bit of each byte. The worst case uses 32-bits
to represent a 29-bit number, which is what we would have
done with no compression.
- 0x00000000 - 0x0000007F : 0xxxxxxx
- 0x00000080 - 0x00003FFF : 1xxxxxxx 0xxxxxxx
- 0x00004000 - 0x001FFFFF : 1xxxxxxx 1xxxxxxx 0xxxxxxx
- 0x00200000 - 0x3FFFFFFF : 1xxxxxxx 1xxxxxxx 1xxxxxxx xxxxxxxx
- 0x40000000 - 0xFFFFFFFF : throw range exception</p>

<p>0x04 -> integer type code, followed by up to 4 bytes of data.</p>

<p>Parsing integers on OSFlash for the AMF3 integer data format:</p>]]></long-description>
          <tag line="115" name="link" description="http://osflash.org/amf3/parsing_integers" link="http://osflash.org/amf3/parsing_integers"/>
          <tag line="115" name="return" description="" type="int|float">
            <type by_reference="false">int</type>
            <type by_reference="false">float</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="176" package="Default">
        <name>readString</name>
        <type>function</type>
        <docblock line="162">
          <description><![CDATA[Read and deserialize a string]]></description>
          <long-description><![CDATA[<p>Strings can be sent as a reference to a previously
occurring String by using an index to the implicit string reference table.
Strings are encoding using UTF-8 - however the header may either
describe a string literal or a string reference.</p>

<ul>
<li>string = 0x06 string-data</li>
<li>string-data = integer-data [ modified-utf-8 ]</li>
<li>modified-utf-8 = *OCTET</li>
</ul>]]></long-description>
          <tag line="162" name="return" description="" type="String">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="213" package="Default">
        <name>readDate</name>
        <type>function</type>
        <docblock line="202">
          <description><![CDATA[Read and deserialize a date]]></description>
          <long-description><![CDATA[<p>Data is the number of milliseconds elapsed since the epoch
of midnight, 1st Jan 1970 in the UTC time zone.
Local time zone information is not sent to flash.</p>

<ul>
<li>date = 0x08 integer-data [ number-data ]</li>
</ul>]]></long-description>
          <tag line="202" name="return" description="" type="\Zend_Date">
            <type by_reference="false">\Zend_Date</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="240" package="Default">
        <name>readArray</name>
        <type>function</type>
        <docblock line="233">
          <description><![CDATA[Read amf array to PHP array]]></description>
          <long-description><![CDATA[<ul>
<li>array = 0x09 integer-data ( [ 1OCTET *amf3-data ] | [OCTET *amf3-data 1] | [ OCTET *amf-data ] )</li>
</ul>]]></long-description>
          <tag line="233" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="279" package="Default">
        <name>readObject</name>
        <type>function</type>
        <docblock line="273">
          <description><![CDATA[Read an object from the AMF stream and convert it into a PHP object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="273" name="todo" description="Rather than using an array of traitsInfo create Zend_Amf_Value_TraitsInfo"/>
          <tag line="273" name="return" description="" type="object|array">
            <type by_reference="false">object</type>
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="415" package="Default">
        <name>readXmlString</name>
        <type>function</type>
        <docblock line="409">
          <description><![CDATA[Convert XML to SimpleXml
If user wants DomDocument they can use dom_import_simplexml]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="409" name="return" description="Object" type="\SimpleXml">
            <type by_reference="false">\SimpleXml</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Amf/Parse/OutputStream.php" hash="53e0842ade4f7d1b6dc4527df6b1999b" package="Zend\Amf\Parse">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Amf"/>
      <tag line="2" name="subpackage" description="Parse"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: OutputStream.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <include line="24" type="Require Once" package="Default">
      <name>Zend/Amf/Util/BinaryStream.php</name>
      <docblock line="23">
        <description><![CDATA[Zend_Amf_Util_BinaryStream]]></description>
        <long-description><![CDATA[]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="38" package="Zend\Amf\Parse">
      <name>Zend_Amf_Parse_OutputStream</name>
      <full_name>\Zend_Amf_Parse_OutputStream</full_name>
      <extends>\Zend_Amf_Util_BinaryStream</extends>
      <docblock line="26">
        <description><![CDATA[Iterate at a binary level through the AMF response]]></description>
        <long-description><![CDATA[<p>OutputStream extends BinaryStream as eventually BinaryStream could be placed
outside of Zend_Amf in order to allow other packages to use the class.</p>]]></long-description>
        <tag line="26" name="uses" description="\Zend_Amf_Util_BinaryStream" refers="\Zend_Amf_Util_BinaryStream"/>
        <tag line="26" name="package" description="Zend_Amf"/>
        <tag line="26" name="subpackage" description="Parse"/>
        <tag line="26" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="26" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="45" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="40">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="40" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Amf/Parse/Amf0/Serializer.php" hash="4c64d95e956c6090111e0a0dc6de203f" package="Zend\Amf\Parse\Amf0">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Amf"/>
      <tag line="2" name="subpackage" description="Parse_Amf0"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Serializer.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="40" code="50019">No short description for property $_className</critical>
      <error line="221" code="50014">Name of argument $object does not match with the DocBlock's name $data in writeObject()</error>
      <notice line="221" code="50013">Parameter $data could not be found in writeObject()</notice>
    </parse_markers>
    <include line="24" type="Require Once" package="Default">
      <name>Zend/Amf/Constants.php</name>
      <docblock line="23">
        <description><![CDATA[Zend_Amf_Constants]]></description>
        <long-description><![CDATA[]]></long-description>
      </docblock>
    </include>
    <include line="27" type="Require Once" package="Default">
      <name>Zend/Amf/Parse/Serializer.php</name>
      <docblock line="26">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="26" name="see" description="\Zend_Amf_Parse_Serializer" refers="\Zend_Amf_Parse_Serializer"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="38" package="Zend\Amf\Parse\Amf0">
      <name>Zend_Amf_Parse_Amf0_Serializer</name>
      <full_name>\Zend_Amf_Parse_Amf0_Serializer</full_name>
      <extends>\Zend_Amf_Parse_Serializer</extends>
      <docblock line="29">
        <description><![CDATA[Serializer PHP misc types back to there corresponding AMF0 Type Marker.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="29" name="uses" description="\Zend_Amf_Parse_Serializer" refers="\Zend_Amf_Parse_Serializer"/>
        <tag line="29" name="package" description="Zend_Amf"/>
        <tag line="29" name="subpackage" description="Parse_Amf0"/>
        <tag line="29" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="29" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="43" package="Default">
        <name>$_className</name>
        <default><![CDATA['']]></default>
        <docblock line="40">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="40" name="var" description="Name of the class to be returned" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="49" package="Default">
        <name>$_referenceObjects</name>
        <default><![CDATA[array()]]></default>
        <docblock line="45">
          <description><![CDATA[An array of reference objects]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="45" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="64" package="Default">
        <name>writeTypeMarker</name>
        <type>function</type>
        <docblock line="51">
          <description><![CDATA[Determine type and serialize accordingly]]></description>
          <long-description><![CDATA[<p>Checks to see if the type was declared and then either
auto negotiates the type or relies on the user defined markerType to
serialize the data into amf</p>]]></long-description>
          <tag line="51" name="param" description="" type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="51" name="param" description="" type="mixed" variable="$markerType">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="51" name="param" description="" type="mixed" variable="$dataByVal">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="51" name="return" description="" type="\Zend_Amf_Parse_Amf0_Serializer">
            <type by_reference="false">\Zend_Amf_Parse_Amf0_Serializer</type>
          </tag>
          <tag line="51" name="throws" description="for unrecognized types or data" type="\Zend_Amf_Exception">
            <type by_reference="false">\Zend_Amf_Exception</type>
          </tag>
        </docblock>
        <argument line="64">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="64">
          <name>$markerType</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="64">
          <name>$dataByVal</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="195" package="Default">
        <name>writeObjectReference</name>
        <type>function</type>
        <docblock line="186">
          <description><![CDATA[Check if the given object is in the reference table, write the reference if it exists,
otherwise add the object to the reference table]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="186" name="param" description="object reference to check for reference" type="mixed" variable="$object">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="186" name="param" description="AMF type of the object to write" type="string" variable="$markerType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="186" name="param" description="object to check for reference" type="mixed" variable="$objectByVal">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="186" name="return" description="true, if the reference was written, false otherwise" type="Boolean">
            <type by_reference="false">Boolean</type>
          </tag>
        </docblock>
        <argument line="195">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="195">
          <name>$markerType</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="195">
          <name>$objectByVal</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="227" package="Default">
        <name>writeObject</name>
        <type>function</type>
        <docblock line="221">
          <description><![CDATA[Write a PHP array with string or mixed keys.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="221" name="param" description="" type="object" variable="$data">
            <type by_reference="false">object</type>
          </tag>
          <tag line="221" name="return" description="" type="\Zend_Amf_Parse_Amf0_Serializer">
            <type by_reference="false">\Zend_Amf_Parse_Amf0_Serializer</type>
          </tag>
        </docblock>
        <argument line="227">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="250" package="Default">
        <name>writeArray</name>
        <type>function</type>
        <docblock line="243">
          <description><![CDATA[Write a standard numeric array to the output stream. If a mixed array
is encountered call writeTypeMarker with mixed array.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="243" name="param" description="" type="array" variable="$array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="243" name="return" description="" type="\Zend_Amf_Parse_Amf0_Serializer">
            <type by_reference="false">\Zend_Amf_Parse_Amf0_Serializer</type>
          </tag>
        </docblock>
        <argument line="250">
          <name>$array</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="273" package="Default">
        <name>writeDate</name>
        <type>function</type>
        <docblock line="267">
          <description><![CDATA[Convert the DateTime into an AMF Date]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="267" name="param" description="" type="\DateTime|\Zend_Date" variable="$data">
            <type by_reference="false">\DateTime</type>
            <type by_reference="false">\Zend_Date</type>
          </tag>
          <tag line="267" name="return" description="" type="\Zend_Amf_Parse_Amf0_Serializer">
            <type by_reference="false">\Zend_Amf_Parse_Amf0_Serializer</type>
          </tag>
        </docblock>
        <argument line="273">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="300" package="Default">
        <name>writeTypedObject</name>
        <type>function</type>
        <docblock line="294">
          <description><![CDATA[Write a class mapped object to the output stream.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="294" name="param" description="" type="object" variable="$data">
            <type by_reference="false">object</type>
          </tag>
          <tag line="294" name="return" description="" type="\Zend_Amf_Parse_Amf0_Serializer">
            <type by_reference="false">\Zend_Amf_Parse_Amf0_Serializer</type>
          </tag>
        </docblock>
        <argument line="300">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="314" package="Default">
        <name>writeAmf3TypeMarker</name>
        <type>function</type>
        <docblock line="307">
          <description><![CDATA[Encountered and AMF3 Type Marker use AMF3 serializer. Once AMF3 is
encountered it will not return to AMf0.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="307" name="param" description="" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="307" name="return" description="" type="\Zend_Amf_Parse_Amf0_Serializer">
            <type by_reference="false">\Zend_Amf_Parse_Amf0_Serializer</type>
          </tag>
        </docblock>
        <argument line="314">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="329" package="Default">
        <name>getClassName</name>
        <type>function</type>
        <docblock line="322">
          <description><![CDATA[Find if the class name is a class mapped name and return the
respective classname if it is.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="322" name="param" description="" type="object" variable="$object">
            <type by_reference="false">object</type>
          </tag>
          <tag line="322" name="return" description="$className" type="false|string">
            <type by_reference="false">false</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="329">
          <name>$object</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Amf/Parse/Amf0/Deserializer.php" hash="a2113125bae3d2a3129866dd94aae75b" package="Zend\Amf\Parse\Amf0">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Amf"/>
      <tag line="2" name="subpackage" description="Parse_Amf0"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Deserializer.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <include line="24" type="Require Once" package="Default">
      <name>Zend/Amf/Constants.php</name>
      <docblock line="23">
        <description><![CDATA[Zend_Amf_Constants]]></description>
        <long-description><![CDATA[]]></long-description>
      </docblock>
    </include>
    <include line="27" type="Require Once" package="Default">
      <name>Zend/Amf/Parse/Deserializer.php</name>
      <docblock line="26">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="26" name="see" description="\Zend_Amf_Parse_Deserializer" refers="\Zend_Amf_Parse_Deserializer"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="39" package="Zend\Amf\Parse\Amf0">
      <name>Zend_Amf_Parse_Amf0_Deserializer</name>
      <full_name>\Zend_Amf_Parse_Amf0_Deserializer</full_name>
      <extends>\Zend_Amf_Parse_Deserializer</extends>
      <docblock line="29">
        <description><![CDATA[Read an AMF0 input stream and convert it into PHP data types]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="29" name="todo" description="Implement Typed Object Class Mapping"/>
        <tag line="29" name="todo" description="Class could be implemented as Factory Class with each data type it's own class"/>
        <tag line="29" name="package" description="Zend_Amf"/>
        <tag line="29" name="subpackage" description="Parse_Amf0"/>
        <tag line="29" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="29" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="45" package="Default">
        <name>$_reference</name>
        <default><![CDATA[array()]]></default>
        <docblock line="41">
          <description><![CDATA[An array of objects used for recursively deserializing an object.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="41" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="52" package="Default">
        <name>$_objectEncoding</name>
        <default><![CDATA[Zend_Amf_Constants::AMF0_OBJECT_ENCODING]]></default>
        <docblock line="47">
          <description><![CDATA[If AMF3 serialization occurs, update to AMF0 0x03]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="47" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="65" package="Default">
        <name>readTypeMarker</name>
        <type>function</type>
        <docblock line="54">
          <description><![CDATA[Read AMF markers and dispatch for deserialization]]></description>
          <long-description><![CDATA[<p>Checks for AMF marker types and calls the appropriate methods
for deserializing those marker types. Markers are the data type of
the following value.</p>]]></long-description>
          <tag line="54" name="param" description="" type="integer" variable="$typeMarker">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="54" name="return" description="whatever the data type is of the marker in php" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="54" name="throws" description="for invalid type" type="\Zend_Amf_Exception">
            <type by_reference="false">\Zend_Amf_Exception</type>
          </tag>
        </docblock>
        <argument line="65">
          <name>$typeMarker</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="149" package="Default">
        <name>readObject</name>
        <type>function</type>
        <docblock line="138">
          <description><![CDATA[Read AMF objects and convert to PHP objects]]></description>
          <long-description><![CDATA[<p>Read the name value pair objects form the php message and convert them to
a php object class.</p>

<p>Called when the marker type is 3.</p>]]></long-description>
          <tag line="138" name="param" description="" type="array|null" variable="$object">
            <type by_reference="false">array</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="138" name="return" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
        <argument line="149">
          <name>$object</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="179" package="Default">
        <name>readReference</name>
        <type>function</type>
        <docblock line="170">
          <description><![CDATA[Read reference objects]]></description>
          <long-description><![CDATA[<p>Used to gain access to the private array of reference objects.
Called when marker type is 7.</p>]]></long-description>
          <tag line="170" name="return" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
          <tag line="170" name="throws" description="for invalid reference keys" type="\Zend_Amf_Exception">
            <type by_reference="false">\Zend_Amf_Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="199" package="Default">
        <name>readMixedArray</name>
        <type>function</type>
        <docblock line="189">
          <description><![CDATA[Reads an array with numeric and string indexes.]]></description>
          <long-description><![CDATA[<p>Called when marker type is 8</p>]]></long-description>
          <tag line="189" name="todo" description="As of Flash Player 9 there is not support for mixed typed arrays&#10;so we handle this as an object. With the introduction of vectors&#10;in Flash Player 10 this may need to be reconsidered."/>
          <tag line="189" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="212" package="Default">
        <name>readArray</name>
        <type>function</type>
        <docblock line="205">
          <description><![CDATA[Converts numerically indexed actiosncript arrays into php arrays.]]></description>
          <long-description><![CDATA[<p>Called when marker type is 10</p>]]></long-description>
          <tag line="205" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="227" package="Default">
        <name>readDate</name>
        <type>function</type>
        <docblock line="222">
          <description><![CDATA[Convert AS Date to Zend_Date]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="222" name="return" description="" type="\Zend_Date">
            <type by_reference="false">\Zend_Date</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="248" package="Default">
        <name>readXmlString</name>
        <type>function</type>
        <docblock line="242">
          <description><![CDATA[Convert XML to SimpleXml
If user wants DomDocument they can use dom_import_simplexml]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="242" name="return" description="Object" type="\SimpleXml">
            <type by_reference="false">\SimpleXml</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="263" package="Default">
        <name>readTypedObject</name>
        <type>function</type>
        <docblock line="254">
          <description><![CDATA[Read Class that is to be mapped to a server class.]]></description>
          <long-description><![CDATA[<p>Commonly used for Value Objects on the server</p>]]></long-description>
          <tag line="254" name="todo" description="implement Typed Class mapping"/>
          <tag line="254" name="return" description="" type="object|array">
            <type by_reference="false">object</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="254" name="throws" description="if unable to load type" type="\Zend_Amf_Exception">
            <type by_reference="false">\Zend_Amf_Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="288" package="Default">
        <name>readAmf3TypeMarker</name>
        <type>function</type>
        <docblock line="282">
          <description><![CDATA[AMF3 data type encountered load AMF3 Deserializer to handle
type markers.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="282" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="302" package="Default">
        <name>getObjectEncoding</name>
        <type>function</type>
        <docblock line="296">
          <description><![CDATA[Return the object encoding to check if an AMF3 object
is going to be return.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="296" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Amf/Parse/Resource/Stream.php" hash="af81498dd93e56e0bd38fb48d59c8d86" package="Zend\Amf\Parse">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Amf"/>
      <tag line="2" name="subpackage" description="Parse"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Stream.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <class final="false" abstract="false" namespace="default" line="31" package="Zend\Amf\Parse">
      <name>Zend_Amf_Parse_Resource_Stream</name>
      <full_name>\Zend_Amf_Parse_Resource_Stream</full_name>
      <extends/>
      <docblock line="23">
        <description><![CDATA[This class will convert stream resource to string by just reading it]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="package" description="Zend_Amf"/>
        <tag line="23" name="subpackage" description="Parse"/>
        <tag line="23" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="23" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="39" package="Default">
        <name>parse</name>
        <type>function</type>
        <docblock line="33">
          <description><![CDATA[Parse resource into string]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="33" name="param" description="Stream resource" type="resource" variable="$resource">
            <type by_reference="false">resource</type>
          </tag>
          <tag line="33" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="39">
          <name>$resource</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Amf/Parse/Resource/MysqlResult.php" hash="4e54b4a1104811320b9871c496d5c3d9" package="Zend\Amf\Parse">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Amf"/>
      <tag line="2" name="subpackage" description="Parse"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: MysqlResult.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="34" code="50019">No short description for property $fieldTypes</critical>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="32" package="Zend\Amf\Parse">
      <name>Zend_Amf_Parse_Resource_MysqlResult</name>
      <full_name>\Zend_Amf_Parse_Resource_MysqlResult</full_name>
      <extends/>
      <docblock line="23">
        <description><![CDATA[This class will convert mysql result resource to array suitable for passing
to the external entities.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="package" description="Zend_Amf"/>
        <tag line="23" name="subpackage" description="Parse"/>
        <tag line="23" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="23" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="true" visibility="public" line="39" package="Default">
        <name>$fieldTypes</name>
        <default><![CDATA[array(
        "int" => "int",
        "timestamp" => "int",
        "year" => "int",
        "real" => "float",
    )]]></default>
        <docblock line="34">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="34" name="var" description="List of Mysql types with PHP counterparts Key =&gt; Value is Mysql type (exact string) =&gt; PHP type" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="51" package="Default">
        <name>parse</name>
        <type>function</type>
        <docblock line="45">
          <description><![CDATA[Parse resource into array]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="45" name="param" description="" type="resource" variable="$resource">
            <type by_reference="false">resource</type>
          </tag>
          <tag line="45" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$resource</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Amf/Parse/Resource/MysqliResult.php" hash="e31f78a8041fb466a0ceb24f05e85cce" package="Zend\Amf\Parse">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Amf"/>
      <tag line="2" name="subpackage" description="Parse"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: MysqliResult.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <error line="67" code="50018">No DocBlock was found for property $mysqli_to_php</error>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="32" package="Zend\Amf\Parse">
      <name>Zend_Amf_Parse_Resource_MysqliResult</name>
      <full_name>\Zend_Amf_Parse_Resource_MysqliResult</full_name>
      <extends/>
      <docblock line="23">
        <description><![CDATA[This class will convert mysql result resource to array suitable for passing
to the external entities.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="package" description="Zend_Amf"/>
        <tag line="23" name="subpackage" description="Parse"/>
        <tag line="23" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="23" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="true" visibility="public" line="38" package="Default">
        <name>$mysqli_type</name>
        <default><![CDATA[array(
        0 => "MYSQLI_TYPE_DECIMAL",
        1 => "MYSQLI_TYPE_TINYINT",
        2 => "MYSQLI_TYPE_SMALLINT",
        3 => "MYSQLI_TYPE_INTEGER",
        4 => "MYSQLI_TYPE_FLOAT",
        5 => "MYSQLI_TYPE_DOUBLE",
        7 => "MYSQLI_TYPE_TIMESTAMP",
        8 => "MYSQLI_TYPE_BIGINT",
        9 => "MYSQLI_TYPE_MEDIUMINT",
        10 => "MYSQLI_TYPE_DATE",
        11 => "MYSQLI_TYPE_TIME",
        12 => "MYSQLI_TYPE_DATETIME",
        13 => "MYSQLI_TYPE_YEAR",
        14 => "MYSQLI_TYPE_DATE",
        16 => "MYSQLI_TYPE_BIT",
        246 => "MYSQLI_TYPE_DECIMAL",
        247 => "MYSQLI_TYPE_ENUM",
        248 => "MYSQLI_TYPE_SET",
        249 => "MYSQLI_TYPE_TINYBLOB",
        250 => "MYSQLI_TYPE_MEDIUMBLOB",
        251 => "MYSQLI_TYPE_LONGBLOB",
        252 => "MYSQLI_TYPE_BLOB",
        253 => "MYSQLI_TYPE_VARCHAR",
        254 => "MYSQLI_TYPE_CHAR",
        255 => "MYSQLI_TYPE_GEOMETRY",
    )]]></default>
        <docblock line="35">
          <description><![CDATA[mapping taken from http://forums.mysql.com/read.php?52,255868,255895#msg-255895]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="67">
        <name>$mysqli_to_php</name>
        <default><![CDATA[array(
        "MYSQLI_TYPE_DECIMAL"     => 'float',
        "MYSQLI_TYPE_NEWDECIMAL"  => 'float',
        "MYSQLI_TYPE_BIT"         => 'integer',
        "MYSQLI_TYPE_TINYINT"     => 'integer',
        "MYSQLI_TYPE_SMALLINT"    => 'integer',
        "MYSQLI_TYPE_MEDIUMINT"   => 'integer',
        "MYSQLI_TYPE_BIGINT"      => 'integer',
        "MYSQLI_TYPE_INTEGER"     => 'integer',
        "MYSQLI_TYPE_FLOAT"       => 'float',
        "MYSQLI_TYPE_DOUBLE"      => 'float',
        "MYSQLI_TYPE_NULL"        => 'null',
        "MYSQLI_TYPE_TIMESTAMP"   => 'string',
        "MYSQLI_TYPE_INT24"       => 'integer',
        "MYSQLI_TYPE_DATE"        => 'string',
        "MYSQLI_TYPE_TIME"        => 'string',
        "MYSQLI_TYPE_DATETIME"    => 'string',
        "MYSQLI_TYPE_YEAR"        => 'string',
        "MYSQLI_TYPE_NEWDATE"     => 'string',
        "MYSQLI_TYPE_ENUM"        => 'string',
        "MYSQLI_TYPE_SET"         => 'string',
        "MYSQLI_TYPE_TINYBLOB"    => 'object',
        "MYSQLI_TYPE_MEDIUMBLOB"  => 'object',
        "MYSQLI_TYPE_LONGBLOB"    => 'object',
        "MYSQLI_TYPE_BLOB"        => 'object',
        "MYSQLI_TYPE_CHAR"        => 'string',
        "MYSQLI_TYPE_VARCHAR"     => 'string',
        "MYSQLI_TYPE_GEOMETRY"    => 'object',
        "MYSQLI_TYPE_BIT"         => 'integer',
    )]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="104" package="Default">
        <name>parse</name>
        <type>function</type>
        <docblock line="98">
          <description><![CDATA[Parse resource into array]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="98" name="param" description="" type="resource" variable="$resource">
            <type by_reference="false">resource</type>
          </tag>
          <tag line="98" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="104">
          <name>$resource</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Application.php" hash="db047d7cb6a6614cc91b3aeaf9560ea3" package="Zend\Application">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Application"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Application.php 24101 2011-06-01 02:21:15Z adamlundrigan $"/>
    </docblock>
    <parse_markers>
      <critical line="22" code="50005">No short description for class Zend_Application</critical>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="28" package="Zend\Application">
      <name>Zend_Application</name>
      <full_name>\Zend_Application</full_name>
      <extends/>
      <docblock line="22">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="22" name="category" description="Zend"/>
        <tag line="22" name="package" description="Zend_Application"/>
        <tag line="22" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="22" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="35" package="Default">
        <name>$_autoloader</name>
        <default><![CDATA[]]></default>
        <docblock line="30">
          <description><![CDATA[Autoloader to use]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="30" name="var" description="" type="\Zend_Loader_Autoloader">
            <type by_reference="false">\Zend_Loader_Autoloader</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="42" package="Default">
        <name>$_bootstrap</name>
        <default><![CDATA[]]></default>
        <docblock line="37">
          <description><![CDATA[Bootstrap]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="37" name="var" description="" type="\Zend_Application_Bootstrap_BootstrapAbstract">
            <type by_reference="false">\Zend_Application_Bootstrap_BootstrapAbstract</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="49" package="Default">
        <name>$_environment</name>
        <default><![CDATA[]]></default>
        <docblock line="44">
          <description><![CDATA[Application environment]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="44" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="56" package="Default">
        <name>$_optionKeys</name>
        <default><![CDATA[array()]]></default>
        <docblock line="51">
          <description><![CDATA[Flattened (lowercase) option keys]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="51" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="63" package="Default">
        <name>$_options</name>
        <default><![CDATA[array()]]></default>
        <docblock line="58">
          <description><![CDATA[Options for Zend_Application]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="58" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="76" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="65">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[<p>Initialize application. Potentially initializes include_paths, PHP
settings, and bootstrap class.</p>]]></long-description>
          <tag line="65" name="param" description="" type="string" variable="$environment">
            <type by_reference="false">string</type>
          </tag>
          <tag line="65" name="param" description="String path to configuration file, or array/Zend_Config of configuration options" type="string|array|\Zend_Config" variable="$options">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
            <type by_reference="false">\Zend_Config</type>
          </tag>
          <tag line="65" name="throws" description="When invalid options are provided" type="\Zend_Application_Exception">
            <type by_reference="false">\Zend_Application_Exception</type>
          </tag>
          <tag line="65" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="76">
          <name>$environment</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="76">
          <name>$options</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="101" package="Default">
        <name>getEnvironment</name>
        <type>function</type>
        <docblock line="96">
          <description><![CDATA[Retrieve current environment]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="96" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="111" package="Default">
        <name>getAutoloader</name>
        <type>function</type>
        <docblock line="106">
          <description><![CDATA[Retrieve autoloader instance]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="106" name="return" description="" type="\Zend_Loader_Autoloader">
            <type by_reference="false">\Zend_Loader_Autoloader</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="124" package="Default">
        <name>setOptions</name>
        <type>function</type>
        <docblock line="116">
          <description><![CDATA[Set application options]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="116" name="param" description="" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="116" name="throws" description="When no bootstrap path is provided" type="\Zend_Application_Exception">
            <type by_reference="false">\Zend_Application_Exception</type>
          </tag>
          <tag line="116" name="throws" description="When invalid bootstrap information are provided" type="\Zend_Application_Exception">
            <type by_reference="false">\Zend_Application_Exception</type>
          </tag>
          <tag line="116" name="return" description="" type="\Zend_Application">
            <type by_reference="false">\Zend_Application</type>
          </tag>
        </docblock>
        <argument line="124">
          <name>$options</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="198" package="Default">
        <name>getOptions</name>
        <type>function</type>
        <docblock line="193">
          <description><![CDATA[Retrieve application options (for caching)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="193" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="209" package="Default">
        <name>hasOption</name>
        <type>function</type>
        <docblock line="203">
          <description><![CDATA[Is an option present?]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="203" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="203" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="209">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="220" package="Default">
        <name>getOption</name>
        <type>function</type>
        <docblock line="214">
          <description><![CDATA[Retrieve a single option]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="214" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="214" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="220">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="237" package="Default">
        <name>mergeOptions</name>
        <type>function</type>
        <docblock line="230">
          <description><![CDATA[Merge options recursively]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="230" name="param" description="" type="array" variable="$array1">
            <type by_reference="false">array</type>
          </tag>
          <tag line="230" name="param" description="" type="mixed" variable="$array2">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="230" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="237">
          <name>$array1</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
        <argument line="237">
          <name>$array2</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="260" package="Default">
        <name>setPhpSettings</name>
        <type>function</type>
        <docblock line="253">
          <description><![CDATA[Set PHP configuration settings]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="253" name="param" description="" type="array" variable="$settings">
            <type by_reference="false">array</type>
          </tag>
          <tag line="253" name="param" description="Key prefix to prepend to array values (used to map . separated INI values)" type="string" variable="$prefix">
            <type by_reference="false">string</type>
          </tag>
          <tag line="253" name="return" description="" type="\Zend_Application">
            <type by_reference="false">\Zend_Application</type>
          </tag>
        </docblock>
        <argument line="260">
          <name>$settings</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
        <argument line="260">
          <name>$prefix</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="280" package="Default">
        <name>setIncludePaths</name>
        <type>function</type>
        <docblock line="274">
          <description><![CDATA[Set include path]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="274" name="param" description="" type="array" variable="$paths">
            <type by_reference="false">array</type>
          </tag>
          <tag line="274" name="return" description="" type="\Zend_Application">
            <type by_reference="false">\Zend_Application</type>
          </tag>
        </docblock>
        <argument line="280">
          <name>$paths</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="293" package="Default">
        <name>setAutoloaderNamespaces</name>
        <type>function</type>
        <docblock line="287">
          <description><![CDATA[Set autoloader namespaces]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="287" name="param" description="" type="array" variable="$namespaces">
            <type by_reference="false">array</type>
          </tag>
          <tag line="287" name="return" description="" type="\Zend_Application">
            <type by_reference="false">\Zend_Application</type>
          </tag>
        </docblock>
        <argument line="293">
          <name>$namespaces</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="311" package="Default">
        <name>setBootstrap</name>
        <type>function</type>
        <docblock line="304">
          <description><![CDATA[Set bootstrap path/class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="304" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="304" name="param" description="" type="string" variable="$class">
            <type by_reference="false">string</type>
          </tag>
          <tag line="304" name="return" description="" type="\Zend_Application">
            <type by_reference="false">\Zend_Application</type>
          </tag>
        </docblock>
        <argument line="311">
          <name>$path</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="311">
          <name>$class</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="339" package="Default">
        <name>getBootstrap</name>
        <type>function</type>
        <docblock line="334">
          <description><![CDATA[Get bootstrap object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="334" name="return" description="" type="\Zend_Application_Bootstrap_BootstrapAbstract">
            <type by_reference="false">\Zend_Application_Bootstrap_BootstrapAbstract</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="353" package="Default">
        <name>bootstrap</name>
        <type>function</type>
        <docblock line="347">
          <description><![CDATA[Bootstrap application]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="347" name="param" description="" type="null|string|array" variable="$resource">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="347" name="return" description="" type="\Zend_Application">
            <type by_reference="false">\Zend_Application</type>
          </tag>
        </docblock>
        <argument line="353">
          <name>$resource</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="364" package="Default">
        <name>run</name>
        <type>function</type>
        <docblock line="359">
          <description><![CDATA[Run the application]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="359" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="376" package="Default">
        <name>_loadConfig</name>
        <type>function</type>
        <docblock line="369">
          <description><![CDATA[Load configuration file of options]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="369" name="param" description="" type="string" variable="$file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="369" name="throws" description="When invalid configuration file is provided" type="\Zend_Application_Exception">
            <type by_reference="false">\Zend_Application_Exception</type>
          </tag>
          <tag line="369" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="376">
          <name>$file</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Application/Exception.php" hash="b35bd3858b034755f8f584972ac03bcf" package="Zend\Application">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Application"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Exception.php 23953 2011-05-03 05:47:39Z ralph $"/>
    </docblock>
    <include line="25" type="Require Once" package="Default">
      <name>Zend/Exception.php</name>
      <docblock line="22">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="22" name="see" description="\Zend_Exception" refers="\Zend_Exception"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="36" package="Zend\Application">
      <name>Zend_Application_Exception</name>
      <full_name>\Zend_Application_Exception</full_name>
      <extends>\Zend_Exception</extends>
      <docblock line="27">
        <description><![CDATA[Exception class for Zend_Application]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="27" name="uses" description="\Zend_Exception" refers="\Zend_Exception"/>
        <tag line="27" name="category" description="Zend"/>
        <tag line="27" name="package" description="Zend_Application"/>
        <tag line="27" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="27" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
    </class>
  </file>
  <file path="Zend/Application/Module/Autoloader.php" hash="fd89539c74c06aefdf3c0d782cd00a0b" package="Zend\Application\Module">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Application"/>
      <tag line="2" name="subpackage" description="Module"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="version" description="$Id: Autoloader.php 23775 2011-03-01 17:25:24Z ralph $"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
    </docblock>
    <include line="24" type="Require Once" package="Default">
      <name>Zend/Loader/Autoloader/Resource.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Loader_Autoloader_Resource" refers="\Zend_Loader_Autoloader_Resource"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="36" package="Zend\Application\Module">
      <name>Zend_Application_Module_Autoloader</name>
      <full_name>\Zend_Application_Module_Autoloader</full_name>
      <extends>\Zend_Loader_Autoloader_Resource</extends>
      <docblock line="26">
        <description><![CDATA[Resource loader for application module classes]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="26" name="uses" description="\Zend_Loader_Autoloader_Resource" refers="\Zend_Loader_Autoloader_Resource"/>
        <tag line="26" name="category" description="Zend"/>
        <tag line="26" name="package" description="Zend_Application"/>
        <tag line="26" name="subpackage" description="Module"/>
        <tag line="26" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="26" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="44" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="38">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="38" name="param" description="" type="array|\Zend_Config" variable="$options">
            <type by_reference="false">array</type>
            <type by_reference="false">\Zend_Config</type>
          </tag>
          <tag line="38" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="44">
          <name>$options</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="55" package="Default">
        <name>initDefaultResourceTypes</name>
        <type>function</type>
        <docblock line="50">
          <description><![CDATA[Initialize default resource types for module resource classes]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="50" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Application/Module/Bootstrap.php" hash="bdcea90730dc92a73f2fae2b3b795f45" package="Zend\Application\Module">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Application"/>
      <tag line="2" name="subpackage" description="Module"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="version" description="$Id: Bootstrap.php 23953 2011-05-03 05:47:39Z ralph $"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
    </docblock>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Application/Bootstrap/Bootstrap.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Application_Bootstrap_Bootstrap" refers="\Zend_Application_Bootstrap_Bootstrap"/>
      </docblock>
    </include>
    <class final="false" abstract="true" namespace="default" line="39" package="Zend\Application\Module">
      <name>Zend_Application_Module_Bootstrap</name>
      <full_name>\Zend_Application_Module_Bootstrap</full_name>
      <extends>\Zend_Application_Bootstrap_Bootstrap</extends>
      <docblock line="28">
        <description><![CDATA[Base bootstrap class for modules]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="28" name="uses" description="\Zend_Loader_Autoloader_Resource" refers="\Zend_Loader_Autoloader_Resource"/>
        <tag line="28" name="uses" description="\Zend_Application_Bootstrap_Bootstrap" refers="\Zend_Application_Bootstrap_Bootstrap"/>
        <tag line="28" name="category" description="Zend"/>
        <tag line="28" name="package" description="Zend_Application"/>
        <tag line="28" name="subpackage" description="Module"/>
        <tag line="28" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="28" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="46" package="Default">
        <name>$_moduleName</name>
        <default><![CDATA[]]></default>
        <docblock line="42">
          <description><![CDATA[Set this explicitly to reduce impact of determining module name]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="42" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="54" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="48">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="48" name="param" description="" type="\Zend_Application|\Zend_Application_Bootstrap_Bootstrapper" variable="$application">
            <type by_reference="false">\Zend_Application</type>
            <type by_reference="false">\Zend_Application_Bootstrap_Bootstrapper</type>
          </tag>
          <tag line="48" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="54">
          <name>$application</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="92" package="Default">
        <name>initResourceLoader</name>
        <type>function</type>
        <docblock line="87">
          <description><![CDATA[Ensure resource loader is loaded]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="87" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="105" package="Default">
        <name>getAppNamespace</name>
        <type>function</type>
        <docblock line="97">
          <description><![CDATA[Get default application namespace]]></description>
          <long-description><![CDATA[<p>Proxies to {@link getModuleName()}, and returns the current module
name</p>]]></long-description>
          <tag line="97" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="115" package="Default">
        <name>getModuleName</name>
        <type>function</type>
        <docblock line="110">
          <description><![CDATA[Retrieve module name]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="110" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Application/Bootstrap/BootstrapAbstract.php" hash="8ec9d78205cc3a433166d7255c88c2ef" package="Zend\Application\Bootstrap">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Application"/>
      <tag line="2" name="subpackage" description="Bootstrap"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: BootstrapAbstract.php 24394 2011-08-21 13:57:08Z padraic $"/>
    </docblock>
    <parse_markers>
      <critical line="38" code="50019">No short description for property $_application</critical>
      <critical line="43" code="50019">No short description for property $_classResources</critical>
      <critical line="48" code="50019">No short description for property $_container</critical>
      <critical line="53" code="50019">No short description for property $_environment</critical>
      <critical line="65" code="50019">No short description for property $_options</critical>
      <critical line="70" code="50019">No short description for property $_pluginLoader</critical>
      <critical line="75" code="50019">No short description for property $_pluginResources</critical>
      <critical line="80" code="50019">No short description for property $_run</critical>
      <critical line="85" code="50019">No short description for property $_started</critical>
      <error line="317" code="50014">Name of argument $resource does not match with the DocBlock's name $resourceName in getPluginResource()</error>
      <notice line="317" code="50013">Parameter $resourceName could not be found in getPluginResource()</notice>
    </parse_markers>
    <class final="false" abstract="true" namespace="default" line="34" package="Zend\Application\Bootstrap">
      <name>Zend_Application_Bootstrap_BootstrapAbstract</name>
      <full_name>\Zend_Application_Bootstrap_BootstrapAbstract</full_name>
      <extends/>
      <extends>\Zend_Application_Bootstrap_Bootstrapper</extends>
      <extends>\Zend_Application_Bootstrap_ResourceBootstrapper</extends>
      <docblock line="23">
        <description><![CDATA[Abstract base class for bootstrap classes]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="uses" description="\Zend_Application_Bootstrap_Bootstrapper" refers="\Zend_Application_Bootstrap_Bootstrapper"/>
        <tag line="23" name="uses" description="\Zend_Application_Bootstrap_ResourceBootstrapper" refers="\Zend_Application_Bootstrap_ResourceBootstrapper"/>
        <tag line="23" name="category" description="Zend"/>
        <tag line="23" name="package" description="Zend_Application"/>
        <tag line="23" name="subpackage" description="Bootstrap"/>
        <tag line="23" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="23" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="41" package="Default">
        <name>$_application</name>
        <default><![CDATA[]]></default>
        <docblock line="38">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="38" name="var" description="" type="\Zend_Application|\Zend_Application_Bootstrap_Bootstrapper">
            <type by_reference="false">\Zend_Application</type>
            <type by_reference="false">\Zend_Application_Bootstrap_Bootstrapper</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="46" package="Default">
        <name>$_classResources</name>
        <default><![CDATA[]]></default>
        <docblock line="43">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="43" name="var" description="Internal resource methods (resource/method pairs)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="51" package="Default">
        <name>$_container</name>
        <default><![CDATA[]]></default>
        <docblock line="48">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="48" name="var" description="Resource container" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="56" package="Default">
        <name>$_environment</name>
        <default><![CDATA[]]></default>
        <docblock line="53">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="53" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="63" package="Default">
        <name>$_optionKeys</name>
        <default><![CDATA[array()]]></default>
        <docblock line="58">
          <description><![CDATA[Flattened (lowercase) option keys used for lookups]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="58" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="68" package="Default">
        <name>$_options</name>
        <default><![CDATA[array()]]></default>
        <docblock line="65">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="65" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="73" package="Default">
        <name>$_pluginLoader</name>
        <default><![CDATA[]]></default>
        <docblock line="70">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="70" name="var" description="" type="\Zend_Loader_PluginLoader_Interface">
            <type by_reference="false">\Zend_Loader_PluginLoader_Interface</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="78" package="Default">
        <name>$_pluginResources</name>
        <default><![CDATA[array()]]></default>
        <docblock line="75">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="75" name="var" description="Class-based resource plugins" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="83" package="Default">
        <name>$_run</name>
        <default><![CDATA[array()]]></default>
        <docblock line="80">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="80" name="var" description="Initializers that have been run" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="88" package="Default">
        <name>$_started</name>
        <default><![CDATA[array()]]></default>
        <docblock line="85">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="85" name="var" description="Initializers that have been started but not yet completed (circular dependency detection)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="100" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="90">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[<p>Sets application object, initializes options, and prepares list of
initializer methods.</p>]]></long-description>
          <tag line="90" name="param" description="" type="\Zend_Application|\Zend_Application_Bootstrap_Bootstrapper" variable="$application">
            <type by_reference="false">\Zend_Application</type>
            <type by_reference="false">\Zend_Application_Bootstrap_Bootstrapper</type>
          </tag>
          <tag line="90" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="90" name="throws" description="When invalid application is provided" type="\Zend_Application_Bootstrap_Exception">
            <type by_reference="false">\Zend_Application_Bootstrap_Exception</type>
          </tag>
        </docblock>
        <argument line="100">
          <name>$application</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="113" package="Default">
        <name>setOptions</name>
        <type>function</type>
        <docblock line="107">
          <description><![CDATA[Set class state]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="107" name="param" description="" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="107" name="return" description="" type="\Zend_Application_Bootstrap_BootstrapAbstract">
            <type by_reference="false">\Zend_Application_Bootstrap_BootstrapAbstract</type>
          </tag>
        </docblock>
        <argument line="113">
          <name>$options</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="153" package="Default">
        <name>getOptions</name>
        <type>function</type>
        <docblock line="148">
          <description><![CDATA[Get current options from bootstrap]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="148" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="164" package="Default">
        <name>hasOption</name>
        <type>function</type>
        <docblock line="158">
          <description><![CDATA[Is an option present?]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="158" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="158" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="164">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="175" package="Default">
        <name>getOption</name>
        <type>function</type>
        <docblock line="169">
          <description><![CDATA[Retrieve a single option]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="169" name="param" description="" type="string" variable="$key">
            <type by_reference="false">string</type>
          </tag>
          <tag line="169" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="175">
          <name>$key</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="192" package="Default">
        <name>mergeOptions</name>
        <type>function</type>
        <docblock line="185">
          <description><![CDATA[Merge options recursively]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="185" name="param" description="" type="array" variable="$array1">
            <type by_reference="false">array</type>
          </tag>
          <tag line="185" name="param" description="" type="mixed" variable="$array2">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="185" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="192">
          <name>$array1</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
        <argument line="192">
          <name>$array2</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="216" package="Default">
        <name>getClassResources</name>
        <type>function</type>
        <docblock line="208">
          <description><![CDATA[Get class resources (as resource/method pairs)]]></description>
          <long-description><![CDATA[<p>Uses get_class_methods() by default, reflection on prior to 5.2.6,
as a bug prevents the usage of get_class_methods() there.</p>]]></long-description>
          <tag line="208" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="247" package="Default">
        <name>getClassResourceNames</name>
        <type>function</type>
        <docblock line="242">
          <description><![CDATA[Get class resource names]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="242" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="261" package="Default">
        <name>registerPluginResource</name>
        <type>function</type>
        <docblock line="253">
          <description><![CDATA[Register a new resource plugin]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="253" name="param" description="" type="string|\Zend_Application_Resource_Resource" variable="$resource">
            <type by_reference="false">string</type>
            <type by_reference="false">\Zend_Application_Resource_Resource</type>
          </tag>
          <tag line="253" name="param" description="" type="mixed" variable="$options">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="253" name="return" description="" type="\Zend_Application_Bootstrap_BootstrapAbstract">
            <type by_reference="false">\Zend_Application_Bootstrap_BootstrapAbstract</type>
          </tag>
          <tag line="253" name="throws" description="When invalid resource is provided" type="\Zend_Application_Bootstrap_Exception">
            <type by_reference="false">\Zend_Application_Bootstrap_Exception</type>
          </tag>
        </docblock>
        <argument line="261">
          <name>$resource</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="261">
          <name>$options</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="285" package="Default">
        <name>unregisterPluginResource</name>
        <type>function</type>
        <docblock line="278">
          <description><![CDATA[Unregister a resource from the bootstrap]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="278" name="param" description="" type="string|\Zend_Application_Resource_Resource" variable="$resource">
            <type by_reference="false">string</type>
            <type by_reference="false">\Zend_Application_Resource_Resource</type>
          </tag>
          <tag line="278" name="return" description="" type="\Zend_Application_Bootstrap_BootstrapAbstract">
            <type by_reference="false">\Zend_Application_Bootstrap_BootstrapAbstract</type>
          </tag>
          <tag line="278" name="throws" description="When unknown resource type is provided" type="\Zend_Application_Bootstrap_Exception">
            <type by_reference="false">\Zend_Application_Bootstrap_Exception</type>
          </tag>
        </docblock>
        <argument line="285">
          <name>$resource</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="312" package="Default">
        <name>hasPluginResource</name>
        <type>function</type>
        <docblock line="306">
          <description><![CDATA[Is the requested plugin resource registered?]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="306" name="param" description="" type="string" variable="$resource">
            <type by_reference="false">string</type>
          </tag>
          <tag line="306" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="312">
          <name>$resource</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="323" package="Default">
        <name>getPluginResource</name>
        <type>function</type>
        <docblock line="317">
          <description><![CDATA[Get a registered plugin resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="317" name="param" description="" type="string" variable="$resourceName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="317" name="return" description="" type="\Zend_Application_Resource_Resource">
            <type by_reference="false">\Zend_Application_Resource_Resource</type>
          </tag>
        </docblock>
        <argument line="323">
          <name>$resource</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="379" package="Default">
        <name>getPluginResources</name>
        <type>function</type>
        <docblock line="374">
          <description><![CDATA[Retrieve all plugin resources]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="374" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="392" package="Default">
        <name>getPluginResourceNames</name>
        <type>function</type>
        <docblock line="387">
          <description><![CDATA[Retrieve plugin resource names]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="387" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="404" package="Default">
        <name>setPluginLoader</name>
        <type>function</type>
        <docblock line="398">
          <description><![CDATA[Set plugin loader for loading resources]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="398" name="param" description="" type="\Zend_Loader_PluginLoader_Interface" variable="$loader">
            <type by_reference="false">\Zend_Loader_PluginLoader_Interface</type>
          </tag>
          <tag line="398" name="return" description="" type="\Zend_Application_Bootstrap_BootstrapAbstract">
            <type by_reference="false">\Zend_Application_Bootstrap_BootstrapAbstract</type>
          </tag>
        </docblock>
        <argument line="404">
          <name>$loader</name>
          <default><![CDATA[]]></default>
          <type>Zend_Loader_PluginLoader_Interface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="415" package="Default">
        <name>getPluginLoader</name>
        <type>function</type>
        <docblock line="410">
          <description><![CDATA[Get the plugin loader for resources]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="410" name="return" description="" type="\Zend_Loader_PluginLoader_Interface">
            <type by_reference="false">\Zend_Loader_PluginLoader_Interface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="435" package="Default">
        <name>setApplication</name>
        <type>function</type>
        <docblock line="429">
          <description><![CDATA[Set application/parent bootstrap]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="429" name="param" description="" type="\Zend_Application|\Zend_Application_Bootstrap_Bootstrapper" variable="$application">
            <type by_reference="false">\Zend_Application</type>
            <type by_reference="false">\Zend_Application_Bootstrap_Bootstrapper</type>
          </tag>
          <tag line="429" name="return" description="" type="\Zend_Application_Bootstrap_BootstrapAbstract">
            <type by_reference="false">\Zend_Application_Bootstrap_BootstrapAbstract</type>
          </tag>
        </docblock>
        <argument line="435">
          <name>$application</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="455" package="Default">
        <name>getApplication</name>
        <type>function</type>
        <docblock line="450">
          <description><![CDATA[Retrieve parent application instance]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="450" name="return" description="" type="\Zend_Application|\Zend_Application_Bootstrap_Bootstrapper">
            <type by_reference="false">\Zend_Application</type>
            <type by_reference="false">\Zend_Application_Bootstrap_Bootstrapper</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="465" package="Default">
        <name>getEnvironment</name>
        <type>function</type>
        <docblock line="460">
          <description><![CDATA[Retrieve application environment]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="460" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="485" package="Default">
        <name>setContainer</name>
        <type>function</type>
        <docblock line="473">
          <description><![CDATA[Set resource container]]></description>
          <long-description><![CDATA[<p>By default, if a resource callback has a non-null return value, this
value will be stored in a container using the resource name as the
key.</p>

<p>Containers must be objects, and must allow setting public properties.</p>]]></long-description>
          <tag line="473" name="param" description="" type="object" variable="$container">
            <type by_reference="false">object</type>
          </tag>
          <tag line="473" name="return" description="" type="\Zend_Application_Bootstrap_BootstrapAbstract">
            <type by_reference="false">\Zend_Application_Bootstrap_BootstrapAbstract</type>
          </tag>
        </docblock>
        <argument line="485">
          <name>$container</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="499" package="Default">
        <name>getContainer</name>
        <type>function</type>
        <docblock line="494">
          <description><![CDATA[Retrieve resource container]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="494" name="return" description="" type="object">
            <type by_reference="false">object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="517" package="Default">
        <name>hasResource</name>
        <type>function</type>
        <docblock line="507">
          <description><![CDATA[Determine if a resource has been stored in the container]]></description>
          <long-description><![CDATA[<p>During bootstrap resource initialization, you may return a value. If
you do, it will be stored in the {@link setContainer() container}.
You can use this method to determine if a value was stored.</p>]]></long-description>
          <tag line="507" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="507" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="517">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="536" package="Default">
        <name>getResource</name>
        <type>function</type>
        <docblock line="524">
          <description><![CDATA[Retrieve a resource from the container]]></description>
          <long-description><![CDATA[<p>During bootstrap resource initialization, you may return a value. If
you do, it will be stored in the {@link setContainer() container}.
You can use this method to retrieve that value.</p>

<p>If no value was returned, this will return a null value.</p>]]></long-description>
          <tag line="524" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="524" name="return" description="" type="null|mixed">
            <type by_reference="false">null</type>
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="536">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="553" package="Default">
        <name>__get</name>
        <type>function</type>
        <docblock line="546">
          <description><![CDATA[Implement PHP's magic to retrieve a ressource
in the bootstrap]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="546" name="param" description="" type="string" variable="$prop">
            <type by_reference="false">string</type>
          </tag>
          <tag line="546" name="return" description="" type="null|mixed">
            <type by_reference="false">null</type>
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="553">
          <name>$prop</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="565" package="Default">
        <name>__isset</name>
        <type>function</type>
        <docblock line="558">
          <description><![CDATA[Implement PHP's magic to ask for the
existence of a ressource in the bootstrap]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="558" name="param" description="" type="string" variable="$prop">
            <type by_reference="false">string</type>
          </tag>
          <tag line="558" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="565">
          <name>$prop</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="true" abstract="false" static="false" visibility="public" namespace="default" line="584" package="Default">
        <name>bootstrap</name>
        <type>function</type>
        <docblock line="570">
          <description><![CDATA[Bootstrap individual, all, or multiple resources]]></description>
          <long-description><![CDATA[<p>Marked as final to prevent issues when subclassing and naming the
child class 'Bootstrap' (in which case, overriding this method
would result in it being treated as a constructor).</p>

<p>If you need to override this functionality, override the
{@link _bootstrap()} method.</p>]]></long-description>
          <tag line="570" name="param" description="" type="null|string|array" variable="$resource">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="570" name="return" description="" type="\Zend_Application_Bootstrap_BootstrapAbstract">
            <type by_reference="false">\Zend_Application_Bootstrap_BootstrapAbstract</type>
          </tag>
          <tag line="570" name="throws" description="When invalid argument was passed" type="\Zend_Application_Bootstrap_Exception">
            <type by_reference="false">\Zend_Application_Bootstrap_Exception</type>
          </tag>
        </docblock>
        <argument line="584">
          <name>$resource</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="598" package="Default">
        <name>__call</name>
        <type>function</type>
        <docblock line="590">
          <description><![CDATA[Overloading: intercept calls to bootstrap<resourcename>() methods]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="590" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="590" name="param" description="" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="590" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="590" name="throws" description="On invalid method name" type="\Zend_Application_Bootstrap_Exception">
            <type by_reference="false">\Zend_Application_Bootstrap_Exception</type>
          </tag>
        </docblock>
        <argument line="598">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="598">
          <name>$args</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="618" package="Default">
        <name>_bootstrap</name>
        <type>function</type>
        <docblock line="608">
          <description><![CDATA[Bootstrap implementation]]></description>
          <long-description><![CDATA[<p>This method may be overridden to provide custom bootstrapping logic.
It is the sole method called by {@link bootstrap()}.</p>]]></long-description>
          <tag line="608" name="param" description="" type="null|string|array" variable="$resource">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="608" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="608" name="throws" description="When invalid argument was passed" type="\Zend_Application_Bootstrap_Exception">
            <type by_reference="false">\Zend_Application_Bootstrap_Exception</type>
          </tag>
        </docblock>
        <argument line="618">
          <name>$resource</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="653" package="Default">
        <name>_executeResource</name>
        <type>function</type>
        <docblock line="639">
          <description><![CDATA[Execute a resource]]></description>
          <long-description><![CDATA[<p>Checks to see if the resource has already been run. If not, it searches
first to see if a local method matches the resource, and executes that.
If not, it checks to see if a plugin resource matches, and executes that
if found.</p>

<p>Finally, if not found, it throws an exception.</p>]]></long-description>
          <tag line="639" name="param" description="" type="string" variable="$resource">
            <type by_reference="false">string</type>
          </tag>
          <tag line="639" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="639" name="throws" description="When resource not found" type="\Zend_Application_Bootstrap_Exception">
            <type by_reference="false">\Zend_Application_Bootstrap_Exception</type>
          </tag>
        </docblock>
        <argument line="653">
          <name>$resource</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="704" package="Default">
        <name>_loadPluginResource</name>
        <type>function</type>
        <docblock line="697">
          <description><![CDATA[Load a plugin resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="697" name="param" description="" type="string" variable="$resource">
            <type by_reference="false">string</type>
          </tag>
          <tag line="697" name="param" description="" type="array|object|null" variable="$options">
            <type by_reference="false">array</type>
            <type by_reference="false">object</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="697" name="return" description="" type="string|false">
            <type by_reference="false">string</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="704">
          <name>$resource</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="704">
          <name>$options</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="733" package="Default">
        <name>_markRun</name>
        <type>function</type>
        <docblock line="727">
          <description><![CDATA[Mark a resource as having run]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="727" name="param" description="" type="string" variable="$resource">
            <type by_reference="false">string</type>
          </tag>
          <tag line="727" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="733">
          <name>$resource</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="753" package="Default">
        <name>_resolvePluginResourceName</name>
        <type>function</type>
        <docblock line="740">
          <description><![CDATA[Resolve a plugin resource name]]></description>
          <long-description><![CDATA[<p>Uses, in order of preference
- $_explicitType property of resource
- Short name of resource (if a matching prefix path is found)
- class name (if none of the above are true)</p>

<p>The name is then cast to lowercase.</p>]]></long-description>
          <tag line="740" name="param" description="" type="\Zend_Application_Resource_Resource" variable="$resource">
            <type by_reference="false">\Zend_Application_Resource_Resource</type>
          </tag>
          <tag line="740" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="753">
          <name>$resource</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Application/Bootstrap/Exception.php" hash="43599ed8348372965019cde1e627fc15" package="Zend\Application">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Application"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Exception.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <include line="25" type="Require Once" package="Default">
      <name>Zend/Application/Exception.php</name>
      <docblock line="22">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="22" name="see" description="\Zend_Application_Exception" refers="\Zend_Application_Exception"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="36" package="Zend\Application">
      <name>Zend_Application_Bootstrap_Exception</name>
      <full_name>\Zend_Application_Bootstrap_Exception</full_name>
      <extends>\Zend_Application_Exception</extends>
      <docblock line="27">
        <description><![CDATA[Exception class for Zend_Application]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="27" name="category" description="Zend"/>
        <tag line="27" name="package" description="Zend_Application"/>
        <tag line="27" name="uses" description="\Zend_Application_Exception" refers="\Zend_Application_Exception"/>
        <tag line="27" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="27" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
    </class>
  </file>
  <file path="Zend/Application/Bootstrap/ResourceBootstrapper.php" hash="9df059275c81fe10e4026b0bd967ff7d" package="Zend\Application\Bootstrap">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Application"/>
      <tag line="2" name="subpackage" description="Bootstrap"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: ResourceBootstrapper.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <interface namespace="default" line="32" package="Zend\Application\Bootstrap">
      <name>Zend_Application_Bootstrap_ResourceBootstrapper</name>
      <full_name>\Zend_Application_Bootstrap_ResourceBootstrapper</full_name>
      <extends/>
      <docblock line="23">
        <description><![CDATA[Interface for bootstrap classes that utilize resource plugins]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="category" description="Zend"/>
        <tag line="23" name="package" description="Zend_Application"/>
        <tag line="23" name="subpackage" description="Bootstrap"/>
        <tag line="23" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="23" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="41" package="Default">
        <name>registerPluginResource</name>
        <type>function</type>
        <docblock line="34">
          <description><![CDATA[Register a resource with the bootstrap]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="34" name="param" description="" type="string|\Zend_Application_Resource_Resource" variable="$resource">
            <type by_reference="false">string</type>
            <type by_reference="false">\Zend_Application_Resource_Resource</type>
          </tag>
          <tag line="34" name="param" description="" type="null|array|\Zend_Config" variable="$options">
            <type by_reference="false">null</type>
            <type by_reference="false">array</type>
            <type by_reference="false">\Zend_Config</type>
          </tag>
          <tag line="34" name="return" description="" type="\Zend_Application_Bootstrap_ResourceBootstrapper">
            <type by_reference="false">\Zend_Application_Bootstrap_ResourceBootstrapper</type>
          </tag>
        </docblock>
        <argument line="41">
          <name>$resource</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="41">
          <name>$options</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="49" package="Default">
        <name>unregisterPluginResource</name>
        <type>function</type>
        <docblock line="43">
          <description><![CDATA[Unregister a resource from the bootstrap]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="43" name="param" description="" type="string|\Zend_Application_Resource_Resource" variable="$resource">
            <type by_reference="false">string</type>
            <type by_reference="false">\Zend_Application_Resource_Resource</type>
          </tag>
          <tag line="43" name="return" description="" type="\Zend_Application_Bootstrap_ResourceBootstrapper">
            <type by_reference="false">\Zend_Application_Bootstrap_ResourceBootstrapper</type>
          </tag>
        </docblock>
        <argument line="49">
          <name>$resource</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="57" package="Default">
        <name>hasPluginResource</name>
        <type>function</type>
        <docblock line="51">
          <description><![CDATA[Is the requested resource registered?]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="51" name="param" description="" type="string" variable="$resource">
            <type by_reference="false">string</type>
          </tag>
          <tag line="51" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="57">
          <name>$resource</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="65" package="Default">
        <name>getPluginResource</name>
        <type>function</type>
        <docblock line="59">
          <description><![CDATA[Retrieve resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="59" name="param" description="" type="string" variable="$resource">
            <type by_reference="false">string</type>
          </tag>
          <tag line="59" name="return" description="" type="\Zend_Application_Resource_Resource">
            <type by_reference="false">\Zend_Application_Resource_Resource</type>
          </tag>
        </docblock>
        <argument line="65">
          <name>$resource</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="72" package="Default">
        <name>getPluginResources</name>
        <type>function</type>
        <docblock line="67">
          <description><![CDATA[Get all resources]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="67" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="79" package="Default">
        <name>getPluginResourceNames</name>
        <type>function</type>
        <docblock line="74">
          <description><![CDATA[Get just resource names]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="74" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="87" package="Default">
        <name>setPluginLoader</name>
        <type>function</type>
        <docblock line="81">
          <description><![CDATA[Set plugin loader to use to fetch resources]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="81" name="param" description="Zend_Loader_PluginLoader" type="\Zend_Loader_PluginLoader_Interface" variable="$loader">
            <type by_reference="false">\Zend_Loader_PluginLoader_Interface</type>
          </tag>
          <tag line="81" name="return" description="" type="\Zend_Application_Bootstrap_ResourceBootstrapper">
            <type by_reference="false">\Zend_Application_Bootstrap_ResourceBootstrapper</type>
          </tag>
        </docblock>
        <argument line="87">
          <name>$loader</name>
          <default><![CDATA[]]></default>
          <type>Zend_Loader_PluginLoader_Interface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="94" package="Default">
        <name>getPluginLoader</name>
        <type>function</type>
        <docblock line="89">
          <description><![CDATA[Retrieve plugin loader for resources]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="89" name="return" description="" type="\Zend_Loader_PluginLoader">
            <type by_reference="false">\Zend_Loader_PluginLoader</type>
          </tag>
        </docblock>
      </method>
    </interface>
  </file>
  <file path="Zend/Application/Bootstrap/Bootstrapper.php" hash="829c43b473a845754534b8929e0b5bd3" package="Zend\Application\Bootstrap">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Application"/>
      <tag line="2" name="subpackage" description="Bootstrap"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Bootstrapper.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <interface namespace="default" line="32" package="Zend\Application\Bootstrap">
      <name>Zend_Application_Bootstrap_Bootstrapper</name>
      <full_name>\Zend_Application_Bootstrap_Bootstrapper</full_name>
      <extends/>
      <docblock line="23">
        <description><![CDATA[Interface for bootstrap classes]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="category" description="Zend"/>
        <tag line="23" name="package" description="Zend_Application"/>
        <tag line="23" name="subpackage" description="Bootstrap"/>
        <tag line="23" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="23" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="40" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="34">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="34" name="param" description="" type="\Zend_Application" variable="$application">
            <type by_reference="false">\Zend_Application</type>
          </tag>
          <tag line="34" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="40">
          <name>$application</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="48" package="Default">
        <name>setOptions</name>
        <type>function</type>
        <docblock line="42">
          <description><![CDATA[Set bootstrap options]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="42" name="param" description="" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="42" name="return" description="" type="\Zend_Application_Bootstrap_Bootstrapper">
            <type by_reference="false">\Zend_Application_Bootstrap_Bootstrapper</type>
          </tag>
        </docblock>
        <argument line="48">
          <name>$options</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="55" package="Default">
        <name>getApplication</name>
        <type>function</type>
        <docblock line="50">
          <description><![CDATA[Retrieve application object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="50" name="return" description="" type="\Zend_Application|\Zend_Application_Bootstrap_Bootstrapper">
            <type by_reference="false">\Zend_Application</type>
            <type by_reference="false">\Zend_Application_Bootstrap_Bootstrapper</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="62" package="Default">
        <name>getEnvironment</name>
        <type>function</type>
        <docblock line="57">
          <description><![CDATA[Retrieve application environment]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="57" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="70" package="Default">
        <name>getClassResources</name>
        <type>function</type>
        <docblock line="64">
          <description><![CDATA[Retrieve list of class resource initializers (_init* methods). Returns
as resource/method pairs.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="64" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="78" package="Default">
        <name>getClassResourceNames</name>
        <type>function</type>
        <docblock line="72">
          <description><![CDATA[Retrieve list of class resource initializer names (resource names only,
no method names)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="72" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="86" package="Default">
        <name>bootstrap</name>
        <type>function</type>
        <docblock line="80">
          <description><![CDATA[Bootstrap application or individual resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="80" name="param" description="" type="null|string" variable="$resource">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="80" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="86">
          <name>$resource</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="93" package="Default">
        <name>run</name>
        <type>function</type>
        <docblock line="88">
          <description><![CDATA[Run the application]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="88" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </interface>
  </file>
  <file path="Zend/Application/Bootstrap/Bootstrap.php" hash="d4d6dc0995a9da8a3e7f44f73112352b" package="Zend\Application\Bootstrap">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Application"/>
      <tag line="2" name="subpackage" description="Bootstrap"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Bootstrap.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <class final="false" abstract="false" namespace="default" line="35" package="Zend\Application\Bootstrap">
      <name>Zend_Application_Bootstrap_Bootstrap</name>
      <full_name>\Zend_Application_Bootstrap_Bootstrap</full_name>
      <extends>\Zend_Application_Bootstrap_BootstrapAbstract</extends>
      <docblock line="23">
        <description><![CDATA[Concrete base class for bootstrap classes]]></description>
        <long-description><![CDATA[<p>Registers and utilizes Zend_Controller_Front by default.</p>]]></long-description>
        <tag line="23" name="uses" description="\Zend_Application_Bootstrap_Bootstrap" refers="\Zend_Application_Bootstrap_Bootstrap"/>
        <tag line="23" name="category" description="Zend"/>
        <tag line="23" name="package" description="Zend_Application"/>
        <tag line="23" name="subpackage" description="Bootstrap"/>
        <tag line="23" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="23" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="42" package="Default">
        <name>$_appNamespace</name>
        <default><![CDATA[false]]></default>
        <docblock line="38">
          <description><![CDATA[Application resource namespace]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="38" name="var" description="" type="false|string">
            <type by_reference="false">false</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="48" package="Default">
        <name>$_resourceLoader</name>
        <default><![CDATA[]]></default>
        <docblock line="44">
          <description><![CDATA[Application resource autoloader]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="44" name="var" description="" type="\Zend_Loader_Autoloader_Resource">
            <type by_reference="false">\Zend_Loader_Autoloader_Resource</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="58" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="50">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[<p>Ensure FrontController resource is registered</p>]]></long-description>
          <tag line="50" name="param" description="" type="\Zend_Application|\Zend_Application_Bootstrap_Bootstrapper" variable="$application">
            <type by_reference="false">\Zend_Application</type>
            <type by_reference="false">\Zend_Application_Bootstrap_Bootstrapper</type>
          </tag>
          <tag line="50" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="58">
          <name>$application</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="86" package="Default">
        <name>run</name>
        <type>function</type>
        <docblock line="74">
          <description><![CDATA[Run the application]]></description>
          <long-description><![CDATA[<p>Checks to see that we have a default controller directory. If not, an
exception is thrown.</p>

<p>If so, it registers the bootstrap with the 'bootstrap' parameter of
the front controller, and dispatches the front controller.</p>]]></long-description>
          <tag line="74" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="74" name="throws" description="" type="\Zend_Application_Bootstrap_Exception">
            <type by_reference="false">\Zend_Application_Bootstrap_Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="109" package="Default">
        <name>setResourceLoader</name>
        <type>function</type>
        <docblock line="103">
          <description><![CDATA[Set module resource loader]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="103" name="param" description="" type="\Zend_Loader_Autoloader_Resource" variable="$loader">
            <type by_reference="false">\Zend_Loader_Autoloader_Resource</type>
          </tag>
          <tag line="103" name="return" description="" type="\Zend_Application_Module_Bootstrap">
            <type by_reference="false">\Zend_Application_Module_Bootstrap</type>
          </tag>
        </docblock>
        <argument line="109">
          <name>$loader</name>
          <default><![CDATA[]]></default>
          <type>Zend_Loader_Autoloader_Resource</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="120" package="Default">
        <name>getResourceLoader</name>
        <type>function</type>
        <docblock line="115">
          <description><![CDATA[Retrieve module resource loader]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="115" name="return" description="" type="\Zend_Loader_Autoloader_Resource">
            <type by_reference="false">\Zend_Loader_Autoloader_Resource</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="140" package="Default">
        <name>getAppNamespace</name>
        <type>function</type>
        <docblock line="135">
          <description><![CDATA[Get application namespace (used for module autoloading)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="135" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="151" package="Default">
        <name>setAppNamespace</name>
        <type>function</type>
        <docblock line="145">
          <description><![CDATA[Set application namespace (for module autoloading)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="145" name="param" description="string" type="" variable="$value"/>
          <tag line="145" name="return" description="" type="\Zend_Application_Bootstrap_Bootstrap">
            <type by_reference="false">\Zend_Application_Bootstrap_Bootstrap</type>
          </tag>
        </docblock>
        <argument line="151">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Application/Resource/Multidb.php" hash="74a1bb2cae507f09398587275ac607cb" package="Zend\Application\Resource">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Application"/>
      <tag line="2" name="subpackage" description="Resource"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Multidb.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <error line="168" code="50015">Argument $adapter is missing from the Docblock of _setDefault()</error>
    </parse_markers>
    <include line="23" type="Require Once" package="Zend\Application\Resource">
      <name>Zend/Application/Resource/ResourceAbstract.php</name>
      <docblock line="2">
        <description><![CDATA[Zend Framework]]></description>
        <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
        <tag line="2" name="category" description="Zend"/>
        <tag line="2" name="package" description="Zend_Application"/>
        <tag line="2" name="subpackage" description="Resource"/>
        <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
        <tag line="2" name="version" description="$Id: Multidb.php 23775 2011-03-01 17:25:24Z ralph $"/>
      </docblock>
    </include>
    <include line="25" type="Require Once">
      <name>Zend/Db/Table.php</name>
    </include>
    <class final="false" abstract="false" namespace="default" line="57" package="Zend\Application\Resource">
      <name>Zend_Application_Resource_Multidb</name>
      <full_name>\Zend_Application_Resource_Multidb</full_name>
      <extends>\Zend_Application_Resource_ResourceAbstract</extends>
      <docblock line="30">
        <description><![CDATA[Cache Manager resource]]></description>
        <long-description><![CDATA[<p>Example configuration:</p>

<pre>
  resources.multidb.defaultMetadataCache = "database"

  resources.multidb.db1.adapter = "pdo_mysql"
  resources.multidb.db1.host = "localhost"
  resources.multidb.db1.username = "webuser"
  resources.multidb.db1.password = "XXXX"
  resources.multidb.db1.dbname = "db1"
  resources.multidb.db1.default = true

  resources.multidb.db2.adapter = "pdo_pgsql"
  resources.multidb.db2.host = "example.com"
  resources.multidb.db2.username = "dba"
  resources.multidb.db2.password = "notthatpublic"
  resources.multidb.db2.dbname = "db2"
</pre>]]></long-description>
        <tag line="30" name="category" description="Zend"/>
        <tag line="30" name="package" description="Zend_Application"/>
        <tag line="30" name="subpackage" description="Resource"/>
        <tag line="30" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="30" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="64" package="Default">
        <name>$_dbs</name>
        <default><![CDATA[array()]]></default>
        <docblock line="59">
          <description><![CDATA[Associative array containing all configured db's]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="59" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="71" package="Default">
        <name>$_defaultDb</name>
        <default><![CDATA[]]></default>
        <docblock line="66">
          <description><![CDATA[An instance of the default db, if set]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="66" name="var" description="" type="null|\Zend_Db_Adapter_Abstract">
            <type by_reference="false">null</type>
            <type by_reference="false">\Zend_Db_Adapter_Abstract</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="78" package="Default">
        <name>init</name>
        <type>function</type>
        <docblock line="73">
          <description><![CDATA[Initialize the Database Connections (instances of Zend_Db_Table_Abstract)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="73" name="return" description="" type="\Zend_Application_Resource_Multidb">
            <type by_reference="false">\Zend_Application_Resource_Multidb</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="115" package="Default">
        <name>isDefault</name>
        <type>function</type>
        <docblock line="109">
          <description><![CDATA[Determine if the given db(identifier) is the default db.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="109" name="param" description="The db to determine whether it's set as default" type="string|\Zend_Db_Adapter_Abstract" variable="$db">
            <type by_reference="false">string</type>
            <type by_reference="false">\Zend_Db_Adapter_Abstract</type>
          </tag>
          <tag line="109" name="return" description="True if the given parameter is configured as default. False otherwise" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="115">
          <name>$db</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="132" package="Default">
        <name>getDb</name>
        <type>function</type>
        <docblock line="124">
          <description><![CDATA[Retrieve the specified database connection]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="124" name="param" description="The adapter to retrieve. Null to retrieve the default connection" type="null|string|\Zend_Db_Adapter_Abstract" variable="$db">
            <type by_reference="false">null</type>
            <type by_reference="false">string</type>
            <type by_reference="false">\Zend_Db_Adapter_Abstract</type>
          </tag>
          <tag line="124" name="return" description="" type="\Zend_Db_Adapter_Abstract">
            <type by_reference="false">\Zend_Db_Adapter_Abstract</type>
          </tag>
          <tag line="124" name="throws" description="if the given parameter could not be found" type="\Zend_Application_Resource_Exception">
            <type by_reference="false">\Zend_Application_Resource_Exception</type>
          </tag>
        </docblock>
        <argument line="132">
          <name>$db</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="155" package="Default">
        <name>getDefaultDb</name>
        <type>function</type>
        <docblock line="147">
          <description><![CDATA[Get the default db connection]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="147" name="param" description="If true, a random (the first one in the stack) connection is returned if no default was set. If false, null is returned if no default was set." type="boolean" variable="$justPickOne">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="147" name="return" description="" type="null|\Zend_Db_Adapter_Abstract">
            <type by_reference="false">null</type>
            <type by_reference="false">\Zend_Db_Adapter_Abstract</type>
          </tag>
        </docblock>
        <argument line="155">
          <name>$justPickOne</name>
          <default><![CDATA[true]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="173" package="Default">
        <name>_setDefault</name>
        <type>function</type>
        <docblock line="168">
          <description><![CDATA[Set the default db adapter]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="168" name="var" description="Adapter to set as default" type="\Zend_Db_Adapter_Abstract">
            <type by_reference="false">\Zend_Db_Adapter_Abstract</type>
          </tag>
        </docblock>
        <argument line="173">
          <name>$adapter</name>
          <default><![CDATA[]]></default>
          <type>Zend_Db_Adapter_Abstract</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="185" package="Default">
        <name>_setDefaultMetadataCache</name>
        <type>function</type>
        <docblock line="179">
          <description><![CDATA[Set the default metadata cache]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="179" name="param" description="" type="string|\Zend_Cache_Core" variable="$cache">
            <type by_reference="false">string</type>
            <type by_reference="false">\Zend_Cache_Core</type>
          </tag>
          <tag line="179" name="return" description="" type="\Zend_Application_Resource_Multidb">
            <type by_reference="false">\Zend_Application_Resource_Multidb</type>
          </tag>
        </docblock>
        <argument line="185">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Application/Resource/Db.php" hash="9d2dfbd306231f7cea94986ece9d9955" package="Zend\Application\Resource">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Application"/>
      <tag line="2" name="subpackage" description="Resource"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Db.php 24297 2011-07-29 00:11:25Z adamlundrigan $"/>
    </docblock>
    <parse_markers>
      <critical line="47" code="50019">No short description for property $_db</critical>
      <error line="88" code="50014">Name of argument $params does not match with the DocBlock's name $adapter in setParams()</error>
      <error line="88" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $params in setParams()</error>
      <notice line="88" code="50013">Parameter $adapter could not be found in setParams()</notice>
      <error line="110" code="50014">Name of argument $isDefaultTableAdapter does not match with the DocBlock's name $defaultTableAdapter in setIsDefaultTableAdapter()</error>
      <notice line="110" code="50013">Parameter $defaultTableAdapter could not be found in setIsDefaultTableAdapter()</notice>
    </parse_markers>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Application/Resource/ResourceAbstract.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Application_Resource_ResourceAbstract" refers="\Zend_Application_Resource_ResourceAbstract"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="38" package="Zend\Application\Resource">
      <name>Zend_Application_Resource_Db</name>
      <full_name>\Zend_Application_Resource_Db</full_name>
      <extends>\Zend_Application_Resource_ResourceAbstract</extends>
      <docblock line="28">
        <description><![CDATA[Resource for creating database adapter]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="28" name="uses" description="\Zend_Application_Resource_ResourceAbstract" refers="\Zend_Application_Resource_ResourceAbstract"/>
        <tag line="28" name="category" description="Zend"/>
        <tag line="28" name="package" description="Zend_Application"/>
        <tag line="28" name="subpackage" description="Resource"/>
        <tag line="28" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="28" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="45" package="Default">
        <name>$_adapter</name>
        <default><![CDATA[null]]></default>
        <docblock line="40">
          <description><![CDATA[Adapter to use]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="40" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="50" package="Default">
        <name>$_db</name>
        <default><![CDATA[]]></default>
        <docblock line="47">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="47" name="var" description="" type="\Zend_Db_Adapter_Abstract">
            <type by_reference="false">\Zend_Db_Adapter_Abstract</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="57" package="Default">
        <name>$_params</name>
        <default><![CDATA[array()]]></default>
        <docblock line="52">
          <description><![CDATA[Parameters to use]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="52" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="64" package="Default">
        <name>$_isDefaultTableAdapter</name>
        <default><![CDATA[true]]></default>
        <docblock line="59">
          <description><![CDATA[Wether to register the created adapter as default table adapter]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="59" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="72" package="Default">
        <name>setAdapter</name>
        <type>function</type>
        <docblock line="66">
          <description><![CDATA[Set the adapter]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="66" name="param" description="" type="string" variable="$adapter">
            <type by_reference="false">string</type>
          </tag>
          <tag line="66" name="return" description="" type="\Zend_Application_Resource_Db">
            <type by_reference="false">\Zend_Application_Resource_Db</type>
          </tag>
        </docblock>
        <argument line="72">
          <name>$adapter</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="83" package="Default">
        <name>getAdapter</name>
        <type>function</type>
        <docblock line="78">
          <description><![CDATA[Adapter type to use]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="78" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="94" package="Default">
        <name>setParams</name>
        <type>function</type>
        <docblock line="88">
          <description><![CDATA[Set the adapter params]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="88" name="param" description="" type="string" variable="$adapter">
            <type by_reference="false">string</type>
          </tag>
          <tag line="88" name="return" description="" type="\Zend_Application_Resource_Db">
            <type by_reference="false">\Zend_Application_Resource_Db</type>
          </tag>
        </docblock>
        <argument line="94">
          <name>$params</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="105" package="Default">
        <name>getParams</name>
        <type>function</type>
        <docblock line="100">
          <description><![CDATA[Adapter parameters]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="100" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="116" package="Default">
        <name>setIsDefaultTableAdapter</name>
        <type>function</type>
        <docblock line="110">
          <description><![CDATA[Set whether to use this as default table adapter]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="110" name="param" description="" type="boolean" variable="$defaultTableAdapter">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="110" name="return" description="" type="\Zend_Application_Resource_Db">
            <type by_reference="false">\Zend_Application_Resource_Db</type>
          </tag>
        </docblock>
        <argument line="116">
          <name>$isDefaultTableAdapter</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="127" package="Default">
        <name>isDefaultTableAdapter</name>
        <type>function</type>
        <docblock line="122">
          <description><![CDATA[Is this adapter the default table adapter?]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="122" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="137" package="Default">
        <name>getDbAdapter</name>
        <type>function</type>
        <docblock line="132">
          <description><![CDATA[Retrieve initialized DB connection]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="132" name="return" description="" type="null|\Zend_Db_Adapter_Abstract">
            <type by_reference="false">null</type>
            <type by_reference="false">\Zend_Db_Adapter_Abstract</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="152" package="Default">
        <name>init</name>
        <type>function</type>
        <docblock line="147">
          <description><![CDATA[Defined by Zend_Application_Resource_Resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="147" name="return" description="" type="\Zend_Db_Adapter_Abstract|null">
            <type by_reference="false">\Zend_Db_Adapter_Abstract</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="168" package="Default">
        <name>setDefaultMetadataCache</name>
        <type>function</type>
        <docblock line="162">
          <description><![CDATA[Set the default metadata cache]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="162" name="param" description="" type="string|\Zend_Cache_Core" variable="$cache">
            <type by_reference="false">string</type>
            <type by_reference="false">\Zend_Cache_Core</type>
          </tag>
          <tag line="162" name="return" description="" type="\Zend_Application_Resource_Db">
            <type by_reference="false">\Zend_Application_Resource_Db</type>
          </tag>
        </docblock>
        <argument line="168">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Application/Resource/View.php" hash="6fa3732665c2c8b103397418cf610835" package="Zend\Application\Resource">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Application"/>
      <tag line="2" name="subpackage" description="Resource"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: View.php 24288 2011-07-28 20:37:43Z matthew $"/>
    </docblock>
    <parse_markers>
      <critical line="41" code="50019">No short description for property $_view</critical>
    </parse_markers>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Application/Resource/ResourceAbstract.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Application_Resource_ResourceAbstract" refers="\Zend_Application_Resource_ResourceAbstract"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="39" package="Zend\Application\Resource">
      <name>Zend_Application_Resource_View</name>
      <full_name>\Zend_Application_Resource_View</full_name>
      <extends>\Zend_Application_Resource_ResourceAbstract</extends>
      <docblock line="29">
        <description><![CDATA[Resource for settings view options]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="29" name="uses" description="\Zend_Application_Resource_ResourceAbstract" refers="\Zend_Application_Resource_ResourceAbstract"/>
        <tag line="29" name="category" description="Zend"/>
        <tag line="29" name="package" description="Zend_Application"/>
        <tag line="29" name="subpackage" description="Resource"/>
        <tag line="29" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="29" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="44" package="Default">
        <name>$_view</name>
        <default><![CDATA[]]></default>
        <docblock line="41">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="41" name="var" description="" type="\Zend_View_Interface">
            <type by_reference="false">\Zend_View_Interface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="51" package="Default">
        <name>init</name>
        <type>function</type>
        <docblock line="46">
          <description><![CDATA[Defined by Zend_Application_Resource_Resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="46" name="return" description="" type="\Zend_View">
            <type by_reference="false">\Zend_View</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="65" package="Default">
        <name>getView</name>
        <type>function</type>
        <docblock line="60">
          <description><![CDATA[Retrieve view object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="60" name="return" description="" type="\Zend_View">
            <type by_reference="false">\Zend_View</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Application/Resource/Dojo.php" hash="8cc2aa33ba7507344150a45ddb4b5f25" package="Zend\Application\Resource">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Application"/>
      <tag line="2" name="subpackage" description="Resource"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Dojo.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="42" code="50019">No short description for property $_dojo</critical>
    </parse_markers>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Application/Resource/ResourceAbstract.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Application_Resource_ResourceAbstract" refers="\Zend_Application_Resource_ResourceAbstract"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="39" package="Zend\Application\Resource">
      <name>Zend_Application_Resource_Dojo</name>
      <full_name>\Zend_Application_Resource_Dojo</full_name>
      <extends>\Zend_Application_Resource_ResourceAbstract</extends>
      <docblock line="29">
        <description><![CDATA[Resource for settings Dojo options]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="29" name="uses" description="\Zend_Application_Resource_ResourceAbstract" refers="\Zend_Application_Resource_ResourceAbstract"/>
        <tag line="29" name="category" description="Zend"/>
        <tag line="29" name="package" description="Zend_Application"/>
        <tag line="29" name="subpackage" description="Resource"/>
        <tag line="29" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="29" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="45" package="Default">
        <name>$_dojo</name>
        <default><![CDATA[]]></default>
        <docblock line="42">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="42" name="var" description="" type="\Zend_Dojo_View_Helper_Dojo_Container">
            <type by_reference="false">\Zend_Dojo_View_Helper_Dojo_Container</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="52" package="Default">
        <name>init</name>
        <type>function</type>
        <docblock line="47">
          <description><![CDATA[Defined by Zend_Application_Resource_Resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="47" name="return" description="" type="\Zend_Dojo_View_Helper_Dojo_Container">
            <type by_reference="false">\Zend_Dojo_View_Helper_Dojo_Container</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="62" package="Default">
        <name>getDojo</name>
        <type>function</type>
        <docblock line="57">
          <description><![CDATA[Retrieve Dojo View Helper]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="57" name="return" description="" type="\Zend_Dojo_View_Dojo_Container">
            <type by_reference="false">\Zend_Dojo_View_Dojo_Container</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Application/Resource/Router.php" hash="840365b27662245c4a92d8d20ae78960" package="Zend\Application\Resource">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Application"/>
      <tag line="2" name="subpackage" description="Resource"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Router.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="42" code="50019">No short description for property $_router</critical>
    </parse_markers>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Application/Resource/ResourceAbstract.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Application_Resource_ResourceAbstract" refers="\Zend_Application_Resource_ResourceAbstract"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="39" package="Zend\Application\Resource">
      <name>Zend_Application_Resource_Router</name>
      <full_name>\Zend_Application_Resource_Router</full_name>
      <extends>\Zend_Application_Resource_ResourceAbstract</extends>
      <docblock line="29">
        <description><![CDATA[Resource for initializing the locale]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="29" name="uses" description="\Zend_Application_Resource_Base" refers="\Zend_Application_Resource_Base"/>
        <tag line="29" name="category" description="Zend"/>
        <tag line="29" name="package" description="Zend_Application"/>
        <tag line="29" name="subpackage" description="Resource"/>
        <tag line="29" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="29" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="45" package="Default">
        <name>$_router</name>
        <default><![CDATA[]]></default>
        <docblock line="42">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="42" name="var" description="" type="\Zend_Controller_Router_Rewrite">
            <type by_reference="false">\Zend_Controller_Router_Rewrite</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="52" package="Default">
        <name>init</name>
        <type>function</type>
        <docblock line="47">
          <description><![CDATA[Defined by Zend_Application_Resource_Resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="47" name="return" description="" type="\Zend_Controller_Router_Rewrite">
            <type by_reference="false">\Zend_Controller_Router_Rewrite</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="62" package="Default">
        <name>getRouter</name>
        <type>function</type>
        <docblock line="57">
          <description><![CDATA[Retrieve router object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="57" name="return" description="" type="\Zend_Controller_Router_Rewrite">
            <type by_reference="false">\Zend_Controller_Router_Rewrite</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Application/Resource/Exception.php" hash="d2549e75da8f653e3e81a8ebcb7cb240" package="Zend\Application\Resource">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Application"/>
      <tag line="2" name="subpackage" description="Resource"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Exception.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Application/Exception.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Application_Exception" refers="\Zend_Application_Exception"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="38" package="Zend\Application\Resource">
      <name>Zend_Application_Resource_Exception</name>
      <full_name>\Zend_Application_Resource_Exception</full_name>
      <extends>\Zend_Application_Exception</extends>
      <docblock line="28">
        <description><![CDATA[Exception class for Zend_Application]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="28" name="uses" description="\Zend_Application_Exception" refers="\Zend_Application_Exception"/>
        <tag line="28" name="category" description="Zend"/>
        <tag line="28" name="package" description="Zend_Application"/>
        <tag line="28" name="subpackage" description="Resource"/>
        <tag line="28" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="28" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
    </class>
  </file>
  <file path="Zend/Application/Resource/Translate.php" hash="f76d244b552cf1d8936b1ada88ed8883" package="Zend\Application\Resource">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Application"/>
      <tag line="2" name="subpackage" description="Resource"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Translate.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="43" code="50019">No short description for property $_translate</critical>
    </parse_markers>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Application/Resource/ResourceAbstract.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Application_Resource_ResourceAbstract" refers="\Zend_Application_Resource_ResourceAbstract"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="39" package="Zend\Application\Resource">
      <name>Zend_Application_Resource_Translate</name>
      <full_name>\Zend_Application_Resource_Translate</full_name>
      <extends>\Zend_Application_Resource_ResourceAbstract</extends>
      <docblock line="29">
        <description><![CDATA[Resource for setting translation options]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="29" name="uses" description="\Zend_Application_Resource_ResourceAbstract" refers="\Zend_Application_Resource_ResourceAbstract"/>
        <tag line="29" name="category" description="Zend"/>
        <tag line="29" name="package" description="Zend_Application"/>
        <tag line="29" name="subpackage" description="Resource"/>
        <tag line="29" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="29" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <constant namespace="default" line="41">
        <name>DEFAULT_REGISTRY_KEY</name>
        <value><![CDATA['Zend_Translate']]></value>
      </constant>
      <property final="false" static="false" visibility="protected" line="46" package="Default">
        <name>$_translate</name>
        <default><![CDATA[]]></default>
        <docblock line="43">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="43" name="var" description="" type="\Zend_Translate">
            <type by_reference="false">\Zend_Translate</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="53" package="Default">
        <name>init</name>
        <type>function</type>
        <docblock line="48">
          <description><![CDATA[Defined by Zend_Application_Resource_Resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="48" name="return" description="" type="\Zend_Translate">
            <type by_reference="false">\Zend_Translate</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="65" package="Default">
        <name>getTranslate</name>
        <type>function</type>
        <docblock line="58">
          <description><![CDATA[Retrieve translate object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="58" name="return" description="" type="\Zend_Translate">
            <type by_reference="false">\Zend_Translate</type>
          </tag>
          <tag line="58" name="throws" description="if registry key was used already but is no instance of Zend_Translate" type="\Zend_Application_Resource_Exception">
            <type by_reference="false">\Zend_Application_Resource_Exception</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Application/Resource/Frontcontroller.php" hash="0b221c65bebc965dba317980f01ca2d0" package="Zend\Application\Resource">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Application"/>
      <tag line="2" name="subpackage" description="Resource"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Frontcontroller.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="40" code="50019">No short description for property $_front</critical>
    </parse_markers>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Application/Resource/ResourceAbstract.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Application_Resource_ResourceAbstract" refers="\Zend_Application_Resource_ResourceAbstract"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="38" package="Zend\Application\Resource">
      <name>Zend_Application_Resource_Frontcontroller</name>
      <full_name>\Zend_Application_Resource_Frontcontroller</full_name>
      <extends>\Zend_Application_Resource_ResourceAbstract</extends>
      <docblock line="29">
        <description><![CDATA[Front Controller resource]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="29" name="category" description="Zend"/>
        <tag line="29" name="package" description="Zend_Application"/>
        <tag line="29" name="subpackage" description="Resource"/>
        <tag line="29" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="29" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="43" package="Default">
        <name>$_front</name>
        <default><![CDATA[]]></default>
        <docblock line="40">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="40" name="var" description="" type="\Zend_Controller_Front">
            <type by_reference="false">\Zend_Controller_Front</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="50" package="Default">
        <name>init</name>
        <type>function</type>
        <docblock line="45">
          <description><![CDATA[Initialize Front Controller]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="45" name="return" description="" type="\Zend_Controller_Front">
            <type by_reference="false">\Zend_Controller_Front</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="156" package="Default">
        <name>getFrontController</name>
        <type>function</type>
        <docblock line="151">
          <description><![CDATA[Retrieve front controller instance]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="151" name="return" description="" type="\Zend_Controller_Front">
            <type by_reference="false">\Zend_Controller_Front</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Application/Resource/Mail.php" hash="f4659eb382dc7eaa18adb2c0c875b4d6" package="Zend\Application\Resource">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Application"/>
      <tag line="2" name="subpackage" description="Resource"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Mail.php 24110 2011-06-04 01:10:23Z freak $"/>
    </docblock>
    <parse_markers>
      <critical line="41" code="50019">No short description for property $_transport</critical>
      <error line="46" code="50010">No DocBlock was found for method init()</error>
      <error line="50" code="50012">No short description for method getMail()</error>
      <error line="84" code="50010">No DocBlock was found for method _setDefaults()</error>
      <error line="103" code="50010">No DocBlock was found for method _setupTransport()</error>
    </parse_markers>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Application/Resource/ResourceAbstract.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Application_Resource_ResourceAbstract" refers="\Zend_Application_Resource_ResourceAbstract"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="38" package="Zend\Application\Resource">
      <name>Zend_Application_Resource_Mail</name>
      <full_name>\Zend_Application_Resource_Mail</full_name>
      <extends>\Zend_Application_Resource_ResourceAbstract</extends>
      <docblock line="28">
        <description><![CDATA[Resource for setting up Mail Transport and default From & ReplyTo addresses]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="28" name="uses" description="\Zend_Application_Resource_ResourceAbstract" refers="\Zend_Application_Resource_ResourceAbstract"/>
        <tag line="28" name="category" description="Zend"/>
        <tag line="28" name="package" description="Zend_Application"/>
        <tag line="28" name="subpackage" description="Resource"/>
        <tag line="28" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="28" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="44" package="Default">
        <name>$_transport</name>
        <default><![CDATA[]]></default>
        <docblock line="41">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="41" name="var" description="" type="\Zend_Mail_Transport_Abstract">
            <type by_reference="false">\Zend_Mail_Transport_Abstract</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="46">
        <name>init</name>
        <type>function</type>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="54" package="Default">
        <name>getMail</name>
        <type>function</type>
        <docblock line="50">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="50" name="return" description="" type="\Zend_Mail_Transport_Abstract|null">
            <type by_reference="false">\Zend_Mail_Transport_Abstract</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="84">
        <name>_setDefaults</name>
        <type>function</type>
        <argument line="84">
          <name>$type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="103">
        <name>_setupTransport</name>
        <type>function</type>
        <argument line="103">
          <name>$options</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Application/Resource/Session.php" hash="3d4efca3c885d5a263797e11dd23b6b6" package="Zend\Application\Resource">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Application"/>
      <tag line="2" name="subpackage" description="Resource"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Session.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <error line="90" code="50012">No short description for method _hasSaveHandler()</error>
    </parse_markers>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Application/Resource/ResourceAbstract.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Application_Resource_ResourceAbstract" refers="\Zend_Application_Resource_ResourceAbstract"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="39" package="Zend\Application\Resource">
      <name>Zend_Application_Resource_Session</name>
      <full_name>\Zend_Application_Resource_Session</full_name>
      <extends>\Zend_Application_Resource_ResourceAbstract</extends>
      <docblock line="29">
        <description><![CDATA[Resource for setting session options]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="29" name="uses" description="\Zend_Application_Resource_ResourceAbstract" refers="\Zend_Application_Resource_ResourceAbstract"/>
        <tag line="29" name="category" description="Zend"/>
        <tag line="29" name="package" description="Zend_Application"/>
        <tag line="29" name="subpackage" description="Resource"/>
        <tag line="29" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="29" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="46" package="Default">
        <name>$_saveHandler</name>
        <default><![CDATA[null]]></default>
        <docblock line="41">
          <description><![CDATA[Save handler to use]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="41" name="var" description="" type="\Zend_Session_SaveHandler_Interface">
            <type by_reference="false">\Zend_Session_SaveHandler_Interface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="55" package="Default">
        <name>setSaveHandler</name>
        <type>function</type>
        <docblock line="48">
          <description><![CDATA[Set session save handler]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="48" name="param" description="" type="array|string|\Zend_Session_SaveHandler_Interface" variable="$saveHandler">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
            <type by_reference="false">\Zend_Session_SaveHandler_Interface</type>
          </tag>
          <tag line="48" name="return" description="" type="\Zend_Application_Resource_Session">
            <type by_reference="false">\Zend_Application_Resource_Session</type>
          </tag>
          <tag line="48" name="throws" description="When $saveHandler is no valid save handler" type="\Zend_Application_Resource_Exception">
            <type by_reference="false">\Zend_Application_Resource_Exception</type>
          </tag>
        </docblock>
        <argument line="55">
          <name>$saveHandler</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="66" package="Default">
        <name>getSaveHandler</name>
        <type>function</type>
        <docblock line="61">
          <description><![CDATA[Get session save handler]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="61" name="return" description="" type="\Zend_Session_SaveHandler_Interface">
            <type by_reference="false">\Zend_Session_SaveHandler_Interface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="93" package="Default">
        <name>_hasSaveHandler</name>
        <type>function</type>
        <docblock line="90">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="90" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="103" package="Default">
        <name>init</name>
        <type>function</type>
        <docblock line="98">
          <description><![CDATA[Defined by Zend_Application_Resource_Resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="98" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Application/Resource/Resource.php" hash="d9632192feb1c563e7bd61a82a5c9af9" package="Zend\Application\Resource">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Application"/>
      <tag line="2" name="subpackage" description="Resource"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Resource.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <interface namespace="default" line="32" package="Zend\Application\Resource">
      <name>Zend_Application_Resource_Resource</name>
      <full_name>\Zend_Application_Resource_Resource</full_name>
      <extends/>
      <docblock line="23">
        <description><![CDATA[Interface for bootstrap resources]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="category" description="Zend"/>
        <tag line="23" name="package" description="Zend_Application"/>
        <tag line="23" name="subpackage" description="Resource"/>
        <tag line="23" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="23" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="42" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="34">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[<p>Must take an optional single argument, $options.</p>]]></long-description>
          <tag line="34" name="param" description="" type="mixed" variable="$options">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="34" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="42">
          <name>$options</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="50" package="Default">
        <name>setBootstrap</name>
        <type>function</type>
        <docblock line="44">
          <description><![CDATA[Set the bootstrap to which the resource is attached]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="44" name="param" description="" type="\Zend_Application_Bootstrap_Bootstrapper" variable="$bootstrap">
            <type by_reference="false">\Zend_Application_Bootstrap_Bootstrapper</type>
          </tag>
          <tag line="44" name="return" description="" type="\Zend_Application_Resource_Resource">
            <type by_reference="false">\Zend_Application_Resource_Resource</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$bootstrap</name>
          <default><![CDATA[]]></default>
          <type>Zend_Application_Bootstrap_Bootstrapper</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="57" package="Default">
        <name>getBootstrap</name>
        <type>function</type>
        <docblock line="52">
          <description><![CDATA[Retrieve the bootstrap to which the resource is attached]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="52" name="return" description="" type="\Zend_Application_Bootstrap_Bootstrapper">
            <type by_reference="false">\Zend_Application_Bootstrap_Bootstrapper</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="65" package="Default">
        <name>setOptions</name>
        <type>function</type>
        <docblock line="59">
          <description><![CDATA[Set resource options]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="59" name="param" description="" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="59" name="return" description="" type="\Zend_Application_Resource_Resource">
            <type by_reference="false">\Zend_Application_Resource_Resource</type>
          </tag>
        </docblock>
        <argument line="65">
          <name>$options</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="72" package="Default">
        <name>getOptions</name>
        <type>function</type>
        <docblock line="67">
          <description><![CDATA[Retrieve resource options]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="67" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="79" package="Default">
        <name>init</name>
        <type>function</type>
        <docblock line="74">
          <description><![CDATA[Strategy pattern: initialize resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="74" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
    </interface>
  </file>
  <file path="Zend/Application/Resource/Log.php" hash="c257ace4b36a8c085db69ba17df4089c" package="Zend\Application\Resource">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Application"/>
      <tag line="2" name="subpackage" description="Resource"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Log.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="42" code="50019">No short description for property $_log</critical>
      <error line="69" code="50010">No DocBlock was found for method getLog()</error>
    </parse_markers>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Application/Resource/ResourceAbstract.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Application_Resource_ResourceAbstract" refers="\Zend_Application_Resource_ResourceAbstract"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="39" package="Zend\Application\Resource">
      <name>Zend_Application_Resource_Log</name>
      <full_name>\Zend_Application_Resource_Log</full_name>
      <extends>\Zend_Application_Resource_ResourceAbstract</extends>
      <docblock line="29">
        <description><![CDATA[Resource for initializing the locale]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="29" name="uses" description="\Zend_Application_Resource_ResourceAbstract" refers="\Zend_Application_Resource_ResourceAbstract"/>
        <tag line="29" name="category" description="Zend"/>
        <tag line="29" name="package" description="Zend_Application"/>
        <tag line="29" name="subpackage" description="Resource"/>
        <tag line="29" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="29" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="45" package="Default">
        <name>$_log</name>
        <default><![CDATA[]]></default>
        <docblock line="42">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="42" name="var" description="" type="\Zend_Log">
            <type by_reference="false">\Zend_Log</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="52" package="Default">
        <name>init</name>
        <type>function</type>
        <docblock line="47">
          <description><![CDATA[Defined by Zend_Application_Resource_Resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="47" name="return" description="" type="\Zend_Log">
            <type by_reference="false">\Zend_Log</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="63" package="Default">
        <name>setLog</name>
        <type>function</type>
        <docblock line="57">
          <description><![CDATA[Attach logger]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="57" name="param" description="" type="\Zend_Log" variable="$log">
            <type by_reference="false">\Zend_Log</type>
          </tag>
          <tag line="57" name="return" description="" type="\Zend_Application_Resource_Log">
            <type by_reference="false">\Zend_Application_Resource_Log</type>
          </tag>
        </docblock>
        <argument line="63">
          <name>$log</name>
          <default><![CDATA[]]></default>
          <type>Zend_Log</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="69">
        <name>getLog</name>
        <type>function</type>
      </method>
    </class>
  </file>
  <file path="Zend/Application/Resource/Navigation.php" hash="bcc5bc754a68999f7ab25f132f98015f" package="Zend\Application\Resource">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Application"/>
      <tag line="2" name="subpackage" description="Resource"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Navigation.php 24114 2011-06-04 01:51:02Z freak $"/>
    </docblock>
    <parse_markers>
      <critical line="45" code="50019">No short description for property $_container</critical>
    </parse_markers>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Application/Resource/ResourceAbstract.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Application_Resource_ResourceAbstract" refers="\Zend_Application_Resource_ResourceAbstract"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="40" package="Zend\Application\Resource">
      <name>Zend_Application_Resource_Navigation</name>
      <full_name>\Zend_Application_Resource_Navigation</full_name>
      <extends>\Zend_Application_Resource_ResourceAbstract</extends>
      <docblock line="29">
        <description><![CDATA[Resource for setting navigation structure]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="29" name="uses" description="\Zend_Application_Resource_ResourceAbstract" refers="\Zend_Application_Resource_ResourceAbstract"/>
        <tag line="29" name="category" description="Zend"/>
        <tag line="29" name="package" description="Zend_Application"/>
        <tag line="29" name="subpackage" description="Resource"/>
        <tag line="29" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="29" name="author" description="Dolf Schimmel"/>
        <tag line="29" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <constant namespace="default" line="43">
        <name>DEFAULT_REGISTRY_KEY</name>
        <value><![CDATA['Zend_Navigation']]></value>
      </constant>
      <property final="false" static="false" visibility="protected" line="48" package="Default">
        <name>$_container</name>
        <default><![CDATA[]]></default>
        <docblock line="45">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="45" name="var" description="" type="\Zend_Navigation">
            <type by_reference="false">\Zend_Navigation</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="55" package="Default">
        <name>init</name>
        <type>function</type>
        <docblock line="50">
          <description><![CDATA[Defined by Zend_Application_Resource_Resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="50" name="return" description="" type="\Zend_Navigation">
            <type by_reference="false">\Zend_Navigation</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="77" package="Default">
        <name>store</name>
        <type>function</type>
        <docblock line="72">
          <description><![CDATA[Stores navigation container in registry or Navigation view helper]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="72" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="93" package="Default">
        <name>_storeRegistry</name>
        <type>function</type>
        <docblock line="88">
          <description><![CDATA[Stores navigation container in the registry]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="88" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="112" package="Default">
        <name>_storeHelper</name>
        <type>function</type>
        <docblock line="107">
          <description><![CDATA[Stores navigation container in the Navigation helper]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="107" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="124" package="Default">
        <name>getContainer</name>
        <type>function</type>
        <docblock line="119">
          <description><![CDATA[Returns navigation container]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="119" name="return" description="" type="\Zend_Navigation">
            <type by_reference="false">\Zend_Navigation</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Application/Resource/ResourceAbstract.php" hash="78851b4d293939f0eb57acac32fef21c" package="Zend\Application\Resource">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Application"/>
      <tag line="2" name="subpackage" description="Resource"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: ResourceAbstract.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Application/Resource/Resource.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Application_Resource_Resource" refers="\Zend_Application_Resource_Resource"/>
      </docblock>
    </include>
    <class final="false" abstract="true" namespace="default" line="38" package="Zend\Application\Resource">
      <name>Zend_Application_Resource_ResourceAbstract</name>
      <full_name>\Zend_Application_Resource_ResourceAbstract</full_name>
      <extends/>
      <extends>\Zend_Application_Resource_Resource</extends>
      <docblock line="28">
        <description><![CDATA[Abstract class for bootstrap resources]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="28" name="uses" description="\Zend_Application_Resource_Resource" refers="\Zend_Application_Resource_Resource"/>
        <tag line="28" name="category" description="Zend"/>
        <tag line="28" name="package" description="Zend_Application"/>
        <tag line="28" name="subpackage" description="Resource"/>
        <tag line="28" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="28" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="45" package="Default">
        <name>$_bootstrap</name>
        <default><![CDATA[]]></default>
        <docblock line="40">
          <description><![CDATA[Parent bootstrap]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="40" name="var" description="" type="\Zend_Application_Bootstrap_Bootstrapper">
            <type by_reference="false">\Zend_Application_Bootstrap_Bootstrapper</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="52" package="Default">
        <name>$_options</name>
        <default><![CDATA[array()]]></default>
        <docblock line="47">
          <description><![CDATA[Options for the resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="47" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="59" package="Default">
        <name>$_skipOptions</name>
        <default><![CDATA[array(
        'options',
        'config',
    )]]></default>
        <docblock line="54">
          <description><![CDATA[Option keys to skip when calling setOptions()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="54" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="69" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="64">
          <description><![CDATA[Create a instance with options]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="64" name="param" description="" type="mixed" variable="$options">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="69">
          <name>$options</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="84" package="Default">
        <name>setOptions</name>
        <type>function</type>
        <docblock line="78">
          <description><![CDATA[Set options from array]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="78" name="param" description="Configuration for resource" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="78" name="return" description="" type="\Zend_Application_Resource_ResourceAbstract">
            <type by_reference="false">\Zend_Application_Resource_ResourceAbstract</type>
          </tag>
        </docblock>
        <argument line="84">
          <name>$options</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="112" package="Default">
        <name>getOptions</name>
        <type>function</type>
        <docblock line="107">
          <description><![CDATA[Retrieve resource options]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="107" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="124" package="Default">
        <name>mergeOptions</name>
        <type>function</type>
        <docblock line="117">
          <description><![CDATA[Merge options recursively]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="117" name="param" description="" type="array" variable="$array1">
            <type by_reference="false">array</type>
          </tag>
          <tag line="117" name="param" description="" type="mixed" variable="$array2">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="117" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="124">
          <name>$array1</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
        <argument line="124">
          <name>$array2</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="146" package="Default">
        <name>setBootstrap</name>
        <type>function</type>
        <docblock line="140">
          <description><![CDATA[Set the bootstrap to which the resource is attached]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="140" name="param" description="" type="\Zend_Application_Bootstrap_Bootstrapper" variable="$bootstrap">
            <type by_reference="false">\Zend_Application_Bootstrap_Bootstrapper</type>
          </tag>
          <tag line="140" name="return" description="" type="\Zend_Application_Resource_Resource">
            <type by_reference="false">\Zend_Application_Resource_Resource</type>
          </tag>
        </docblock>
        <argument line="146">
          <name>$bootstrap</name>
          <default><![CDATA[]]></default>
          <type>Zend_Application_Bootstrap_Bootstrapper</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="157" package="Default">
        <name>getBootstrap</name>
        <type>function</type>
        <docblock line="152">
          <description><![CDATA[Retrieve the bootstrap to which the resource is attached]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="152" name="return" description="" type="null|\Zend_Application_Bootstrap_Bootstrapper">
            <type by_reference="false">null</type>
            <type by_reference="false">\Zend_Application_Bootstrap_Bootstrapper</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Application/Resource/Useragent.php" hash="c21975e81137c9e1c0549b3b879f650d" package="Zend\Application\Resource">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Application"/>
      <tag line="2" name="subpackage" description="Resource"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
    </docblock>
    <parse_markers>
      <critical line="31" code="50019">No short description for property $_userAgent</critical>
      <critical line="22" code="50005">No short description for class Zend_Application_Resource_UserAgent</critical>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="29" package="Zend\Application\Resource">
      <name>Zend_Application_Resource_UserAgent</name>
      <full_name>\Zend_Application_Resource_UserAgent</full_name>
      <extends>\Zend_Application_Resource_ResourceAbstract</extends>
      <docblock line="22">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="22" name="category" description="Zend"/>
        <tag line="22" name="package" description="Zend_Application"/>
        <tag line="22" name="subpackage" description="Resource"/>
        <tag line="22" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="22" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="34" package="Default">
        <name>$_userAgent</name>
        <default><![CDATA[]]></default>
        <docblock line="31">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="31" name="var" description="" type="\Zend_Http_UserAgent">
            <type by_reference="false">\Zend_Http_UserAgent</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="41" package="Default">
        <name>init</name>
        <type>function</type>
        <docblock line="36">
          <description><![CDATA[Intialize resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="36" name="return" description="" type="\Zend_Http_UserAgent">
            <type by_reference="false">\Zend_Http_UserAgent</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="63" package="Default">
        <name>getUserAgent</name>
        <type>function</type>
        <docblock line="58">
          <description><![CDATA[Get UserAgent instance]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="58" name="return" description="" type="\Zend_Http_UserAgent">
            <type by_reference="false">\Zend_Http_UserAgent</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Application/Resource/Layout.php" hash="e724ac6fe03463cdc8df81ab9c58076f" package="Zend\Application\Resource">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Application"/>
      <tag line="2" name="subpackage" description="Resource"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Layout.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="42" code="50019">No short description for property $_layout</critical>
    </parse_markers>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Application/Resource/ResourceAbstract.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Application_Resource_ResourceAbstract" refers="\Zend_Application_Resource_ResourceAbstract"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="39" package="Zend\Application\Resource">
      <name>Zend_Application_Resource_Layout</name>
      <full_name>\Zend_Application_Resource_Layout</full_name>
      <extends>\Zend_Application_Resource_ResourceAbstract</extends>
      <docblock line="29">
        <description><![CDATA[Resource for settings layout options]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="29" name="uses" description="\Zend_Application_Resource_ResourceAbstract" refers="\Zend_Application_Resource_ResourceAbstract"/>
        <tag line="29" name="category" description="Zend"/>
        <tag line="29" name="package" description="Zend_Application"/>
        <tag line="29" name="subpackage" description="Resource"/>
        <tag line="29" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="29" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="45" package="Default">
        <name>$_layout</name>
        <default><![CDATA[]]></default>
        <docblock line="42">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="42" name="var" description="" type="\Zend_Layout">
            <type by_reference="false">\Zend_Layout</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="52" package="Default">
        <name>init</name>
        <type>function</type>
        <docblock line="47">
          <description><![CDATA[Defined by Zend_Application_Resource_Resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="47" name="return" description="" type="\Zend_Layout">
            <type by_reference="false">\Zend_Layout</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="63" package="Default">
        <name>getLayout</name>
        <type>function</type>
        <docblock line="58">
          <description><![CDATA[Retrieve layout object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="58" name="return" description="" type="\Zend_Layout">
            <type by_reference="false">\Zend_Layout</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Application/Resource/Locale.php" hash="e1cc3c9900c43f968de305a18220ccfd" package="Zend\Application\Resource">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Application"/>
      <tag line="2" name="subpackage" description="Resource"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Locale.php 23784 2011-03-01 21:55:30Z intiilapa $"/>
    </docblock>
    <parse_markers>
      <critical line="44" code="50019">No short description for property $_locale</critical>
    </parse_markers>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Application/Resource/ResourceAbstract.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Application_Resource_ResourceAbstract" refers="\Zend_Application_Resource_ResourceAbstract"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="39" package="Zend\Application\Resource">
      <name>Zend_Application_Resource_Locale</name>
      <full_name>\Zend_Application_Resource_Locale</full_name>
      <extends>\Zend_Application_Resource_ResourceAbstract</extends>
      <docblock line="29">
        <description><![CDATA[Resource for initializing the locale]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="29" name="uses" description="\Zend_Application_Resource_Base" refers="\Zend_Application_Resource_Base"/>
        <tag line="29" name="category" description="Zend"/>
        <tag line="29" name="package" description="Zend_Application"/>
        <tag line="29" name="subpackage" description="Resource"/>
        <tag line="29" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="29" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <constant namespace="default" line="42">
        <name>DEFAULT_REGISTRY_KEY</name>
        <value><![CDATA['Zend_Locale']]></value>
      </constant>
      <property final="false" static="false" visibility="protected" line="47" package="Default">
        <name>$_locale</name>
        <default><![CDATA[]]></default>
        <docblock line="44">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="44" name="var" description="" type="\Zend_Locale">
            <type by_reference="false">\Zend_Locale</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="54" package="Default">
        <name>init</name>
        <type>function</type>
        <docblock line="49">
          <description><![CDATA[Defined by Zend_Application_Resource_Resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="49" name="return" description="" type="\Zend_Locale">
            <type by_reference="false">\Zend_Locale</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="64" package="Default">
        <name>getLocale</name>
        <type>function</type>
        <docblock line="59">
          <description><![CDATA[Retrieve locale object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="59" name="return" description="" type="\Zend_Locale">
            <type by_reference="false">\Zend_Locale</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="96" package="Default">
        <name>setCache</name>
        <type>function</type>
        <docblock line="90">
          <description><![CDATA[Set the cache]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="90" name="param" description="" type="string|\Zend_Cache_Core" variable="$cache">
            <type by_reference="false">string</type>
            <type by_reference="false">\Zend_Cache_Core</type>
          </tag>
          <tag line="90" name="return" description="" type="\Zend_Application_Resource_Locale">
            <type by_reference="false">\Zend_Application_Resource_Locale</type>
          </tag>
        </docblock>
        <argument line="96">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Application/Resource/Cachemanager.php" hash="1ad485158c892a7c66d58afb545ece98" package="Zend\Application\Resource">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Application"/>
      <tag line="2" name="subpackage" description="Resource"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Cachemanager.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="36" code="50019">No short description for property $_manager</critical>
    </parse_markers>
    <include line="23" type="Require Once" package="Zend\Application\Resource">
      <name>Zend/Application/Resource/ResourceAbstract.php</name>
      <docblock line="2">
        <description><![CDATA[Zend Framework]]></description>
        <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
        <tag line="2" name="category" description="Zend"/>
        <tag line="2" name="package" description="Zend_Application"/>
        <tag line="2" name="subpackage" description="Resource"/>
        <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
        <tag line="2" name="version" description="$Id: Cachemanager.php 23775 2011-03-01 17:25:24Z ralph $"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="34" package="Zend\Application\Resource">
      <name>Zend_Application_Resource_Cachemanager</name>
      <full_name>\Zend_Application_Resource_Cachemanager</full_name>
      <extends>\Zend_Application_Resource_ResourceAbstract</extends>
      <docblock line="25">
        <description><![CDATA[Cache Manager resource]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="25" name="category" description="Zend"/>
        <tag line="25" name="package" description="Zend_Application"/>
        <tag line="25" name="subpackage" description="Resource"/>
        <tag line="25" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="25" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="39" package="Default">
        <name>$_manager</name>
        <default><![CDATA[null]]></default>
        <docblock line="36">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="36" name="var" description="" type="\Zend_Cache_Manager">
            <type by_reference="false">\Zend_Cache_Manager</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="46" package="Default">
        <name>init</name>
        <type>function</type>
        <docblock line="41">
          <description><![CDATA[Initialize Cache_Manager]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="41" name="return" description="" type="\Zend_Cache_Manager">
            <type by_reference="false">\Zend_Cache_Manager</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="56" package="Default">
        <name>getCacheManager</name>
        <type>function</type>
        <docblock line="51">
          <description><![CDATA[Retrieve Zend_Cache_Manager instance]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="51" name="return" description="" type="\Zend_Cache_Manager">
            <type by_reference="false">\Zend_Cache_Manager</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Application/Resource/Modules.php" hash="7b48d5c4de922a4388edb1720698c3a3" package="Zend\Application\Resource">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Application"/>
      <tag line="2" name="subpackage" description="Resource"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Modules.php 24227 2011-07-12 19:41:46Z matthew $"/>
    </docblock>
    <parse_markers>
      <critical line="40" code="50019">No short description for property $_bootstraps</critical>
      <error line="117" code="50010">No DocBlock was found for method bootstrapBootstraps()</error>
    </parse_markers>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Application/Resource/ResourceAbstract.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Application_Resource_ResourceAbstract" refers="\Zend_Application_Resource_ResourceAbstract"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="38" package="Zend\Application\Resource">
      <name>Zend_Application_Resource_Modules</name>
      <full_name>\Zend_Application_Resource_Modules</full_name>
      <extends>\Zend_Application_Resource_ResourceAbstract</extends>
      <docblock line="29">
        <description><![CDATA[Module bootstrapping resource]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="29" name="category" description="Zend"/>
        <tag line="29" name="package" description="Zend_Application"/>
        <tag line="29" name="subpackage" description="Resource"/>
        <tag line="29" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="29" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="43" package="Default">
        <name>$_bootstraps</name>
        <default><![CDATA[]]></default>
        <docblock line="40">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="40" name="var" description="" type="\ArrayObject">
            <type by_reference="false">\ArrayObject</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="51" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="45">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="45" name="param" description="" type="mixed" variable="$options">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="45" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="51">
          <name>$options</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="63" package="Default">
        <name>init</name>
        <type>function</type>
        <docblock line="57">
          <description><![CDATA[Initialize modules]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="57" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="57" name="throws" description="When bootstrap class was not found" type="\Zend_Application_Resource_Exception">
            <type by_reference="false">\Zend_Application_Resource_Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="117">
        <name>bootstrapBootstraps</name>
        <type>function</type>
        <argument line="117">
          <name>$bootstraps</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="136" package="Default">
        <name>getExecutedBootstraps</name>
        <type>function</type>
        <docblock line="131">
          <description><![CDATA[Get bootstraps that have been run]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="131" name="return" description="" type="\ArrayObject">
            <type by_reference="false">\ArrayObject</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="147" package="Default">
        <name>_formatModuleName</name>
        <type>function</type>
        <docblock line="141">
          <description><![CDATA[Format a module name to the module class prefix]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="141" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="141" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="147">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Cache/Core.php" hash="a15a308d9c33856442af3d366713b12f" package="Zend\Cache">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Cache"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Core.php 23800 2011-03-10 20:52:08Z mabe $"/>
    </docblock>
    <parse_markers>
      <error line="729" code="50015">Argument $priority is missing from the Docblock of _log()</error>
      <critical line="23" code="50005">No short description for class Zend_Cache_Core</critical>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="28" package="Zend\Cache">
      <name>Zend_Cache_Core</name>
      <full_name>\Zend_Cache_Core</full_name>
      <extends/>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="package" description="Zend_Cache"/>
        <tag line="23" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="23" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <constant namespace="default" line="33" package="Default">
        <name>BACKEND_NOT_SUPPORTS_TAG</name>
        <value><![CDATA['tags are not supported by the current backend']]></value>
        <docblock line="30">
          <description><![CDATA[Messages]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="default" line="34">
        <name>BACKEND_NOT_IMPLEMENTS_EXTENDED_IF</name>
        <value><![CDATA['Current backend doesn\'t implement the Zend_Cache_Backend_ExtendedInterface, so this method is not available']]></value>
      </constant>
      <property final="false" static="false" visibility="protected" line="41" package="Default">
        <name>$_backend</name>
        <default><![CDATA[null]]></default>
        <docblock line="36">
          <description><![CDATA[Backend Object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="36" name="var" description="" type="\Zend_Cache_Backend_Interface">
            <type by_reference="false">\Zend_Cache_Backend_Interface</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="83" package="Default">
        <name>$_options</name>
        <default><![CDATA[array(
        'write_control'             => true,
        'caching'                   => true,
        'cache_id_prefix'           => null,
        'automatic_serialization'   => false,
        'automatic_cleaning_factor' => 10,
        'lifetime'                  => 3600,
        'logging'                   => false,
        'logger'                    => null,
        'ignore_user_abort'         => false
    )]]></default>
        <docblock line="43">
          <description><![CDATA[Available options]]></description>
          <long-description><![CDATA[<p>====> (boolean) write_control :
- Enable / disable write control (the cache is read just after writing to detect corrupt entries)
- Enable write control will lightly slow the cache writing but not the cache reading
Write control can detect some corrupt cache files but maybe it's not a perfect control</p>

<p>====> (boolean) caching :
- Enable / disable caching
(can be very useful for the debug of cached scripts)</p>

<p>=====> (string) cache_id_prefix :
- prefix for cache ids (namespace)</p>

<p>====> (boolean) automatic_serialization :
- Enable / disable automatic serialization
- It can be used to save directly datas which aren't strings (but it's slower)</p>

<p>====> (int) automatic_cleaning_factor :
- Disable / Tune the automatic cleaning process
- The automatic cleaning process destroy too old (for the given life time)
  cache files when a new cache file is written :
    0               => no automatic cache cleaning
    1               => systematic cache cleaning
    x (integer) > 1 => automatic cleaning randomly 1 times on x cache write</p>

<p>====> (int) lifetime :
- Cache lifetime (in seconds)
- If null, the cache is valid forever.</p>

<p>====> (boolean) logging :
- If set to true, logging is activated (but the system is slower)</p>

<p>====> (boolean) ignore_user_abort
- If set to true, the core will set the ignore_user_abort PHP flag inside the
  save() method to avoid cache corruptions in some cases (default false)</p>]]></long-description>
          <tag line="43" name="var" description="available options" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="100" package="Default">
        <name>$_directivesList</name>
        <default><![CDATA[array('lifetime', 'logging', 'logger')]]></default>
        <docblock line="95">
          <description><![CDATA[Array of options which have to be transfered to backend]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="95" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="107" package="Default">
        <name>$_specificOptions</name>
        <default><![CDATA[array()]]></default>
        <docblock line="102">
          <description><![CDATA[Not used for the core, just a sort a hint to get a common setOption() method (for the core and for frontends)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="102" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="114" package="Default">
        <name>$_lastId</name>
        <default><![CDATA[null]]></default>
        <docblock line="109">
          <description><![CDATA[Last used cache id]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="109" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="121" package="Default">
        <name>$_extendedBackend</name>
        <default><![CDATA[false]]></default>
        <docblock line="116">
          <description><![CDATA[True if the backend implements Zend_Cache_Backend_ExtendedInterface]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="116" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="128" package="Default">
        <name>$_backendCapabilities</name>
        <default><![CDATA[array()]]></default>
        <docblock line="123">
          <description><![CDATA[Array of capabilities of the backend (only if it implements Zend_Cache_Backend_ExtendedInterface)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="123" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="137" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="130">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="130" name="param" description="Associative array of options or Zend_Config instance" type="array|\Zend_Config" variable="$options">
            <type by_reference="false">array</type>
            <type by_reference="false">\Zend_Config</type>
          </tag>
          <tag line="130" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="130" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="137">
          <name>$options</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="158" package="Default">
        <name>setConfig</name>
        <type>function</type>
        <docblock line="152">
          <description><![CDATA[Set options using an instance of type Zend_Config]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="152" name="param" description="" type="\Zend_Config" variable="$config">
            <type by_reference="false">\Zend_Config</type>
          </tag>
          <tag line="152" name="return" description="" type="\Zend_Cache_Core">
            <type by_reference="false">\Zend_Cache_Core</type>
          </tag>
        </docblock>
        <argument line="158">
          <name>$config</name>
          <default><![CDATA[]]></default>
          <type>Zend_Config</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="174" package="Default">
        <name>setBackend</name>
        <type>function</type>
        <docblock line="167">
          <description><![CDATA[Set the backend]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="167" name="param" description="" type="\Zend_Cache_Backend" variable="$backendObject">
            <type by_reference="false">\Zend_Cache_Backend</type>
          </tag>
          <tag line="167" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="167" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="174">
          <name>$backendObject</name>
          <default><![CDATA[]]></default>
          <type>Zend_Cache_Backend</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="196" package="Default">
        <name>getBackend</name>
        <type>function</type>
        <docblock line="191">
          <description><![CDATA[Returns the backend]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="191" name="return" description="backend object" type="\Zend_Cache_Backend">
            <type by_reference="false">\Zend_Cache_Backend</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="211" package="Default">
        <name>setOption</name>
        <type>function</type>
        <docblock line="201">
          <description><![CDATA[Public frontend to set an option]]></description>
          <long-description><![CDATA[<p>There is an additional validation (relatively to the protected _setOption method)</p>]]></long-description>
          <tag line="201" name="param" description="Name of the option" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="201" name="param" description="Value of the option" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="201" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="201" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="211">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="211">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="236" package="Default">
        <name>getOption</name>
        <type>function</type>
        <docblock line="229">
          <description><![CDATA[Public frontend to get an option value]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="229" name="param" description="Name of the option" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="229" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="229" name="return" description="option value" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="236">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="260" package="Default">
        <name>_setOption</name>
        <type>function</type>
        <docblock line="252">
          <description><![CDATA[Set an option]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="252" name="param" description="Name of the option" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="252" name="param" description="Value of the option" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="252" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="252" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="260">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="260">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="279" package="Default">
        <name>setLifetime</name>
        <type>function</type>
        <docblock line="271">
          <description><![CDATA[Force a new lifetime]]></description>
          <long-description><![CDATA[<p>The new value is set for the core/frontend but for the backend too (directive)</p>]]></long-description>
          <tag line="271" name="param" description="New lifetime (in seconds)" type="int" variable="$newLifetime">
            <type by_reference="false">int</type>
          </tag>
          <tag line="271" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="279">
          <name>$newLifetime</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="295" package="Default">
        <name>load</name>
        <type>function</type>
        <docblock line="287">
          <description><![CDATA[Test if a cache is available for the given id and (if yes) return it (false else)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="287" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="287" name="param" description="If set to true, the cache validity won't be tested" type="boolean" variable="$doNotTestCacheValidity">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="287" name="param" description="Do not serialize (even if automatic_serialization is true) =&gt; for internal use" type="boolean" variable="$doNotUnserialize">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="287" name="return" description="Cached datas" type="mixed|false">
            <type by_reference="false">mixed</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="295">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="295">
          <name>$doNotTestCacheValidity</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
        <argument line="295">
          <name>$doNotUnserialize</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="323" package="Default">
        <name>test</name>
        <type>function</type>
        <docblock line="317">
          <description><![CDATA[Test if a cache is available for the given id]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="317" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="317" name="return" description="Last modified time of cache entry if it is available, false otherwise" type="int|false">
            <type by_reference="false">int</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="323">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="347" package="Default">
        <name>save</name>
        <type>function</type>
        <docblock line="336">
          <description><![CDATA[Save some data in a cache]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="336" name="param" description="Data to put in cache (can be another type than string if automatic_serialization is on)" type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="336" name="param" description="Cache id (if not set, the last cache id will be used)" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="336" name="param" description="Cache tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="336" name="param" description="If != false, set a specific lifetime for this cache record (null =&gt; infinite lifetime)" type="int" variable="$specificLifetime">
            <type by_reference="false">int</type>
          </tag>
          <tag line="336" name="param" description="integer between 0 (very low priority) and 10 (maximum priority) used by some particular backends" type="int" variable="$priority">
            <type by_reference="false">int</type>
          </tag>
          <tag line="336" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="336" name="return" description="True if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="347">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="347">
          <name>$id</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="347">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
        <argument line="347">
          <name>$specificLifetime</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
        <argument line="347">
          <name>$priority</name>
          <default><![CDATA[8]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="420" package="Default">
        <name>remove</name>
        <type>function</type>
        <docblock line="414">
          <description><![CDATA[Remove a cache]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="414" name="param" description="Cache id to remove" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="414" name="return" description="True if ok" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="420">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="450" package="Default">
        <name>clean</name>
        <type>function</type>
        <docblock line="432">
          <description><![CDATA[Clean cache entries]]></description>
          <long-description><![CDATA[<p>Available modes are :
'all' (default)  => remove all cache entries ($tags is not used)
'old'            => remove too old cache entries ($tags is not used)
'matchingTag'    => remove cache entries matching all given tags
                    ($tags can be an array of strings or a single string)
'notMatchingTag' => remove cache entries not matching one of the given tags
                    ($tags can be an array of strings or a single string)
'matchingAnyTag' => remove cache entries matching any given tags
                    ($tags can be an array of strings or a single string)</p>]]></long-description>
          <tag line="432" name="param" description="" type="string" variable="$mode">
            <type by_reference="false">string</type>
          </tag>
          <tag line="432" name="param" description="" type="array|string" variable="$tags">
            <type by_reference="false">array</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="432" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="432" name="return" description="True if ok" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="450">
          <name>$mode</name>
          <default><![CDATA['all']]></default>
          <type/>
        </argument>
        <argument line="450">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="475" package="Default">
        <name>getIdsMatchingTags</name>
        <type>function</type>
        <docblock line="467">
          <description><![CDATA[Return an array of stored cache ids which match given tags]]></description>
          <long-description><![CDATA[<p>In case of multiple tags, a logical AND is made between tags</p>]]></long-description>
          <tag line="467" name="param" description="array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="467" name="return" description="array of matching cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="475">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="508" package="Default">
        <name>getIdsNotMatchingTags</name>
        <type>function</type>
        <docblock line="500">
          <description><![CDATA[Return an array of stored cache ids which don't match given tags]]></description>
          <long-description><![CDATA[<p>In case of multiple tags, a logical OR is made between tags</p>]]></long-description>
          <tag line="500" name="param" description="array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="500" name="return" description="array of not matching cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="508">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="541" package="Default">
        <name>getIdsMatchingAnyTags</name>
        <type>function</type>
        <docblock line="533">
          <description><![CDATA[Return an array of stored cache ids which match any given tags]]></description>
          <long-description><![CDATA[<p>In case of multiple tags, a logical OR is made between tags</p>]]></long-description>
          <tag line="533" name="param" description="array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="533" name="return" description="array of matching any cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="541">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="571" package="Default">
        <name>getIds</name>
        <type>function</type>
        <docblock line="566">
          <description><![CDATA[Return an array of stored cache ids]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="566" name="return" description="array of stored cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="598" package="Default">
        <name>getTags</name>
        <type>function</type>
        <docblock line="593">
          <description><![CDATA[Return an array of stored tags]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="593" name="return" description="array of stored tags (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="614" package="Default">
        <name>getFillingPercentage</name>
        <type>function</type>
        <docblock line="609">
          <description><![CDATA[Return the filling percentage of the backend storage]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="609" name="return" description="integer between 0 and 100" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="633" package="Default">
        <name>getMetadatas</name>
        <type>function</type>
        <docblock line="622">
          <description><![CDATA[Return an array of metadatas for the given cache id]]></description>
          <long-description><![CDATA[<p>The array will include these keys :
- expire : the expire timestamp
- tags : a string array of tags
- mtime : timestamp of last modification time</p>]]></long-description>
          <tag line="622" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="622" name="return" description="array of metadatas (false if the cache id is not found)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="633">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="649" package="Default">
        <name>touch</name>
        <type>function</type>
        <docblock line="642">
          <description><![CDATA[Give (if possible) an extra lifetime to the given cache id]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="642" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="642" name="param" description="" type="int" variable="$extraLifetime">
            <type by_reference="false">int</type>
          </tag>
          <tag line="642" name="return" description="true if ok" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="649">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="649">
          <name>$extraLifetime</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="default" line="669" package="Default">
        <name>_validateIdOrTag</name>
        <type>function</type>
        <docblock line="660">
          <description><![CDATA[Validate a cache id or a tag (security, reliable filenames, reserved prefixes...)]]></description>
          <long-description><![CDATA[<p>Throw an exception if a problem is found</p>]]></long-description>
          <tag line="660" name="param" description="Cache id or tag" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="660" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="660" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="669">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="default" line="691" package="Default">
        <name>_validateTagsArray</name>
        <type>function</type>
        <docblock line="682">
          <description><![CDATA[Validate a tags array (security, reliable filenames, reserved prefixes...)]]></description>
          <long-description><![CDATA[<p>Throw an exception if a problem is found</p>]]></long-description>
          <tag line="682" name="param" description="Array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="682" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="682" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="691">
          <name>$tags</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="710" package="Default">
        <name>_loggerSanity</name>
        <type>function</type>
        <docblock line="702">
          <description><![CDATA[Make sure if we enable logging that the Zend_Log class
is available.]]></description>
          <long-description><![CDATA[<p>Create a default log object if none is set.</p>]]></long-description>
          <tag line="702" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="702" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="736" package="Default">
        <name>_log</name>
        <type>function</type>
        <docblock line="729">
          <description><![CDATA[Log a message at the WARN (4) priority.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="729" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="729" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="729" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="736">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="736">
          <name>$priority</name>
          <default><![CDATA[4]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="756" package="Default">
        <name>_id</name>
        <type>function</type>
        <docblock line="748">
          <description><![CDATA[Make and return a cache id]]></description>
          <long-description><![CDATA[<p>Checks 'cache_id_prefix' and returns new id with prefix or simply the id if null</p>]]></long-description>
          <tag line="748" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="748" name="return" description="Cache id (with or without prefix)" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="756">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Cache/Exception.php" hash="3bc04d7c499789baf9dfdbcf2c0b5d53" package="Zend\Cache">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Cache"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Exception.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="27" code="50005">No short description for class Zend_Cache_Exception</critical>
    </parse_markers>
    <include line="25" type="Require Once" package="Default">
      <name>Zend/Exception.php</name>
      <docblock line="22">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="22" name="see" description="\Zend_Exception" refers="\Zend_Exception"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="32" package="Zend\Cache">
      <name>Zend_Cache_Exception</name>
      <full_name>\Zend_Cache_Exception</full_name>
      <extends>\Zend_Exception</extends>
      <docblock line="27">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="27" name="package" description="Zend_Cache"/>
        <tag line="27" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="27" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
    </class>
  </file>
  <file path="Zend/Cache/Frontend/Output.php" hash="9489b3a78a4470600d25cdaebd498edc" package="Zend\Cache\Zend\Cache\Frontend">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Cache"/>
      <tag line="2" name="subpackage" description="Zend_Cache_Frontend"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Output.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <error line="39" code="50018">No DocBlock was found for property $_idStack</error>
      <critical line="30" code="50005">No short description for class Zend_Cache_Frontend_Output</critical>
    </parse_markers>
    <include line="27" type="Require Once" package="Default">
      <name>Zend/Cache/Core.php</name>
      <docblock line="24">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="24" name="see" description="\Zend_Cache_Core" refers="\Zend_Cache_Core"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="36" package="Zend\Cache\Zend\Cache\Frontend">
      <name>Zend_Cache_Frontend_Output</name>
      <full_name>\Zend_Cache_Frontend_Output</full_name>
      <extends>\Zend_Cache_Core</extends>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="package" description="Zend_Cache"/>
        <tag line="30" name="subpackage" description="Zend_Cache_Frontend"/>
        <tag line="30" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="30" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="39">
        <name>$_idStack</name>
        <default><![CDATA[array()]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="47" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="41">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="41" name="param" description="Associative array of options" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="41" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="47">
          <name>$options</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="61" package="Default">
        <name>start</name>
        <type>function</type>
        <docblock line="53">
          <description><![CDATA[Start the cache]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="53" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="53" name="param" description="If set to true, the cache validity won't be tested" type="boolean" variable="$doNotTestCacheValidity">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="53" name="param" description="If set to true, datas are sent to the browser if the cache is hit (simpy returned else)" type="boolean" variable="$echoData">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="53" name="return" description="True if the cache is hit (false else) with $echoData=true (default) ; string else (datas)" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="61">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="61">
          <name>$doNotTestCacheValidity</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
        <argument line="61">
          <name>$echoData</name>
          <default><![CDATA[true]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="88" package="Default">
        <name>end</name>
        <type>function</type>
        <docblock line="78">
          <description><![CDATA[Stop the cache]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="78" name="param" description="Tags array" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="78" name="param" description="If != false, set a specific lifetime for this cache record (null =&gt; infinite lifetime)" type="int" variable="$specificLifetime">
            <type by_reference="false">int</type>
          </tag>
          <tag line="78" name="param" description="If not null, force written datas with this" type="string" variable="$forcedDatas">
            <type by_reference="false">string</type>
          </tag>
          <tag line="78" name="param" description="If set to true, datas are sent to the browser" type="boolean" variable="$echoData">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="78" name="param" description="integer between 0 (very low priority) and 10 (maximum priority) used by some particular backends" type="int" variable="$priority">
            <type by_reference="false">int</type>
          </tag>
          <tag line="78" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="88">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
        <argument line="88">
          <name>$specificLifetime</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
        <argument line="88">
          <name>$forcedDatas</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="88">
          <name>$echoData</name>
          <default><![CDATA[true]]></default>
          <type/>
        </argument>
        <argument line="88">
          <name>$priority</name>
          <default><![CDATA[8]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Cache/Frontend/Capture.php" hash="8c4c1d7c9660252beb70e882a44e1e50" package="Zend\Cache\Zend\Cache\Frontend">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Cache"/>
      <tag line="2" name="subpackage" description="Zend_Cache_Frontend"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Capture.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <error line="50" code="50018">No DocBlock was found for property $_extension</error>
      <error line="52" code="50015">Argument $tags is missing from the Docblock of start()</error>
      <error line="52" code="50015">Argument $extension is missing from the Docblock of start()</error>
      <critical line="30" code="50005">No short description for class Zend_Cache_Frontend_Capture</critical>
    </parse_markers>
    <include line="27" type="Require Once" package="Default">
      <name>Zend/Cache/Core.php</name>
      <docblock line="24">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="24" name="see" description="\Zend_Cache_Core" refers="\Zend_Cache_Core"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="36" package="Zend\Cache\Zend\Cache\Frontend">
      <name>Zend_Cache_Frontend_Capture</name>
      <full_name>\Zend_Cache_Frontend_Capture</full_name>
      <extends>\Zend_Cache_Core</extends>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="package" description="Zend_Cache"/>
        <tag line="30" name="subpackage" description="Zend_Cache_Frontend"/>
        <tag line="30" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="30" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="42" package="Default">
        <name>$_idStack</name>
        <default><![CDATA[array()]]></default>
        <docblock line="38">
          <description><![CDATA[Page identifiers]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="38" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="48" package="Default">
        <name>$_tags</name>
        <default><![CDATA[array()]]></default>
        <docblock line="44">
          <description><![CDATA[Tags]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="44" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="50">
        <name>$_extension</name>
        <default><![CDATA[null]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="58" package="Default">
        <name>start</name>
        <type>function</type>
        <docblock line="52">
          <description><![CDATA[Start the cache]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="52" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="52" name="return" description="True if the cache is hit (false else) with $echoData=true (default) ; string else (datas)" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="58">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="58">
          <name>$tags</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
        <argument line="58">
          <name>$extension</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="75" package="Default">
        <name>_flush</name>
        <type>function</type>
        <docblock line="68">
          <description><![CDATA[callback for output buffering
(shouldn't really be called manually)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="68" name="param" description="Buffered output" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="68" name="return" description="Data to send to browser" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="75">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Cache/Frontend/Page.php" hash="efcf79b494e8d5a75b327637b92f87c4" package="Zend\Cache\Zend\Cache\Frontend">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Cache"/>
      <tag line="2" name="subpackage" description="Zend_Cache_Frontend"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Page.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <notice line="122" code="50013">Parameter $doNotTestCacheValidity could not be found in __construct()</notice>
      <error line="205" code="50014">Name of argument $regexps does not match with the DocBlock's name $options in _setRegexps()</error>
      <notice line="205" code="50013">Parameter $options could not be found in _setRegexps()</notice>
      <critical line="30" code="50005">No short description for class Zend_Cache_Frontend_Page</critical>
    </parse_markers>
    <include line="27" type="Require Once" package="Default">
      <name>Zend/Cache/Core.php</name>
      <docblock line="24">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="24" name="see" description="\Zend_Cache_Core" refers="\Zend_Cache_Core"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="36" package="Zend\Cache\Zend\Cache\Frontend">
      <name>Zend_Cache_Frontend_Page</name>
      <full_name>\Zend_Cache_Frontend_Page</full_name>
      <extends>\Zend_Cache_Core</extends>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="package" description="Zend_Cache"/>
        <tag line="30" name="subpackage" description="Zend_Cache_Frontend"/>
        <tag line="30" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="30" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="84" package="Default">
        <name>$_specificOptions</name>
        <default><![CDATA[array(
        'http_conditional' => false,
        'debug_header' => false,
        'content_type_memorization' => false,
        'memorize_headers' => array(),
        'default_options' => array(
            'cache_with_get_variables' => false,
            'cache_with_post_variables' => false,
            'cache_with_session_variables' => false,
            'cache_with_files_variables' => false,
            'cache_with_cookie_variables' => false,
            'make_id_with_get_variables' => true,
            'make_id_with_post_variables' => true,
            'make_id_with_session_variables' => true,
            'make_id_with_files_variables' => true,
            'make_id_with_cookie_variables' => true,
            'cache' => true,
            'specific_lifetime' => false,
            'tags' => array(),
            'priority' => null
        ),
        'regexps' => array()
    )]]></default>
        <docblock line="38">
          <description><![CDATA[This frontend specific options]]></description>
          <long-description><![CDATA[<p>====> (boolean) http_conditional :
- if true, http conditional mode is on
WARNING : http_conditional OPTION IS NOT IMPLEMENTED FOR THE MOMENT (TODO)</p>

<p>====> (boolean) debug_header :
- if true, a debug text is added before each cached pages</p>

<p>====> (boolean) content_type_memorization :
- deprecated => use memorize_headers instead
- if the Content-Type header is sent after the cache was started, the
  corresponding value can be memorized and replayed when the cache is hit
  (if false (default), the frontend doesn't take care of Content-Type header)</p>

<p>====> (array) memorize_headers :
- an array of strings corresponding to some HTTP headers name. Listed headers
  will be stored with cache datas and "replayed" when the cache is hit</p>

<p>====> (array) default_options :
- an associative array of default options :
    - (boolean) cache : cache is on by default if true
    - (boolean) cacheWithXXXVariables  (XXXX = 'Get', 'Post', 'Session', 'Files' or 'Cookie') :
      if true,  cache is still on even if there are some variables in this superglobal array
      if false, cache is off if there are some variables in this superglobal array
    - (boolean) makeIdWithXXXVariables (XXXX = 'Get', 'Post', 'Session', 'Files' or 'Cookie') :
      if true, we have to use the content of this superglobal array to make a cache id
      if false, the cache id won't be dependent of the content of this superglobal array
    - (int) specific_lifetime : cache specific lifetime
                               (false => global lifetime is used, null => infinite lifetime,
                                integer => this lifetime is used), this "lifetime" is probably only
                               usefull when used with "regexps" array
    - (array) tags : array of tags (strings)
    - (int) priority : integer between 0 (very low priority) and 10 (maximum priority) used by
                       some particular backends</p>

<p>====> (array) regexps :
- an associative array to set options only for some REQUEST_URI
- keys are (pcre) regexps
- values are associative array with specific options to set if the regexp matchs on $_SERVER['REQUEST_URI']
  (see default_options for the list of available options)
- if several regexps match the $_SERVER['REQUEST_URI'], only the last one will be used</p>]]></long-description>
          <tag line="38" name="var" description="options" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="113" package="Default">
        <name>$_activeOptions</name>
        <default><![CDATA[array()]]></default>
        <docblock line="108">
          <description><![CDATA[Internal array to store some options]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="108" name="var" description="associative array of options" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="120" package="Default">
        <name>$_cancel</name>
        <default><![CDATA[false]]></default>
        <docblock line="115">
          <description><![CDATA[If true, the page won't be cached]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="115" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="130" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="122">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="122" name="param" description="Associative array of options" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="122" name="param" description="If set to true, the cache validity won't be tested" type="boolean" variable="$doNotTestCacheValidity">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="122" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="122" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="130">
          <name>$options</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="163" package="Default">
        <name>_setDefaultOptions</name>
        <type>function</type>
        <docblock line="156">
          <description><![CDATA[Specific setter for the 'default_options' option (with some additional tests)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="156" name="param" description="Associative array" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="156" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="156" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="163">
          <name>$options</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="186" package="Default">
        <name>_setContentTypeMemorization</name>
        <type>function</type>
        <docblock line="179">
          <description><![CDATA[Set the deprecated contentTypeMemorization option]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="179" name="param" description="value" type="boolean" variable="$value">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="179" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="179" name="deprecated" description=""/>
        </docblock>
        <argument line="186">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="212" package="Default">
        <name>_setRegexps</name>
        <type>function</type>
        <docblock line="205">
          <description><![CDATA[Specific setter for the 'regexps' option (with some additional tests)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="205" name="param" description="Associative array" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="205" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="205" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="212">
          <name>$regexps</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="242" package="Default">
        <name>start</name>
        <type>function</type>
        <docblock line="235">
          <description><![CDATA[Start the cache]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="235" name="param" description="(optional) A cache id (if you set a value here, maybe you have to use Output frontend instead)" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="235" name="param" description="For unit testing only !" type="boolean" variable="$doNotDie">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="235" name="return" description="True if the cache is hit (false else)" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="242">
          <name>$id</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
        <argument line="242">
          <name>$doNotDie</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="297" package="Default">
        <name>cancel</name>
        <type>function</type>
        <docblock line="294">
          <description><![CDATA[Cancel the current caching process]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="309" package="Default">
        <name>_flush</name>
        <type>function</type>
        <docblock line="302">
          <description><![CDATA[callback for output buffering
(shouldn't really be called manually)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="302" name="param" description="Buffered output" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="302" name="return" description="Data to send to browser" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="309">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="340" package="Default">
        <name>_makeId</name>
        <type>function</type>
        <docblock line="335">
          <description><![CDATA[Make an id depending on REQUEST_URI and superglobal arrays (depending on options)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="335" name="return" description="a cache id (string), false if the cache should have not to be used" type="mixed|false">
            <type by_reference="false">mixed</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="363" package="Default">
        <name>_makePartialId</name>
        <type>function</type>
        <docblock line="355">
          <description><![CDATA[Make a partial id depending on options]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="355" name="param" description="Superglobal array name" type="string" variable="$arrayName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="355" name="param" description="If true, cache is still on even if there are some variables in the superglobal array" type="bool" variable="$bool1">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="355" name="param" description="If true, we have to use the content of the superglobal array to make a partial id" type="bool" variable="$bool2">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="355" name="return" description="Partial id (string) or false if the cache should have not to be used" type="mixed|false">
            <type by_reference="false">mixed</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="363">
          <name>$arrayName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="363">
          <name>$bool1</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="363">
          <name>$bool2</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Cache/Frontend/Function.php" hash="e69d3c6f152952d8340957f8915d7ff9" package="Zend\Cache\Zend\Cache\Frontend">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Cache"/>
      <tag line="2" name="subpackage" description="Zend_Cache_Frontend"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Function.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <error line="116" code="50015">Argument $callback is missing from the Docblock of _makeId()</error>
      <error line="116" code="50015">Argument $args is missing from the Docblock of _makeId()</error>
      <critical line="30" code="50005">No short description for class Zend_Cache_Frontend_Function</critical>
    </parse_markers>
    <include line="27" type="Require Once" package="Default">
      <name>Zend/Cache/Core.php</name>
      <docblock line="24">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="24" name="see" description="\Zend_Cache_Core" refers="\Zend_Cache_Core"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="36" package="Zend\Cache\Zend\Cache\Frontend">
      <name>Zend_Cache_Frontend_Function</name>
      <full_name>\Zend_Cache_Frontend_Function</full_name>
      <extends>\Zend_Cache_Core</extends>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="package" description="Zend_Cache"/>
        <tag line="30" name="subpackage" description="Zend_Cache_Frontend"/>
        <tag line="30" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="30" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="52" package="Default">
        <name>$_specificOptions</name>
        <default><![CDATA[array(
        'cache_by_default' => true,
        'cached_functions' => array(),
        'non_cached_functions' => array()
    )]]></default>
        <docblock line="38">
          <description><![CDATA[This frontend specific options]]></description>
          <long-description><![CDATA[<p>====> (boolean) cache_by_default :
- if true, function calls will be cached by default</p>

<p>====> (array) cached_functions :
- an array of function names which will be cached (even if cache_by_default = false)</p>

<p>====> (array) non_cached_functions :
- an array of function names which won't be cached (even if cache_by_default = true)</p>]]></long-description>
          <tag line="38" name="var" description="options" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="64" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="58">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="58" name="param" description="Associative array of options" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="58" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="64">
          <name>$options</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="82" package="Default">
        <name>call</name>
        <type>function</type>
        <docblock line="72">
          <description><![CDATA[Main method : call the specified function or get the result from cache]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="72" name="param" description="A valid callback" type="callback" variable="$callback">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="72" name="param" description="Function parameters" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="72" name="param" description="Cache tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="72" name="param" description="If != false, set a specific lifetime for this cache record (null =&gt; infinite lifetime)" type="int" variable="$specificLifetime">
            <type by_reference="false">int</type>
          </tag>
          <tag line="72" name="param" description="integer between 0 (very low priority) and 10 (maximum priority) used by some particular backends" type="int" variable="$priority">
            <type by_reference="false">int</type>
          </tag>
          <tag line="72" name="return" description="Result" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="82">
          <name>$callback</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="82">
          <name>$parameters</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
        <argument line="82">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
        <argument line="82">
          <name>$specificLifetime</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
        <argument line="82">
          <name>$priority</name>
          <default><![CDATA[8]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="121" package="Default">
        <name>_makeId</name>
        <type>function</type>
        <docblock line="116">
          <description><![CDATA[ZF-9970]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="116" name="deprecated" description=""/>
        </docblock>
        <argument line="121">
          <name>$callback</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="121">
          <name>$args</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="134" package="Default">
        <name>makeId</name>
        <type>function</type>
        <docblock line="126">
          <description><![CDATA[Make a cache id from the function name and parameters]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="126" name="param" description="A valid callback" type="callback" variable="$callback">
            <type by_reference="false">callback</type>
          </tag>
          <tag line="126" name="param" description="Function parameters" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="126" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="126" name="return" description="Cache id" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="134">
          <name>$callback</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="134">
          <name>$args</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Cache/Frontend/Class.php" hash="d39f67badf5a481d53eda24a5693be7e" package="Zend\Cache\Zend\Cache\Frontend">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Cache"/>
      <tag line="2" name="subpackage" description="Zend_Cache_Frontend"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Class.php 24032 2011-05-10 21:08:20Z mabe $"/>
    </docblock>
    <parse_markers>
      <error line="243" code="50015">Argument $name is missing from the Docblock of _makeId()</error>
      <error line="243" code="50015">Argument $args is missing from the Docblock of _makeId()</error>
      <critical line="29" code="50005">No short description for class Zend_Cache_Frontend_Class</critical>
    </parse_markers>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Cache/Core.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Cache_Core" refers="\Zend_Cache_Core"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="35" package="Zend\Cache\Zend\Cache\Frontend">
      <name>Zend_Cache_Frontend_Class</name>
      <full_name>\Zend_Cache_Frontend_Class</full_name>
      <extends>\Zend_Cache_Core</extends>
      <docblock line="29">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="29" name="package" description="Zend_Cache"/>
        <tag line="29" name="subpackage" description="Zend_Cache_Frontend"/>
        <tag line="29" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="29" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="55" package="Default">
        <name>$_specificOptions</name>
        <default><![CDATA[array(
        'cached_entity' => null,
        'cache_by_default' => true,
        'cached_methods' => array(),
        'non_cached_methods' => array()
    )]]></default>
        <docblock line="37">
          <description><![CDATA[Available options]]></description>
          <long-description><![CDATA[<p>====> (mixed) cached_entity :
- if set to a class name, we will cache an abstract class and will use only static calls
- if set to an object, we will cache this object methods</p>

<p>====> (boolean) cache_by_default :
- if true, method calls will be cached by default</p>

<p>====> (array) cached_methods :
- an array of method names which will be cached (even if cache_by_default = false)</p>

<p>====> (array) non_cached_methods :
- an array of method names which won't be cached (even if cache_by_default = true)</p>]]></long-description>
          <tag line="37" name="var" description="available options" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="67" package="Default">
        <name>$_tags</name>
        <default><![CDATA[array()]]></default>
        <docblock line="62">
          <description><![CDATA[Tags array]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="62" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="76" package="Default">
        <name>$_specificLifetime</name>
        <default><![CDATA[false]]></default>
        <docblock line="69">
          <description><![CDATA[SpecificLifetime value]]></description>
          <long-description><![CDATA[<p>false => no specific life time</p>]]></long-description>
          <tag line="69" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="83" package="Default">
        <name>$_cachedEntity</name>
        <default><![CDATA[null]]></default>
        <docblock line="78">
          <description><![CDATA[The cached object or the name of the cached abstract class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="78" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="92" package="Default">
        <name>$_cachedEntityLabel</name>
        <default><![CDATA['']]></default>
        <docblock line="85">
          <description><![CDATA[The class name of the cached object or cached abstract class]]></description>
          <long-description><![CDATA[<p>Used to differentiate between different classes with the same method calls.</p>]]></long-description>
          <tag line="85" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="99" package="Default">
        <name>$_priority</name>
        <default><![CDATA[8]]></default>
        <docblock line="94">
          <description><![CDATA[Priority (used by some particular backends)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="94" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="108" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="101">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="101" name="param" description="Associative array of options" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="101" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="101" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="108">
          <name>$options</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="126" package="Default">
        <name>setSpecificLifetime</name>
        <type>function</type>
        <docblock line="120">
          <description><![CDATA[Set a specific life time]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="120" name="param" description="" type="int" variable="$specificLifetime">
            <type by_reference="false">int</type>
          </tag>
          <tag line="120" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="126">
          <name>$specificLifetime</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="136" package="Default">
        <name>setPriority</name>
        <type>function</type>
        <docblock line="131">
          <description><![CDATA[Set the priority (used by some particular backends)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="131" name="param" description="integer between 0 (very low priority) and 10 (maximum priority)" type="int" variable="$priority">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="136">
          <name>$priority</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="151" package="Default">
        <name>setOption</name>
        <type>function</type>
        <docblock line="141">
          <description><![CDATA[Public frontend to set an option]]></description>
          <long-description><![CDATA[<p>Just a wrapper to get a specific behaviour for cached_entity</p>]]></long-description>
          <tag line="141" name="param" description="Name of the option" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="141" name="param" description="Value of the option" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="141" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="141" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="151">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="151">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="168" package="Default">
        <name>setCachedEntity</name>
        <type>function</type>
        <docblock line="160">
          <description><![CDATA[Specific method to set the cachedEntity]]></description>
          <long-description><![CDATA[<p>if set to a class name, we will cache an abstract class and will use only static calls
if set to an object, we will cache this object methods</p>]]></long-description>
          <tag line="160" name="param" description="" type="mixed" variable="$cachedEntity">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="168">
          <name>$cachedEntity</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="189" package="Default">
        <name>setTagsArray</name>
        <type>function</type>
        <docblock line="183">
          <description><![CDATA[Set the cache array]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="183" name="param" description="" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="183" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="189">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="201" package="Default">
        <name>__call</name>
        <type>function</type>
        <docblock line="194">
          <description><![CDATA[Main method : call the specified method or get the result from cache]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="194" name="param" description="Method name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="194" name="param" description="Method parameters" type="array" variable="$parameters">
            <type by_reference="false">array</type>
          </tag>
          <tag line="194" name="return" description="Result" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="201">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="201">
          <name>$parameters</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="248" package="Default">
        <name>_makeId</name>
        <type>function</type>
        <docblock line="243">
          <description><![CDATA[ZF-9970]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="243" name="deprecated" description=""/>
        </docblock>
        <argument line="248">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="248">
          <name>$args</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="260" package="Default">
        <name>makeId</name>
        <type>function</type>
        <docblock line="253">
          <description><![CDATA[Make a cache id from the method name and parameters]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="253" name="param" description="Method name" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="253" name="param" description="Method parameters" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="253" name="return" description="Cache id" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="260">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="260">
          <name>$args</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Cache/Frontend/File.php" hash="42f0b9a2fe9437d97a13404113f90cf5" package="Zend\Cache\Zend\Cache\Frontend">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Cache"/>
      <tag line="2" name="subpackage" description="Zend_Cache_Frontend"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: File.php 24218 2011-07-10 01:22:58Z ramon $"/>
    </docblock>
    <parse_markers>
      <critical line="30" code="50005">No short description for class Zend_Cache_Frontend_File</critical>
    </parse_markers>
    <include line="27" type="Require Once" package="Default">
      <name>Zend/Cache/Core.php</name>
      <docblock line="24">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="24" name="see" description="\Zend_Cache_Core" refers="\Zend_Cache_Core"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="36" package="Zend\Cache\Zend\Cache\Frontend">
      <name>Zend_Cache_Frontend_File</name>
      <full_name>\Zend_Cache_Frontend_File</full_name>
      <extends>\Zend_Cache_Core</extends>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="package" description="Zend_Cache"/>
        <tag line="30" name="subpackage" description="Zend_Cache_Frontend"/>
        <tag line="30" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="30" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <constant namespace="default" line="42" package="Default">
        <name>MODE_AND</name>
        <value><![CDATA['AND']]></value>
        <docblock line="39">
          <description><![CDATA[Consts for master_files_mode]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="default" line="43">
        <name>MODE_OR</name>
        <value><![CDATA['OR']]></value>
      </constant>
      <property final="false" static="false" visibility="protected" line="66" package="Default">
        <name>$_specificOptions</name>
        <default><![CDATA[array(
        'master_file' => null,
        'master_files' => null,
        'master_files_mode' => 'OR',
        'ignore_missing_master_files' => false
    )]]></default>
        <docblock line="45">
          <description><![CDATA[Available options]]></description>
          <long-description><![CDATA[<p>====> (string) master_file :
- a complete path of the master file
- deprecated (see master_files)</p>

<p>====> (array) master_files :
- an array of complete path of master files
- this option has to be set !</p>

<p>====> (string) master_files_mode :
- Zend_Cache_Frontend_File::MODE_AND or Zend_Cache_Frontend_File::MODE_OR
- if MODE_AND, then all master files have to be touched to get a cache invalidation
- if MODE_OR (default), then a single touched master file is enough to get a cache invalidation</p>

<p>====> (boolean) ignore_missing_master_files
- if set to true, missing master files are ignored silently
- if set to false (default), an exception is thrown if there is a missing master file</p>]]></long-description>
          <tag line="45" name="var" description="available options" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="80" package="Default">
        <name>$_masterFile_mtimes</name>
        <default><![CDATA[null]]></default>
        <docblock line="73">
          <description><![CDATA[Master file mtimes]]></description>
          <long-description><![CDATA[<p>Array of int</p>]]></long-description>
          <tag line="73" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="89" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="82">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="82" name="param" description="Associative array of options" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="82" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="82" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="89">
          <name>$options</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="104" package="Default">
        <name>setMasterFiles</name>
        <type>function</type>
        <docblock line="99">
          <description><![CDATA[Change the master_files option]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="99" name="param" description="the complete paths and name of the master files" type="array" variable="$masterFiles">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="104">
          <name>$masterFiles</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="141" package="Default">
        <name>setMasterFile</name>
        <type>function</type>
        <docblock line="133">
          <description><![CDATA[Change the master_file option]]></description>
          <long-description><![CDATA[<p>To keep the compatibility</p>]]></long-description>
          <tag line="133" name="deprecated" description=""/>
          <tag line="133" name="param" description="the complete path and name of the master file" type="string" variable="$masterFile">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="141">
          <name>$masterFile</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="156" package="Default">
        <name>setOption</name>
        <type>function</type>
        <docblock line="146">
          <description><![CDATA[Public frontend to set an option]]></description>
          <long-description><![CDATA[<p>Just a wrapper to get a specific behaviour for master_file</p>]]></long-description>
          <tag line="146" name="param" description="Name of the option" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="146" name="param" description="Value of the option" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="146" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="146" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="156">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="156">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="175" package="Default">
        <name>load</name>
        <type>function</type>
        <docblock line="167">
          <description><![CDATA[Test if a cache is available for the given id and (if yes) return it (false else)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="167" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="167" name="param" description="If set to true, the cache validity won't be tested" type="boolean" variable="$doNotTestCacheValidity">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="167" name="param" description="Do not serialize (even if automatic_serialization is true) =&gt; for internal use" type="boolean" variable="$doNotUnserialize">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="167" name="return" description="Cached datas" type="mixed|false">
            <type by_reference="false">mixed</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="175">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="175">
          <name>$doNotTestCacheValidity</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
        <argument line="175">
          <name>$doNotUnserialize</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="192" package="Default">
        <name>test</name>
        <type>function</type>
        <docblock line="186">
          <description><![CDATA[Test if a cache is available for the given id]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="186" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="186" name="return" description="Last modified time of cache entry if it is available, false otherwise" type="int|false">
            <type by_reference="false">int</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="192">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Cache/Manager.php" hash="4cd2813db347d87d47403341b27ba1b6" package="Zend\Cache">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Cache"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Manager.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="28" code="50005">No short description for class Zend_Cache_Manager</critical>
    </parse_markers>
    <include line="23" type="Require Once" package="Default">
      <name>Zend/Cache/Exception.php</name>
      <docblock line="22">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="22" name="see" description="\Zend_Cache_Exception" refers="\Zend_Cache_Exception"/>
      </docblock>
    </include>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Cache.php</name>
      <docblock line="25">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="25" name="see" description="\Zend_Cache" refers="\Zend_Cache"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="34" package="Zend\Cache">
      <name>Zend_Cache_Manager</name>
      <full_name>\Zend_Cache_Manager</full_name>
      <extends/>
      <docblock line="28">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="28" name="category" description="Zend"/>
        <tag line="28" name="package" description="Zend_Cache"/>
        <tag line="28" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="28" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <constant namespace="default" line="39" package="Default">
        <name>PAGECACHE</name>
        <value><![CDATA['page']]></value>
        <docblock line="36">
          <description><![CDATA[Constant holding reserved name for default Page Cache]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="default" line="44" package="Default">
        <name>PAGETAGCACHE</name>
        <value><![CDATA['pagetag']]></value>
        <docblock line="41">
          <description><![CDATA[Constant holding reserved name for default Page Tag Cache]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="protected" line="51" package="Default">
        <name>$_caches</name>
        <default><![CDATA[array()]]></default>
        <docblock line="46">
          <description><![CDATA[Array of caches stored by the Cache Manager instance]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="46" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="59" package="Default">
        <name>$_optionTemplates</name>
        <default><![CDATA[array(
        // Simple Common Default
        'default' => array(
            'frontend' => array(
                'name'    => 'Core',
                'options' => array(
                    'automatic_serialization' => true,
                ),
            ),
            'backend' => array(
                'name'    => 'File',
                'options' => array(
                    // use system temp dir by default of file backend
                    // 'cache_dir' => '../cache',
                ),
            ),
        ),

        // Static Page HTML Cache
        'page' => array(
            'frontend' => array(
                'name'    => 'Capture',
                'options' => array(
                    'ignore_user_abort' => true,
                ),
            ),
            'backend' => array(
                'name'    => 'Static',
                'options' => array(
                    'public_dir' => '../public',
                ),
            ),
        ),

        // Tag Cache
        'pagetag' => array(
            'frontend' => array(
                'name'    => 'Core',
                'options' => array(
                    'automatic_serialization' => true,
                    'lifetime' => null
                ),
            ),
            'backend' => array(
                'name'    => 'File',
                'options' => array(
                    // use system temp dir by default of file backend
                    // 'cache_dir' => '../cache',
                    // use default umask of file backend
                    // 'cache_file_umask' => 0644
                ),
            ),
        ),
    )]]></default>
        <docblock line="53">
          <description><![CDATA[Array of ready made configuration templates for lazy
loading caches.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="53" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="121" package="Default">
        <name>setCache</name>
        <type>function</type>
        <docblock line="114">
          <description><![CDATA[Set a new cache for the Cache Manager to contain]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="114" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="114" name="param" description="" type="\Zend_Cache_Core" variable="$cache">
            <type by_reference="false">\Zend_Cache_Core</type>
          </tag>
          <tag line="114" name="return" description="" type="\Zend_Cache_Manager">
            <type by_reference="false">\Zend_Cache_Manager</type>
          </tag>
        </docblock>
        <argument line="121">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="121">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type>Zend_Cache_Core</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="134" package="Default">
        <name>hasCache</name>
        <type>function</type>
        <docblock line="127">
          <description><![CDATA[Check if the Cache Manager contains the named cache object, or a named
configuration template to lazy load the cache object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="127" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="127" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="134">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="151" package="Default">
        <name>getCache</name>
        <type>function</type>
        <docblock line="144">
          <description><![CDATA[Fetch the named cache object, or instantiate and return a cache object
using a named configuration template]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="144" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="144" name="return" description="" type="\Zend_Cache_Core">
            <type by_reference="false">\Zend_Cache_Core</type>
          </tag>
        </docblock>
        <argument line="151">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="184" package="Default">
        <name>getCaches</name>
        <type>function</type>
        <docblock line="179">
          <description><![CDATA[Fetch all available caches]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="179" name="return" description="An array of all available caches with it's names as key" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="203" package="Default">
        <name>setCacheTemplate</name>
        <type>function</type>
        <docblock line="195">
          <description><![CDATA[Set a named configuration template from which a cache object can later
be lazy loaded]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="195" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="195" name="param" description="" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="195" name="return" description="" type="\Zend_Cache_Manager">
            <type by_reference="false">\Zend_Cache_Manager</type>
          </tag>
        </docblock>
        <argument line="203">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="203">
          <name>$options</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="222" package="Default">
        <name>hasCacheTemplate</name>
        <type>function</type>
        <docblock line="216">
          <description><![CDATA[Check if the named configuration template]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="216" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="216" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="222">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="236" package="Default">
        <name>getCacheTemplate</name>
        <type>function</type>
        <docblock line="230">
          <description><![CDATA[Get the named configuration template]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="230" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="230" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="236">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="253" package="Default">
        <name>setTemplateOptions</name>
        <type>function</type>
        <docblock line="243">
          <description><![CDATA[Pass an array containing changes to be applied to a named
configuration
template]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="243" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="243" name="param" description="" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="243" name="return" description="" type="\Zend_Cache_Manager">
            <type by_reference="false">\Zend_Cache_Manager</type>
          </tag>
          <tag line="243" name="throws" description="for invalid options format or if option templates do not have $name" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
        </docblock>
        <argument line="253">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="253">
          <name>$options</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="278" package="Default">
        <name>_mergeOptions</name>
        <type>function</type>
        <docblock line="271">
          <description><![CDATA[Simple method to merge two configuration arrays]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="271" name="param" description="" type="array" variable="$current">
            <type by_reference="false">array</type>
          </tag>
          <tag line="271" name="param" description="" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="271" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="278">
          <name>$current</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
        <argument line="278">
          <name>$options</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Cache/Backend.php" hash="7152531b30ac47ed3ff5112cd1f06293" package="Zend\Cache\Zend\Cache\Backend">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Cache"/>
      <tag line="2" name="subpackage" description="Zend_Cache_Backend"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Backend.php 23800 2011-03-10 20:52:08Z mabe $"/>
    </docblock>
    <parse_markers>
      <error line="246" code="50015">Argument $priority is missing from the Docblock of _log()</error>
      <critical line="24" code="50005">No short description for class Zend_Cache_Backend</critical>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="30" package="Zend\Cache\Zend\Cache\Backend">
      <name>Zend_Cache_Backend</name>
      <full_name>\Zend_Cache_Backend</full_name>
      <extends/>
      <docblock line="24">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="24" name="package" description="Zend_Cache"/>
        <tag line="24" name="subpackage" description="Zend_Cache_Backend"/>
        <tag line="24" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="24" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="44" package="Default">
        <name>$_directives</name>
        <default><![CDATA[array(
        'lifetime' => 3600,
        'logging'  => false,
        'logger'   => null
    )]]></default>
        <docblock line="32">
          <description><![CDATA[Frontend or Core directives]]></description>
          <long-description><![CDATA[<p>=====> (int) lifetime :
- Cache lifetime (in seconds)
- If null, the cache is valid forever</p>

<p>=====> (int) logging :
- if set to true, a logging is activated throw Zend_Log</p>]]></long-description>
          <tag line="32" name="var" description="directives" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="55" package="Default">
        <name>$_options</name>
        <default><![CDATA[array()]]></default>
        <docblock line="50">
          <description><![CDATA[Available options]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="50" name="var" description="available options" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="64" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="57">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="57" name="param" description="Associative array of options" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="57" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="57" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="64">
          <name>$options</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="78" package="Default">
        <name>setDirectives</name>
        <type>function</type>
        <docblock line="71">
          <description><![CDATA[Set the frontend directives]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="71" name="param" description="Assoc of directives" type="array" variable="$directives">
            <type by_reference="false">array</type>
          </tag>
          <tag line="71" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="71" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="78">
          <name>$directives</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="103" package="Default">
        <name>setOption</name>
        <type>function</type>
        <docblock line="95">
          <description><![CDATA[Set an option]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="95" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="95" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="95" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="95" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="103">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="103">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="123" package="Default">
        <name>getLifetime</name>
        <type>function</type>
        <docblock line="114">
          <description><![CDATA[Get the life time]]></description>
          <long-description><![CDATA[<p>if $specificLifetime is not false, the given specific life time is used
else, the global lifetime is used</p>]]></long-description>
          <tag line="114" name="param" description="" type="int" variable="$specificLifetime">
            <type by_reference="false">int</type>
          </tag>
          <tag line="114" name="return" description="Cache life time" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="123">
          <name>$specificLifetime</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="139" package="Default">
        <name>isAutomaticCleaningAvailable</name>
        <type>function</type>
        <docblock line="131">
          <description><![CDATA[Return true if the automatic cleaning is available for the backend]]></description>
          <long-description><![CDATA[<p>DEPRECATED : use getCapabilities() instead</p>]]></long-description>
          <tag line="131" name="deprecated" description=""/>
          <tag line="131" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="152" package="Default">
        <name>getTmpDir</name>
        <type>function</type>
        <docblock line="144">
          <description><![CDATA[Determine system TMP directory and detect if we have read access]]></description>
          <long-description><![CDATA[<p>inspired from Zend_File_Transfer_Adapter_Abstract</p>]]></long-description>
          <tag line="144" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="144" name="throws" description="if unable to determine directory" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="206" package="Default">
        <name>_isGoodTmpDir</name>
        <type>function</type>
        <docblock line="200">
          <description><![CDATA[Verify if the given temporary directory is readable and writable]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="200" name="param" description="temporary directory" type="string" variable="$dir">
            <type by_reference="false">string</type>
          </tag>
          <tag line="200" name="return" description="true if the directory is ok" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="206">
          <name>$dir</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="224" package="Default">
        <name>_loggerSanity</name>
        <type>function</type>
        <docblock line="216">
          <description><![CDATA[Make sure if we enable logging that the Zend_Log class
is available.]]></description>
          <long-description><![CDATA[<p>Create a default log object if none is set.</p>]]></long-description>
          <tag line="216" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="216" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="253" package="Default">
        <name>_log</name>
        <type>function</type>
        <docblock line="246">
          <description><![CDATA[Log a message at the WARN (4) priority.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="246" name="param" description="" type="string" variable="$message">
            <type by_reference="false">string</type>
          </tag>
          <tag line="246" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="246" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="253">
          <name>$message</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="253">
          <name>$priority</name>
          <default><![CDATA[4]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Cache/Backend/ZendServer.php" hash="655cd6ceb512d62e79677cd30b2fa9d8" package="Zend\Cache\Zend\Cache\Backend">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Cache"/>
      <tag line="2" name="subpackage" description="Zend_Cache_Backend"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: ZendServer.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <error line="116" code="50015">Argument $lifetime is missing from the Docblock of _expireTime()</error>
      <critical line="31" code="50005">No short description for class Zend_Cache_Backend_ZendServer</critical>
    </parse_markers>
    <include line="25" type="Require Once" package="Default">
      <name>Zend/Cache/Backend/Interface.php</name>
      <docblock line="24">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="24" name="see" description="\Zend_Cache_Backend_Interface" refers="\Zend_Cache_Backend_Interface"/>
      </docblock>
    </include>
    <include line="28" type="Require Once" package="Default">
      <name>Zend/Cache/Backend.php</name>
      <docblock line="27">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="27" name="see" description="\Zend_Cache_Backend" refers="\Zend_Cache_Backend"/>
      </docblock>
    </include>
    <class final="false" abstract="true" namespace="default" line="37" package="Zend\Cache\Zend\Cache\Backend">
      <name>Zend_Cache_Backend_ZendServer</name>
      <full_name>\Zend_Cache_Backend_ZendServer</full_name>
      <extends>\Zend_Cache_Backend</extends>
      <extends>\Zend_Cache_Backend_Interface</extends>
      <docblock line="31">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="31" name="package" description="Zend_Cache"/>
        <tag line="31" name="subpackage" description="Zend_Cache_Backend"/>
        <tag line="31" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="31" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="47" package="Default">
        <name>$_options</name>
        <default><![CDATA[array(
        'namespace' => 'zendframework'
    )]]></default>
        <docblock line="39">
          <description><![CDATA[Available options]]></description>
          <long-description><![CDATA[<p>=====> (string) namespace :
Namespace to be used for chaching operations</p>]]></long-description>
          <tag line="39" name="var" description="available options" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="default" line="59" package="Default">
        <name>_store</name>
        <type>function</type>
        <docblock line="51">
          <description><![CDATA[Store data]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="51" name="param" description="Object to store" type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="51" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="51" name="param" description="Time to live in seconds" type="int" variable="$timeToLive">
            <type by_reference="false">int</type>
          </tag>
          <tag line="51" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
        </docblock>
        <argument line="59">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="59">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="59">
          <name>$timeToLive</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="default" line="67" package="Default">
        <name>_fetch</name>
        <type>function</type>
        <docblock line="61">
          <description><![CDATA[Fetch data]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="61" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="61" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
        </docblock>
        <argument line="67">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="default" line="74" package="Default">
        <name>_unset</name>
        <type>function</type>
        <docblock line="69">
          <description><![CDATA[Unset data]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="69" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="74">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="default" line="79" package="Default">
        <name>_clear</name>
        <type>function</type>
        <docblock line="76">
          <description><![CDATA[Clear cache]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="88" package="Default">
        <name>load</name>
        <type>function</type>
        <docblock line="81">
          <description><![CDATA[Test if a cache is available for the given id and (if yes) return it (false else)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="81" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="81" name="param" description="if set to true, the cache validity won't be tested" type="boolean" variable="$doNotTestCacheValidity">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="81" name="return" description="cached datas (or false)" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="88">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="88">
          <name>$doNotTestCacheValidity</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="104" package="Default">
        <name>test</name>
        <type>function</type>
        <docblock line="97">
          <description><![CDATA[Test if a cache is available or not (for the given id)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="97" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="97" name="return" description="false (a cache is not available) or &quot;last modified&quot; timestamp (int) of the available cache record" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="97" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
        </docblock>
        <argument line="104">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="121" package="Default">
        <name>_expireTime</name>
        <type>function</type>
        <docblock line="116">
          <description><![CDATA[Compute & return the expire time]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="116" name="return" description="expire time (unix timestamp)" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="121">
          <name>$lifetime</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="141" package="Default">
        <name>save</name>
        <type>function</type>
        <docblock line="129">
          <description><![CDATA[Save some string datas into a cache record]]></description>
          <long-description><![CDATA[<p>Note : $data is always "string" (serialization is done by the
core not by the backend)</p>]]></long-description>
          <tag line="129" name="param" description="datas to cache" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="129" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="129" name="param" description="array of strings, the cache record will be tagged by each string entry" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="129" name="param" description="if != false, set a specific lifetime for this cache record (null =&gt; infinite lifetime)" type="int" variable="$specificLifetime">
            <type by_reference="false">int</type>
          </tag>
          <tag line="129" name="return" description="true if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="141">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="141">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="141">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
        <argument line="141">
          <name>$specificLifetime</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="163" package="Default">
        <name>remove</name>
        <type>function</type>
        <docblock line="157">
          <description><![CDATA[Remove a cache record]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="157" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="157" name="return" description="true if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="163">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="186" package="Default">
        <name>clean</name>
        <type>function</type>
        <docblock line="171">
          <description><![CDATA[Clean some cache records]]></description>
          <long-description><![CDATA[<p>Available modes are :
'all' (default)  => remove all cache entries ($tags is not used)
'old'            => unsupported
'matchingTag'    => unsupported
'notMatchingTag' => unsupported
'matchingAnyTag' => unsupported</p>]]></long-description>
          <tag line="171" name="param" description="clean mode" type="string" variable="$mode">
            <type by_reference="false">string</type>
          </tag>
          <tag line="171" name="param" description="array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="171" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="171" name="return" description="true if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="186">
          <name>$mode</name>
          <default><![CDATA[Zend_Cache::CLEANING_MODE_ALL]]></default>
          <type/>
        </argument>
        <argument line="186">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Cache/Backend/Test.php" hash="2b086b4eeefdf639cf5de9d79f722f24" package="Zend\Cache\Zend\Cache\Backend">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Cache"/>
      <tag line="2" name="subpackage" description="Zend_Cache_Backend"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Test.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="34" code="50005">No short description for class Zend_Cache_Backend_Test</critical>
    </parse_markers>
    <include line="27" type="Require Once" package="Default">
      <name>Zend/Cache/Backend/ExtendedInterface.php</name>
      <docblock line="24">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="24" name="see" description="\Zend_Cache_Backend_Interface" refers="\Zend_Cache_Backend_Interface"/>
      </docblock>
    </include>
    <include line="32" type="Require Once" package="Default">
      <name>Zend/Cache/Backend.php</name>
      <docblock line="29">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="29" name="see" description="\Zend_Cache_Backend" refers="\Zend_Cache_Backend"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="40" package="Zend\Cache\Zend\Cache\Backend">
      <name>Zend_Cache_Backend_Test</name>
      <full_name>\Zend_Cache_Backend_Test</full_name>
      <extends>\Zend_Cache_Backend</extends>
      <extends>\Zend_Cache_Backend_ExtendedInterface</extends>
      <docblock line="34">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="34" name="package" description="Zend_Cache"/>
        <tag line="34" name="subpackage" description="Zend_Cache_Backend"/>
        <tag line="34" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="34" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="47" package="Default">
        <name>$_options</name>
        <default><![CDATA[array()]]></default>
        <docblock line="42">
          <description><![CDATA[Available options]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="42" name="var" description="available options" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="54" package="Default">
        <name>$_directives</name>
        <default><![CDATA[array()]]></default>
        <docblock line="49">
          <description><![CDATA[Frontend or Core directives]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="49" name="var" description="directives" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="61" package="Default">
        <name>$_log</name>
        <default><![CDATA[array()]]></default>
        <docblock line="56">
          <description><![CDATA[Array to log actions]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="56" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="68" package="Default">
        <name>$_index</name>
        <default><![CDATA[0]]></default>
        <docblock line="63">
          <description><![CDATA[Current index for log array]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="63" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="76" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="70">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="70" name="param" description="associative array of options" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="70" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="76">
          <name>$options</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="87" package="Default">
        <name>setDirectives</name>
        <type>function</type>
        <docblock line="81">
          <description><![CDATA[Set the frontend directives]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="81" name="param" description="assoc of directives" type="array" variable="$directives">
            <type by_reference="false">array</type>
          </tag>
          <tag line="81" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="87">
          <name>$directives</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="103" package="Default">
        <name>load</name>
        <type>function</type>
        <docblock line="92">
          <description><![CDATA[Test if a cache is available for the given id and (if yes) return it (false else)]]></description>
          <long-description><![CDATA[<p>For this test backend only, if $id == 'false', then the method will return false
if $id == 'serialized', the method will return a serialized array
('foo' else)</p>]]></long-description>
          <tag line="92" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="92" name="param" description="If set to true, the cache validity won't be tested" type="boolean" variable="$doNotTestCacheValidity">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="92" name="return" description="Cached datas (or false)" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="103">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="103">
          <name>$doNotTestCacheValidity</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="140" package="Default">
        <name>test</name>
        <type>function</type>
        <docblock line="131">
          <description><![CDATA[Test if a cache is available or not (for the given id)]]></description>
          <long-description><![CDATA[<p>For this test backend only, if $id == 'false', then the method will return false
(123456 else)</p>]]></long-description>
          <tag line="131" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="131" name="return" description="false (a cache is not available) or &quot;last modified&quot; timestamp (int) of the available cache record" type="mixed|false">
            <type by_reference="false">mixed</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="140">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="164" package="Default">
        <name>save</name>
        <type>function</type>
        <docblock line="152">
          <description><![CDATA[Save some string datas into a cache record]]></description>
          <long-description><![CDATA[<p>For this test backend only, if $id == 'false', then the method will return false
(true else)</p>]]></long-description>
          <tag line="152" name="param" description="Datas to cache" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="152" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="152" name="param" description="Array of strings, the cache record will be tagged by each string entry" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="152" name="param" description="If != false, set a specific lifetime for this cache record (null =&gt; infinite lifetime)" type="int" variable="$specificLifetime">
            <type by_reference="false">int</type>
          </tag>
          <tag line="152" name="return" description="True if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="164">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="164">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="164">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
        <argument line="164">
          <name>$specificLifetime</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="182" package="Default">
        <name>remove</name>
        <type>function</type>
        <docblock line="173">
          <description><![CDATA[Remove a cache record]]></description>
          <long-description><![CDATA[<p>For this test backend only, if $id == 'false', then the method will return false
(true else)</p>]]></long-description>
          <tag line="173" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="173" name="return" description="True if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="182">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="209" package="Default">
        <name>clean</name>
        <type>function</type>
        <docblock line="191">
          <description><![CDATA[Clean some cache records]]></description>
          <long-description><![CDATA[<p>For this test backend only, if $mode == 'false', then the method will return false
(true else)</p>

<p>Available modes are :
Zend_Cache::CLEANING_MODE_ALL (default)    => remove all cache entries ($tags is not used)
Zend_Cache::CLEANING_MODE_OLD              => remove too old cache entries ($tags is not used)
Zend_Cache::CLEANING_MODE_MATCHING_TAG     => remove cache entries matching all given tags
                                              ($tags can be an array of strings or a single string)
Zend_Cache::CLEANING_MODE_NOT_MATCHING_TAG => remove cache entries not {matching one of the given tags}
                                              ($tags can be an array of strings or a single string)</p>]]></long-description>
          <tag line="191" name="param" description="Clean mode" type="string" variable="$mode">
            <type by_reference="false">string</type>
          </tag>
          <tag line="191" name="param" description="Array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="191" name="return" description="True if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="209">
          <name>$mode</name>
          <default><![CDATA[Zend_Cache::CLEANING_MODE_ALL]]></default>
          <type/>
        </argument>
        <argument line="209">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="223" package="Default">
        <name>getLastLog</name>
        <type>function</type>
        <docblock line="218">
          <description><![CDATA[Get the last log]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="218" name="return" description="The last log" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="233" package="Default">
        <name>getLogIndex</name>
        <type>function</type>
        <docblock line="228">
          <description><![CDATA[Get the log index]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="228" name="return" description="Log index" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="243" package="Default">
        <name>getAllLogs</name>
        <type>function</type>
        <docblock line="238">
          <description><![CDATA[Get the complete log array]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="238" name="return" description="Complete log array" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="253" package="Default">
        <name>isAutomaticCleaningAvailable</name>
        <type>function</type>
        <docblock line="248">
          <description><![CDATA[Return true if the automatic cleaning is available for the backend]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="248" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="263" package="Default">
        <name>getIds</name>
        <type>function</type>
        <docblock line="258">
          <description><![CDATA[Return an array of stored cache ids]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="258" name="return" description="array of stored cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="275" package="Default">
        <name>getTags</name>
        <type>function</type>
        <docblock line="270">
          <description><![CDATA[Return an array of stored tags]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="270" name="return" description="array of stored tags (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="290" package="Default">
        <name>getIdsMatchingTags</name>
        <type>function</type>
        <docblock line="282">
          <description><![CDATA[Return an array of stored cache ids which match given tags]]></description>
          <long-description><![CDATA[<p>In case of multiple tags, a logical AND is made between tags</p>]]></long-description>
          <tag line="282" name="param" description="array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="282" name="return" description="array of matching cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="290">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="307" package="Default">
        <name>getIdsNotMatchingTags</name>
        <type>function</type>
        <docblock line="299">
          <description><![CDATA[Return an array of stored cache ids which don't match given tags]]></description>
          <long-description><![CDATA[<p>In case of multiple tags, a logical OR is made between tags</p>]]></long-description>
          <tag line="299" name="param" description="array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="299" name="return" description="array of not matching cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="307">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="324" package="Default">
        <name>getIdsMatchingAnyTags</name>
        <type>function</type>
        <docblock line="316">
          <description><![CDATA[Return an array of stored cache ids which match any given tags]]></description>
          <long-description><![CDATA[<p>In case of multiple tags, a logical AND is made between tags</p>]]></long-description>
          <tag line="316" name="param" description="array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="316" name="return" description="array of any matching cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="324">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="338" package="Default">
        <name>getFillingPercentage</name>
        <type>function</type>
        <docblock line="333">
          <description><![CDATA[Return the filling percentage of the backend storage]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="333" name="return" description="integer between 0 and 100" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="354" package="Default">
        <name>getMetadatas</name>
        <type>function</type>
        <docblock line="343">
          <description><![CDATA[Return an array of metadatas for the given cache id]]></description>
          <long-description><![CDATA[<p>The array must include these keys :
- expire : the expire timestamp
- tags : a string array of tags
- mtime : timestamp of last modification time</p>]]></long-description>
          <tag line="343" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="343" name="return" description="array of metadatas (false if the cache id is not found)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="354">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="366" package="Default">
        <name>touch</name>
        <type>function</type>
        <docblock line="359">
          <description><![CDATA[Give (if possible) an extra lifetime to the given cache id]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="359" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="359" name="param" description="" type="int" variable="$extraLifetime">
            <type by_reference="false">int</type>
          </tag>
          <tag line="359" name="return" description="true if ok" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="366">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="366">
          <name>$extraLifetime</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="385" package="Default">
        <name>getCapabilities</name>
        <type>function</type>
        <docblock line="371">
          <description><![CDATA[Return an associative array of capabilities (booleans) of the backend]]></description>
          <long-description><![CDATA[<p>The array must include these keys :
- automatic_cleaning (is automating cleaning necessary)
- tags (are tags supported)
- expired_read (is it possible to read expired cache records
                (for doNotTestCacheValidity option for example))
- priority does the backend deal with priority when saving
- infinite_lifetime (is infinite lifetime can work with this backend)
- get_list (is it possible to get the list of cache ids and the complete list of tags)</p>]]></long-description>
          <tag line="371" name="return" description="associative of with capabilities" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="404" package="Default">
        <name>_addLog</name>
        <type>function</type>
        <docblock line="397">
          <description><![CDATA[Add an event to the log array]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="397" name="param" description="MethodName" type="string" variable="$methodName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="397" name="param" description="Arguments" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="397" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="404">
          <name>$methodName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="404">
          <name>$args</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Cache/Backend/Sqlite.php" hash="c6e6797d5528ea4c7fb84ed79b1fd57c" package="Zend\Cache\Zend\Cache\Backend">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Cache"/>
      <tag line="2" name="subpackage" description="Zend_Cache_Backend"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Sqlite.php 24348 2011-08-04 17:51:24Z mabe $"/>
    </docblock>
    <parse_markers>
      <critical line="34" code="50005">No short description for class Zend_Cache_Backend_Sqlite</critical>
    </parse_markers>
    <include line="27" type="Require Once" package="Default">
      <name>Zend/Cache/Backend/ExtendedInterface.php</name>
      <docblock line="24">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="24" name="see" description="\Zend_Cache_Backend_Interface" refers="\Zend_Cache_Backend_Interface"/>
      </docblock>
    </include>
    <include line="32" type="Require Once" package="Default">
      <name>Zend/Cache/Backend.php</name>
      <docblock line="29">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="29" name="see" description="\Zend_Cache_Backend" refers="\Zend_Cache_Backend"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="40" package="Zend\Cache\Zend\Cache\Backend">
      <name>Zend_Cache_Backend_Sqlite</name>
      <full_name>\Zend_Cache_Backend_Sqlite</full_name>
      <extends>\Zend_Cache_Backend</extends>
      <extends>\Zend_Cache_Backend_ExtendedInterface</extends>
      <docblock line="34">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="34" name="package" description="Zend_Cache"/>
        <tag line="34" name="subpackage" description="Zend_Cache_Backend"/>
        <tag line="34" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="34" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="58" package="Default">
        <name>$_options</name>
        <default><![CDATA[array(
        'cache_db_complete_path' => null,
        'automatic_vacuum_factor' => 10
    )]]></default>
        <docblock line="42">
          <description><![CDATA[Available options]]></description>
          <long-description><![CDATA[<p>=====> (string) cache_db_complete_path :
- the complete path (filename included) of the SQLITE database</p>

<p>====> (int) automatic_vacuum_factor :
- Disable / Tune the automatic vacuum process
- The automatic vacuum process defragment the database file (and make it smaller)
  when a clean() or delete() is called
    0               => no automatic vacuum
    1               => systematic vacuum (when delete() or clean() methods are called)
    x (integer) > 1 => automatic vacuum randomly 1 times on x clean() or delete()</p>]]></long-description>
          <tag line="42" name="var" description="Available options" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="68" package="Default">
        <name>$_db</name>
        <default><![CDATA[null]]></default>
        <docblock line="63">
          <description><![CDATA[DB ressource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="63" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="75" package="Default">
        <name>$_structureChecked</name>
        <default><![CDATA[false]]></default>
        <docblock line="70">
          <description><![CDATA[Boolean to store if the structure has benn checked or not]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="70" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="84" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="77">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="77" name="param" description="Associative array of options" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="77" name="throws" description="" type="\Zend_cache_Exception">
            <type by_reference="false">\Zend_cache_Exception</type>
          </tag>
          <tag line="77" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="84">
          <name>$options</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="101" package="Default">
        <name>__destruct</name>
        <type>function</type>
        <docblock line="96">
          <description><![CDATA[Destructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="96" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="113" package="Default">
        <name>load</name>
        <type>function</type>
        <docblock line="106">
          <description><![CDATA[Test if a cache is available for the given id and (if yes) return it (false else)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="106" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="106" name="param" description="If set to true, the cache validity won't be tested" type="boolean" variable="$doNotTestCacheValidity">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="106" name="return" description="Cached datas" type="string|false">
            <type by_reference="false">string</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="113">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="113">
          <name>$doNotTestCacheValidity</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="134" package="Default">
        <name>test</name>
        <type>function</type>
        <docblock line="128">
          <description><![CDATA[Test if a cache is available or not (for the given id)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="128" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="128" name="return" description="(a cache is not available) or &quot;last modified&quot; timestamp (int) of the available cache record" type="mixed|false">
            <type by_reference="false">mixed</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="134">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="159" package="Default">
        <name>save</name>
        <type>function</type>
        <docblock line="146">
          <description><![CDATA[Save some string datas into a cache record]]></description>
          <long-description><![CDATA[<p>Note : $data is always "string" (serialization is done by the
core not by the backend)</p>]]></long-description>
          <tag line="146" name="param" description="Datas to cache" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="146" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="146" name="param" description="Array of strings, the cache record will be tagged by each string entry" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="146" name="param" description="If != false, set a specific lifetime for this cache record (null =&gt; infinite lifetime)" type="int" variable="$specificLifetime">
            <type by_reference="false">int</type>
          </tag>
          <tag line="146" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="146" name="return" description="True if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="159">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="159">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="159">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
        <argument line="159">
          <name>$specificLifetime</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="190" package="Default">
        <name>remove</name>
        <type>function</type>
        <docblock line="184">
          <description><![CDATA[Remove a cache record]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="184" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="184" name="return" description="True if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="190">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="218" package="Default">
        <name>clean</name>
        <type>function</type>
        <docblock line="201">
          <description><![CDATA[Clean some cache records]]></description>
          <long-description><![CDATA[<p>Available modes are :
Zend_Cache::CLEANING_MODE_ALL (default)    => remove all cache entries ($tags is not used)
Zend_Cache::CLEANING_MODE_OLD              => remove too old cache entries ($tags is not used)
Zend_Cache::CLEANING_MODE_MATCHING_TAG     => remove cache entries matching all given tags
                                              ($tags can be an array of strings or a single string)
Zend_Cache::CLEANING_MODE_NOT_MATCHING_TAG => remove cache entries not {matching one of the given tags}
                                              ($tags can be an array of strings or a single string)
Zend_Cache::CLEANING_MODE_MATCHING_ANY_TAG => remove cache entries matching any given tags
                                              ($tags can be an array of strings or a single string)</p>]]></long-description>
          <tag line="201" name="param" description="Clean mode" type="string" variable="$mode">
            <type by_reference="false">string</type>
          </tag>
          <tag line="201" name="param" description="Array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="201" name="return" description="True if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="218">
          <name>$mode</name>
          <default><![CDATA[Zend_Cache::CLEANING_MODE_ALL]]></default>
          <type/>
        </argument>
        <argument line="218">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="231" package="Default">
        <name>getIds</name>
        <type>function</type>
        <docblock line="226">
          <description><![CDATA[Return an array of stored cache ids]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="226" name="return" description="array of stored cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="247" package="Default">
        <name>getTags</name>
        <type>function</type>
        <docblock line="242">
          <description><![CDATA[Return an array of stored tags]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="242" name="return" description="array of stored tags (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="266" package="Default">
        <name>getIdsMatchingTags</name>
        <type>function</type>
        <docblock line="258">
          <description><![CDATA[Return an array of stored cache ids which match given tags]]></description>
          <long-description><![CDATA[<p>In case of multiple tags, a logical AND is made between tags</p>]]></long-description>
          <tag line="258" name="param" description="array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="258" name="return" description="array of matching cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="266">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="302" package="Default">
        <name>getIdsNotMatchingTags</name>
        <type>function</type>
        <docblock line="294">
          <description><![CDATA[Return an array of stored cache ids which don't match given tags]]></description>
          <long-description><![CDATA[<p>In case of multiple tags, a logical OR is made between tags</p>]]></long-description>
          <tag line="294" name="param" description="array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="294" name="return" description="array of not matching cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="302">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="335" package="Default">
        <name>getIdsMatchingAnyTags</name>
        <type>function</type>
        <docblock line="327">
          <description><![CDATA[Return an array of stored cache ids which match any given tags]]></description>
          <long-description><![CDATA[<p>In case of multiple tags, a logical AND is made between tags</p>]]></long-description>
          <tag line="327" name="param" description="array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="327" name="return" description="array of any matching cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="335">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="369" package="Default">
        <name>getFillingPercentage</name>
        <type>function</type>
        <docblock line="363">
          <description><![CDATA[Return the filling percentage of the backend storage]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="363" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="363" name="return" description="integer between 0 and 100" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="395" package="Default">
        <name>getMetadatas</name>
        <type>function</type>
        <docblock line="384">
          <description><![CDATA[Return an array of metadatas for the given cache id]]></description>
          <long-description><![CDATA[<p>The array must include these keys :
- expire : the expire timestamp
- tags : a string array of tags
- mtime : timestamp of last modification time</p>]]></long-description>
          <tag line="384" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="384" name="return" description="array of metadatas (false if the cache id is not found)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="395">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="425" package="Default">
        <name>touch</name>
        <type>function</type>
        <docblock line="418">
          <description><![CDATA[Give (if possible) an extra lifetime to the given cache id]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="418" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="418" name="param" description="" type="int" variable="$extraLifetime">
            <type by_reference="false">int</type>
          </tag>
          <tag line="418" name="return" description="true if ok" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="425">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="425">
          <name>$extraLifetime</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="456" package="Default">
        <name>getCapabilities</name>
        <type>function</type>
        <docblock line="442">
          <description><![CDATA[Return an associative array of capabilities (booleans) of the backend]]></description>
          <long-description><![CDATA[<p>The array must include these keys :
- automatic_cleaning (is automating cleaning necessary)
- tags (are tags supported)
- expired_read (is it possible to read expired cache records
                (for doNotTestCacheValidity option for example))
- priority does the backend deal with priority when saving
- infinite_lifetime (is infinite lifetime can work with this backend)
- get_list (is it possible to get the list of cache ids and the complete list of tags)</p>]]></long-description>
          <tag line="442" name="return" description="associative of with capabilities" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="475" package="Default">
        <name>___expire</name>
        <type>function</type>
        <docblock line="468">
          <description><![CDATA[PUBLIC METHOD FOR UNIT TESTING ONLY !]]></description>
          <long-description><![CDATA[<p>Force a cache record to expire</p>]]></long-description>
          <tag line="468" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="475">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="489" package="Default">
        <name>_getConnection</name>
        <type>function</type>
        <docblock line="481">
          <description><![CDATA[Return the connection resource]]></description>
          <long-description><![CDATA[<p>If we are not connected, the connection is made</p>]]></long-description>
          <tag line="481" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="481" name="return" description="Connection resource" type="resource">
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="508" package="Default">
        <name>_query</name>
        <type>function</type>
        <docblock line="502">
          <description><![CDATA[Execute an SQL query silently]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="502" name="param" description="SQL query" type="string" variable="$query">
            <type by_reference="false">string</type>
          </tag>
          <tag line="502" name="return" description="query results" type="mixed|false">
            <type by_reference="false">mixed</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="508">
          <name>$query</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="527" package="Default">
        <name>_automaticVacuum</name>
        <type>function</type>
        <docblock line="522">
          <description><![CDATA[Deal with the automatic vacuum process]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="522" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="544" package="Default">
        <name>_registerTag</name>
        <type>function</type>
        <docblock line="537">
          <description><![CDATA[Register a cache id with the given tag]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="537" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="537" name="param" description="Tag" type="string" variable="$tag">
            <type by_reference="false">string</type>
          </tag>
          <tag line="537" name="return" description="True if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="544">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="544">
          <name>$tag</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="559" package="Default">
        <name>_buildStructure</name>
        <type>function</type>
        <docblock line="554">
          <description><![CDATA[Build the database structure]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="554" name="return" description="" type="false">
            <type by_reference="false">false</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="581" package="Default">
        <name>_checkStructureVersion</name>
        <type>function</type>
        <docblock line="576">
          <description><![CDATA[Check if the database structure is ok (with the good version)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="576" name="return" description="True if ok" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="614" package="Default">
        <name>_clean</name>
        <type>function</type>
        <docblock line="597">
          <description><![CDATA[Clean some cache records]]></description>
          <long-description><![CDATA[<p>Available modes are :
Zend_Cache::CLEANING_MODE_ALL (default)    => remove all cache entries ($tags is not used)
Zend_Cache::CLEANING_MODE_OLD              => remove too old cache entries ($tags is not used)
Zend_Cache::CLEANING_MODE_MATCHING_TAG     => remove cache entries matching all given tags
                                              ($tags can be an array of strings or a single string)
Zend_Cache::CLEANING_MODE_NOT_MATCHING_TAG => remove cache entries not {matching one of the given tags}
                                              ($tags can be an array of strings or a single string)
Zend_Cache::CLEANING_MODE_MATCHING_ANY_TAG => remove cache entries matching any given tags
                                              ($tags can be an array of strings or a single string)</p>]]></long-description>
          <tag line="597" name="param" description="Clean mode" type="string" variable="$mode">
            <type by_reference="false">string</type>
          </tag>
          <tag line="597" name="param" description="Array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="597" name="return" description="True if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="614">
          <name>$mode</name>
          <default><![CDATA[Zend_Cache::CLEANING_MODE_ALL]]></default>
          <type/>
        </argument>
        <argument line="614">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="664" package="Default">
        <name>_checkAndBuildStructure</name>
        <type>function</type>
        <docblock line="658">
          <description><![CDATA[Check if the database structure is ok (with the good version), if no : build it]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="658" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="658" name="return" description="True if ok" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Cache/Backend/ExtendedInterface.php" hash="3e8d101fc1e7cb67b013c5c4f5a2fdf9" package="Zend\Cache\Zend\Cache\Backend">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Cache"/>
      <tag line="2" name="subpackage" description="Zend_Cache_Backend"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: ExtendedInterface.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Cache/Backend/Interface.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Cache_Backend_Interface" refers="\Zend_Cache_Backend_Interface"/>
      </docblock>
    </include>
    <interface namespace="default" line="34" package="Zend\Cache\Zend\Cache\Backend">
      <name>Zend_Cache_Backend_ExtendedInterface</name>
      <full_name>\Zend_Cache_Backend_ExtendedInterface</full_name>
      <extends>\Zend_Cache_Backend_Interface</extends>
      <docblock line="28">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="28" name="package" description="Zend_Cache"/>
        <tag line="28" name="subpackage" description="Zend_Cache_Backend"/>
        <tag line="28" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="28" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="42" package="Default">
        <name>getIds</name>
        <type>function</type>
        <docblock line="37">
          <description><![CDATA[Return an array of stored cache ids]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="37" name="return" description="array of stored cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="49" package="Default">
        <name>getTags</name>
        <type>function</type>
        <docblock line="44">
          <description><![CDATA[Return an array of stored tags]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="44" name="return" description="array of stored tags (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="59" package="Default">
        <name>getIdsMatchingTags</name>
        <type>function</type>
        <docblock line="51">
          <description><![CDATA[Return an array of stored cache ids which match given tags]]></description>
          <long-description><![CDATA[<p>In case of multiple tags, a logical AND is made between tags</p>]]></long-description>
          <tag line="51" name="param" description="array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="51" name="return" description="array of matching cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="59">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="69" package="Default">
        <name>getIdsNotMatchingTags</name>
        <type>function</type>
        <docblock line="61">
          <description><![CDATA[Return an array of stored cache ids which don't match given tags]]></description>
          <long-description><![CDATA[<p>In case of multiple tags, a logical OR is made between tags</p>]]></long-description>
          <tag line="61" name="param" description="array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="61" name="return" description="array of not matching cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="69">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="79" package="Default">
        <name>getIdsMatchingAnyTags</name>
        <type>function</type>
        <docblock line="71">
          <description><![CDATA[Return an array of stored cache ids which match any given tags]]></description>
          <long-description><![CDATA[<p>In case of multiple tags, a logical AND is made between tags</p>]]></long-description>
          <tag line="71" name="param" description="array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="71" name="return" description="array of any matching cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="79">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="86" package="Default">
        <name>getFillingPercentage</name>
        <type>function</type>
        <docblock line="81">
          <description><![CDATA[Return the filling percentage of the backend storage]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="81" name="return" description="integer between 0 and 100" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="99" package="Default">
        <name>getMetadatas</name>
        <type>function</type>
        <docblock line="88">
          <description><![CDATA[Return an array of metadatas for the given cache id]]></description>
          <long-description><![CDATA[<p>The array must include these keys :
- expire : the expire timestamp
- tags : a string array of tags
- mtime : timestamp of last modification time</p>]]></long-description>
          <tag line="88" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="88" name="return" description="array of metadatas (false if the cache id is not found)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="99">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="108" package="Default">
        <name>touch</name>
        <type>function</type>
        <docblock line="101">
          <description><![CDATA[Give (if possible) an extra lifetime to the given cache id]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="101" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="101" name="param" description="" type="int" variable="$extraLifetime">
            <type by_reference="false">int</type>
          </tag>
          <tag line="101" name="return" description="true if ok" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="108">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="108">
          <name>$extraLifetime</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="124" package="Default">
        <name>getCapabilities</name>
        <type>function</type>
        <docblock line="110">
          <description><![CDATA[Return an associative array of capabilities (booleans) of the backend]]></description>
          <long-description><![CDATA[<p>The array must include these keys :
- automatic_cleaning (is automating cleaning necessary)
- tags (are tags supported)
- expired_read (is it possible to read expired cache records
                (for doNotTestCacheValidity option for example))
- priority does the backend deal with priority when saving
- infinite_lifetime (is infinite lifetime can work with this backend)
- get_list (is it possible to get the list of cache ids and the complete list of tags)</p>]]></long-description>
          <tag line="110" name="return" description="associative of with capabilities" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </interface>
  </file>
  <file path="Zend/Cache/Backend/WinCache.php" hash="6c5f36b9ad192957772bb69aeee0785a" package="Zend\Cache\Zend\Cache\Backend">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Cache"/>
      <tag line="2" name="subpackage" description="Zend_Cache_Backend"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id$"/>
    </docblock>
    <parse_markers>
      <critical line="35" code="50005">No short description for class Zend_Cache_Backend_WinCache</critical>
    </parse_markers>
    <include line="27" type="Require Once" package="Default">
      <name>Zend/Cache/Backend/ExtendedInterface.php</name>
      <docblock line="24">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="24" name="see" description="\Zend_Cache_Backend_Interface" refers="\Zend_Cache_Backend_Interface"/>
      </docblock>
    </include>
    <include line="32" type="Require Once" package="Default">
      <name>Zend/Cache/Backend.php</name>
      <docblock line="29">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="29" name="see" description="\Zend_Cache_Backend" refers="\Zend_Cache_Backend"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="41" package="Zend\Cache\Zend\Cache\Backend">
      <name>Zend_Cache_Backend_WinCache</name>
      <full_name>\Zend_Cache_Backend_WinCache</full_name>
      <extends>\Zend_Cache_Backend</extends>
      <extends>\Zend_Cache_Backend_ExtendedInterface</extends>
      <docblock line="35">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="package" description="Zend_Cache"/>
        <tag line="35" name="subpackage" description="Zend_Cache_Backend"/>
        <tag line="35" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="35" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <constant namespace="default" line="46" package="Default">
        <name>TAGS_UNSUPPORTED_BY_CLEAN_OF_WINCACHE_BACKEND</name>
        <value><![CDATA['Zend_Cache_Backend_WinCache::clean() : tags are unsupported by the WinCache backend']]></value>
        <docblock line="43">
          <description><![CDATA[Log message]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="default" line="47">
        <name>TAGS_UNSUPPORTED_BY_SAVE_OF_WINCACHE_BACKEND</name>
        <value><![CDATA['Zend_Cache_Backend_WinCache::save() : tags are unsupported by the WinCache backend']]></value>
      </constant>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="56" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="49">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="49" name="param" description="associative array of options" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="49" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="49" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$options</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="73" package="Default">
        <name>load</name>
        <type>function</type>
        <docblock line="64">
          <description><![CDATA[Test if a cache is available for the given id and (if yes) return it (false else)]]></description>
          <long-description><![CDATA[<p>WARNING $doNotTestCacheValidity=true is unsupported by the WinCache backend</p>]]></long-description>
          <tag line="64" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="64" name="param" description="if set to true, the cache validity won't be tested" type="boolean" variable="$doNotTestCacheValidity">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="64" name="return" description="cached datas (or false)" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="73">
          <name>$doNotTestCacheValidity</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="88" package="Default">
        <name>test</name>
        <type>function</type>
        <docblock line="82">
          <description><![CDATA[Test if a cache is available or not (for the given id)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="82" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="82" name="return" description="false (a cache is not available) or &quot;last modified&quot; timestamp (int) of the available cache record" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="88">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="109" package="Default">
        <name>save</name>
        <type>function</type>
        <docblock line="97">
          <description><![CDATA[Save some string datas into a cache record]]></description>
          <long-description><![CDATA[<p>Note : $data is always "string" (serialization is done by the
core not by the backend)</p>]]></long-description>
          <tag line="97" name="param" description="datas to cache" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="97" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="97" name="param" description="array of strings, the cache record will be tagged by each string entry" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="97" name="param" description="if != false, set a specific lifetime for this cache record (null =&gt; infinite lifetime)" type="int" variable="$specificLifetime">
            <type by_reference="false">int</type>
          </tag>
          <tag line="97" name="return" description="true if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="109">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="109">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="109">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
        <argument line="109">
          <name>$specificLifetime</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="125" package="Default">
        <name>remove</name>
        <type>function</type>
        <docblock line="119">
          <description><![CDATA[Remove a cache record]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="119" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="119" name="return" description="true if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="125">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="145" package="Default">
        <name>clean</name>
        <type>function</type>
        <docblock line="130">
          <description><![CDATA[Clean some cache records]]></description>
          <long-description><![CDATA[<p>Available modes are :
'all' (default)  => remove all cache entries ($tags is not used)
'old'            => unsupported
'matchingTag'    => unsupported
'notMatchingTag' => unsupported
'matchingAnyTag' => unsupported</p>]]></long-description>
          <tag line="130" name="param" description="clean mode" type="string" variable="$mode">
            <type by_reference="false">string</type>
          </tag>
          <tag line="130" name="param" description="array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="130" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="130" name="return" description="true if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="145">
          <name>$mode</name>
          <default><![CDATA[Zend_Cache::CLEANING_MODE_ALL]]></default>
          <type/>
        </argument>
        <argument line="145">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="173" package="Default">
        <name>isAutomaticCleaningAvailable</name>
        <type>function</type>
        <docblock line="165">
          <description><![CDATA[Return true if the automatic cleaning is available for the backend]]></description>
          <long-description><![CDATA[<p>DEPRECATED : use getCapabilities() instead</p>]]></long-description>
          <tag line="165" name="deprecated" description=""/>
          <tag line="165" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="184" package="Default">
        <name>getFillingPercentage</name>
        <type>function</type>
        <docblock line="178">
          <description><![CDATA[Return the filling percentage of the backend storage]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="178" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="178" name="return" description="integer between 0 and 100" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="203" package="Default">
        <name>getTags</name>
        <type>function</type>
        <docblock line="198">
          <description><![CDATA[Return an array of stored tags]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="198" name="return" description="array of stored tags (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="217" package="Default">
        <name>getIdsMatchingTags</name>
        <type>function</type>
        <docblock line="209">
          <description><![CDATA[Return an array of stored cache ids which match given tags]]></description>
          <long-description><![CDATA[<p>In case of multiple tags, a logical AND is made between tags</p>]]></long-description>
          <tag line="209" name="param" description="array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="209" name="return" description="array of matching cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="217">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="231" package="Default">
        <name>getIdsNotMatchingTags</name>
        <type>function</type>
        <docblock line="223">
          <description><![CDATA[Return an array of stored cache ids which don't match given tags]]></description>
          <long-description><![CDATA[<p>In case of multiple tags, a logical OR is made between tags</p>]]></long-description>
          <tag line="223" name="param" description="array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="223" name="return" description="array of not matching cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="231">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="245" package="Default">
        <name>getIdsMatchingAnyTags</name>
        <type>function</type>
        <docblock line="237">
          <description><![CDATA[Return an array of stored cache ids which match any given tags]]></description>
          <long-description><![CDATA[<p>In case of multiple tags, a logical AND is made between tags</p>]]></long-description>
          <tag line="237" name="param" description="array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="237" name="return" description="array of any matching cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="245">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="256" package="Default">
        <name>getIds</name>
        <type>function</type>
        <docblock line="251">
          <description><![CDATA[Return an array of stored cache ids]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="251" name="return" description="array of stored cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="278" package="Default">
        <name>getMetadatas</name>
        <type>function</type>
        <docblock line="267">
          <description><![CDATA[Return an array of metadatas for the given cache id]]></description>
          <long-description><![CDATA[<p>The array must include these keys :
- expire : the expire timestamp
- tags : a string array of tags
- mtime : timestamp of last modification time</p>]]></long-description>
          <tag line="267" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="267" name="return" description="array of metadatas (false if the cache id is not found)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="278">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="304" package="Default">
        <name>touch</name>
        <type>function</type>
        <docblock line="297">
          <description><![CDATA[Give (if possible) an extra lifetime to the given cache id]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="297" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="297" name="param" description="" type="int" variable="$extraLifetime">
            <type by_reference="false">int</type>
          </tag>
          <tag line="297" name="return" description="true if ok" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="304">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="304">
          <name>$extraLifetime</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="337" package="Default">
        <name>getCapabilities</name>
        <type>function</type>
        <docblock line="323">
          <description><![CDATA[Return an associative array of capabilities (booleans) of the backend]]></description>
          <long-description><![CDATA[<p>The array must include these keys :
- automatic_cleaning (is automating cleaning necessary)
- tags (are tags supported)
- expired_read (is it possible to read expired cache records
                (for doNotTestCacheValidity option for example))
- priority does the backend deal with priority when saving
- infinite_lifetime (is infinite lifetime can work with this backend)
- get_list (is it possible to get the list of cache ids and the complete list of tags)</p>]]></long-description>
          <tag line="323" name="return" description="associative of with capabilities" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Cache/Backend/ZendServer/Disk.php" hash="42fdaa06110e84864e8e426e39fd67f7" package="Zend\Cache\Zend\Cache\Backend">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Cache"/>
      <tag line="2" name="subpackage" description="Zend_Cache_Backend"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Disk.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="31" code="50005">No short description for class Zend_Cache_Backend_ZendServer_Disk</critical>
    </parse_markers>
    <include line="25" type="Require Once" package="Default">
      <name>Zend/Cache/Backend/Interface.php</name>
      <docblock line="24">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="24" name="see" description="\Zend_Cache_Backend_Interface" refers="\Zend_Cache_Backend_Interface"/>
      </docblock>
    </include>
    <include line="28" type="Require Once" package="Default">
      <name>Zend/Cache/Backend/ZendServer.php</name>
      <docblock line="27">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="27" name="see" description="\Zend_Cache_Backend_ZendServer" refers="\Zend_Cache_Backend_ZendServer"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="37" package="Zend\Cache\Zend\Cache\Backend">
      <name>Zend_Cache_Backend_ZendServer_Disk</name>
      <full_name>\Zend_Cache_Backend_ZendServer_Disk</full_name>
      <extends>\Zend_Cache_Backend_ZendServer</extends>
      <extends>\Zend_Cache_Backend_Interface</extends>
      <docblock line="31">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="31" name="package" description="Zend_Cache"/>
        <tag line="31" name="subpackage" description="Zend_Cache_Backend"/>
        <tag line="31" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="31" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="45" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="39">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="39" name="param" description="associative array of options" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="39" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
        </docblock>
        <argument line="45">
          <name>$options</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="61" package="Default">
        <name>_store</name>
        <type>function</type>
        <docblock line="53">
          <description><![CDATA[Store data]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="53" name="param" description="Object to store" type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="53" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="53" name="param" description="Time to live in seconds" type="int" variable="$timeToLive">
            <type by_reference="false">int</type>
          </tag>
          <tag line="53" name="return" description="true if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="61">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="61">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="61">
          <name>$timeToLive</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="77" package="Default">
        <name>_fetch</name>
        <type>function</type>
        <docblock line="72">
          <description><![CDATA[Fetch data]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="72" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="77">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="88" package="Default">
        <name>_unset</name>
        <type>function</type>
        <docblock line="82">
          <description><![CDATA[Unset data]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="82" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="82" name="return" description="true if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="88">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="96" package="Default">
        <name>_clear</name>
        <type>function</type>
        <docblock line="93">
          <description><![CDATA[Clear cache]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Cache/Backend/ZendServer/ShMem.php" hash="b1fe08f997435ab7739ec0b40dbe3ed3" package="Zend\Cache\Zend\Cache\Backend">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Cache"/>
      <tag line="2" name="subpackage" description="Zend_Cache_Backend"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: ShMem.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="31" code="50005">No short description for class Zend_Cache_Backend_ZendServer_ShMem</critical>
    </parse_markers>
    <include line="25" type="Require Once" package="Default">
      <name>Zend/Cache/Backend/Interface.php</name>
      <docblock line="24">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="24" name="see" description="\Zend_Cache_Backend_Interface" refers="\Zend_Cache_Backend_Interface"/>
      </docblock>
    </include>
    <include line="28" type="Require Once" package="Default">
      <name>Zend/Cache/Backend/ZendServer.php</name>
      <docblock line="27">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="27" name="see" description="\Zend_Cache_Backend_ZendServer" refers="\Zend_Cache_Backend_ZendServer"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="37" package="Zend\Cache\Zend\Cache\Backend">
      <name>Zend_Cache_Backend_ZendServer_ShMem</name>
      <full_name>\Zend_Cache_Backend_ZendServer_ShMem</full_name>
      <extends>\Zend_Cache_Backend_ZendServer</extends>
      <extends>\Zend_Cache_Backend_Interface</extends>
      <docblock line="31">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="31" name="package" description="Zend_Cache"/>
        <tag line="31" name="subpackage" description="Zend_Cache_Backend"/>
        <tag line="31" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="31" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="45" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="39">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="39" name="param" description="associative array of options" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="39" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
        </docblock>
        <argument line="45">
          <name>$options</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="61" package="Default">
        <name>_store</name>
        <type>function</type>
        <docblock line="53">
          <description><![CDATA[Store data]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="53" name="param" description="Object to store" type="mixed" variable="$data">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="53" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="53" name="param" description="Time to live in seconds" type="int" variable="$timeToLive">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="61">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="61">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="61">
          <name>$timeToLive</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="77" package="Default">
        <name>_fetch</name>
        <type>function</type>
        <docblock line="72">
          <description><![CDATA[Fetch data]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="72" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="77">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="88" package="Default">
        <name>_unset</name>
        <type>function</type>
        <docblock line="82">
          <description><![CDATA[Unset data]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="82" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="82" name="return" description="true if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="88">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="96" package="Default">
        <name>_clear</name>
        <type>function</type>
        <docblock line="93">
          <description><![CDATA[Clear cache]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Cache/Backend/Static.php" hash="aaf545fa09291d0a3c89e95dac666e76" package="Zend\Cache\Zend\Cache\Backend">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Cache"/>
      <tag line="2" name="subpackage" description="Zend_Cache_Backend"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Static.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <error line="259" code="50015">Argument $path is missing from the Docblock of _createDirectoriesFor()</error>
      <error line="275" code="50015">Argument $data is missing from the Docblock of _isSerialized()</error>
      <error line="457" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $cache in setInnerCache()</error>
      <critical line="33" code="50005">No short description for class Zend_Cache_Backend_Static</critical>
    </parse_markers>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Cache/Backend/Interface.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Cache_Backend_Interface" refers="\Zend_Cache_Backend_Interface"/>
      </docblock>
    </include>
    <include line="31" type="Require Once" package="Default">
      <name>Zend/Cache/Backend.php</name>
      <docblock line="28">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="28" name="see" description="\Zend_Cache_Backend" refers="\Zend_Cache_Backend"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="39" package="Zend\Cache\Zend\Cache\Backend">
      <name>Zend_Cache_Backend_Static</name>
      <full_name>\Zend_Cache_Backend_Static</full_name>
      <extends>\Zend_Cache_Backend</extends>
      <extends>\Zend_Cache_Backend_Interface</extends>
      <docblock line="33">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="33" name="package" description="Zend_Cache"/>
        <tag line="33" name="subpackage" description="Zend_Cache_Backend"/>
        <tag line="33" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="33" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <constant namespace="default" line="43">
        <name>INNER_CACHE_NAME</name>
        <value><![CDATA['zend_cache_backend_static_tagcache']]></value>
      </constant>
      <property final="false" static="false" visibility="protected" line="49" package="Default">
        <name>$_options</name>
        <default><![CDATA[array(
        'public_dir'            => null,
        'sub_dir'               => 'html',
        'file_extension'        => '.html',
        'index_filename'        => 'index',
        'file_locking'          => true,
        'cache_file_umask'      => 0600,
        'cache_directory_umask' => 0700,
        'debug_header'          => false,
        'tag_cache'             => null,
        'disable_caching'       => false
    )]]></default>
        <docblock line="45">
          <description><![CDATA[Static backend options]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="45" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="66" package="Default">
        <name>$_tagCache</name>
        <default><![CDATA[null]]></default>
        <docblock line="62">
          <description><![CDATA[Cache for handling tags]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="62" name="var" description="" type="\Zend_Cache_Core">
            <type by_reference="false">\Zend_Cache_Core</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="72" package="Default">
        <name>$_tagged</name>
        <default><![CDATA[null]]></default>
        <docblock line="68">
          <description><![CDATA[Tagged items]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="68" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="83" package="Default">
        <name>setOption</name>
        <type>function</type>
        <docblock line="74">
          <description><![CDATA[Interceptor child method to handle the case where an Inner
Cache object is being set since it's not supported by the
standard backend interface]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="74" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="74" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="74" name="return" description="" type="\Zend_Cache_Backend_Static">
            <type by_reference="false">\Zend_Cache_Backend_Static</type>
          </tag>
        </docblock>
        <argument line="83">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="83">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="100" package="Default">
        <name>getOption</name>
        <type>function</type>
        <docblock line="93">
          <description><![CDATA[Retrieve any option via interception of the parent's statically held
options including the local option for a tag cache.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="93" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="93" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="100">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="124" package="Default">
        <name>load</name>
        <type>function</type>
        <docblock line="115">
          <description><![CDATA[Test if a cache is available for the given id and (if yes) return it (false else)]]></description>
          <long-description><![CDATA[<p>Note : return value is always "string" (unserialization is done by the core not by the backend)</p>]]></long-description>
          <tag line="115" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="115" name="param" description="If set to true, the cache validity won't be tested" type="boolean" variable="$doNotTestCacheValidity">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="115" name="return" description="cached datas" type="string|false">
            <type by_reference="false">string</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="124">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="124">
          <name>$doNotTestCacheValidity</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="158" package="Default">
        <name>test</name>
        <type>function</type>
        <docblock line="152">
          <description><![CDATA[Test if a cache is available or not (for the given id)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="152" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="152" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="158">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="201" package="Default">
        <name>save</name>
        <type>function</type>
        <docblock line="189">
          <description><![CDATA[Save some string datas into a cache record]]></description>
          <long-description><![CDATA[<p>Note : $data is always "string" (serialization is done by the
core not by the backend)</p>]]></long-description>
          <tag line="189" name="param" description="Datas to cache" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="189" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="189" name="param" description="Array of strings, the cache record will be tagged by each string entry" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="189" name="param" description="If != false, set a specific lifetime for this cache record (null =&gt; infinite lifetime)" type="int" variable="$specificLifetime">
            <type by_reference="false">int</type>
          </tag>
          <tag line="189" name="return" description="true if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="201">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="201">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="201">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
        <argument line="201">
          <name>$specificLifetime</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="262" package="Default">
        <name>_createDirectoriesFor</name>
        <type>function</type>
        <docblock line="259">
          <description><![CDATA[Recursively create the directories needed to write the static file]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
        <argument line="262">
          <name>$path</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="284" package="Default">
        <name>_isSerialized</name>
        <type>function</type>
        <docblock line="275">
          <description><![CDATA[Detect serialization of data (cannot predict since this is the only way
to obey the interface yet pass in another parameter).]]></description>
          <long-description><![CDATA[<p>In future, ZF 2.0, check if we can just avoid the interface restraints.</p>

<p>This format is the only valid one possible for the class, so it's simple
to just run a regular expression for the starting serialized format.</p>]]></long-description>
        </docblock>
        <argument line="284">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="295" package="Default">
        <name>remove</name>
        <type>function</type>
        <docblock line="289">
          <description><![CDATA[Remove a cache record]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="289" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="289" name="return" description="True if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="295">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="330" package="Default">
        <name>removeRecursively</name>
        <type>function</type>
        <docblock line="322">
          <description><![CDATA[Remove a cache record recursively for the given directory matching a
REQUEST_URI based relative path (deletes the actual file matching this
in addition to the matching directory)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="322" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="322" name="return" description="True if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="330">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="383" package="Default">
        <name>clean</name>
        <type>function</type>
        <docblock line="366">
          <description><![CDATA[Clean some cache records]]></description>
          <long-description><![CDATA[<p>Available modes are :
Zend_Cache::CLEANING_MODE_ALL (default)    => remove all cache entries ($tags is not used)
Zend_Cache::CLEANING_MODE_OLD              => remove too old cache entries ($tags is not used)
Zend_Cache::CLEANING_MODE_MATCHING_TAG     => remove cache entries matching all given tags
                                              ($tags can be an array of strings or a single string)
Zend_Cache::CLEANING_MODE_NOT_MATCHING_TAG => remove cache entries not {matching one of the given tags}
                                              ($tags can be an array of strings or a single string)
Zend_Cache::CLEANING_MODE_MATCHING_ANY_TAG => remove cache entries matching any given tags
                                              ($tags can be an array of strings or a single string)</p>]]></long-description>
          <tag line="366" name="param" description="Clean mode" type="string" variable="$mode">
            <type by_reference="false">string</type>
          </tag>
          <tag line="366" name="param" description="Array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="366" name="return" description="true if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="383">
          <name>$mode</name>
          <default><![CDATA[Zend_Cache::CLEANING_MODE_ALL]]></default>
          <type/>
        </argument>
        <argument line="383">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="466" package="Default">
        <name>setInnerCache</name>
        <type>function</type>
        <docblock line="457">
          <description><![CDATA[Set an Inner Cache, used here primarily to store Tags associated
with caches created by this backend. Note: If Tags are lost, the cache
should be completely cleaned as the mapping of tags to caches will
have been irrevocably lost.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="457" name="param" description="Zend_Cache_Core" type="" variable="$cache"/>
          <tag line="457" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="466">
          <name>$cache</name>
          <default><![CDATA[]]></default>
          <type>Zend_Cache_Core</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="477" package="Default">
        <name>getInnerCache</name>
        <type>function</type>
        <docblock line="472">
          <description><![CDATA[Get the Inner Cache if set]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="472" name="return" description="" type="\Zend_Cache_Core">
            <type by_reference="false">\Zend_Cache_Core</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="491" package="Default">
        <name>_verifyPath</name>
        <type>function</type>
        <docblock line="485">
          <description><![CDATA[Verify path exists and is non-empty]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="485" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="485" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="491">
          <name>$path</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="503" package="Default">
        <name>_detectId</name>
        <type>function</type>
        <docblock line="498">
          <description><![CDATA[Determine the page to save from the request]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="498" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="default" line="518" package="Default">
        <name>_validateIdOrTag</name>
        <type>function</type>
        <docblock line="508">
          <description><![CDATA[Validate a cache id or a tag (security, reliable filenames, reserved prefixes...)]]></description>
          <long-description><![CDATA[<p>Throw an exception if a problem is found</p>]]></long-description>
          <tag line="508" name="param" description="Cache id or tag" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="508" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="508" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="508" name="deprecated" description="Not usable until perhaps ZF 2.0"/>
        </docblock>
        <argument line="518">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="546" package="Default">
        <name>_octdec</name>
        <type>function</type>
        <docblock line="539">
          <description><![CDATA[Detect an octal string and return its octal value for file permission ops
otherwise return the non-string (assumed octal or decimal int already)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="539" name="param" description="The potential octal in need of conversion" type="string" variable="$val">
            <type by_reference="false">string</type>
          </tag>
          <tag line="539" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="546">
          <name>$val</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="560" package="Default">
        <name>_decodeId</name>
        <type>function</type>
        <docblock line="554">
          <description><![CDATA[Decode a request URI from the provided ID]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="554" name="param" description="" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="554" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="560">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Cache/Backend/ZendPlatform.php" hash="9699a7e582d0dca90cd4f92f3cdcfd05" package="Zend\Cache\Zend\Cache\Backend">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Cache"/>
      <tag line="2" name="subpackage" description="Zend_Cache_Backend"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: ZendPlatform.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Cache/Backend.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Cache_Backend_Interface" refers="\Zend_Cache_Backend_Interface"/>
      </docblock>
    </include>
    <include line="31" type="Require Once" package="Default">
      <name>Zend/Cache/Backend/Interface.php</name>
      <docblock line="28">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="28" name="see" description="\Zend_Cache_Backend_Interface" refers="\Zend_Cache_Backend_Interface"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="42" package="Zend\Cache\Zend\Cache\Backend">
      <name>Zend_Cache_Backend_ZendPlatform</name>
      <full_name>\Zend_Cache_Backend_ZendPlatform</full_name>
      <extends>\Zend_Cache_Backend</extends>
      <extends>\Zend_Cache_Backend_Interface</extends>
      <docblock line="34">
        <description><![CDATA[Impementation of Zend Cache Backend using the Zend Platform (Output Content Caching)]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="34" name="package" description="Zend_Cache"/>
        <tag line="34" name="subpackage" description="Zend_Cache_Backend"/>
        <tag line="34" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="34" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <constant namespace="default" line="47" package="Default">
        <name>TAGS_PREFIX</name>
        <value><![CDATA["internal_ZPtag:"]]></value>
        <docblock line="44">
          <description><![CDATA[internal ZP prefix]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="57" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="49">
          <description><![CDATA[Constructor
Validate that the Zend Platform is loaded and licensed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="49" name="param" description="Associative array of options" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="49" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="49" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="57">
          <name>$options</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="86" package="Default">
        <name>load</name>
        <type>function</type>
        <docblock line="79">
          <description><![CDATA[Test if a cache is available for the given id and (if yes) return it (false else)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="79" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="79" name="param" description="If set to true, the cache validity won't be tested" type="boolean" variable="$doNotTestCacheValidity">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="79" name="return" description="Cached data (or false)" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="86">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="86">
          <name>$doNotTestCacheValidity</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="109" package="Default">
        <name>test</name>
        <type>function</type>
        <docblock line="103">
          <description><![CDATA[Test if a cache is available or not (for the given id)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="103" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="103" name="return" description="false (a cache is not available) or &quot;last modified&quot; timestamp (int) of the available cache record" type="mixed|false">
            <type by_reference="false">mixed</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="109">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="130" package="Default">
        <name>save</name>
        <type>function</type>
        <docblock line="118">
          <description><![CDATA[Save some string datas into a cache record]]></description>
          <long-description><![CDATA[<p>Note : $data is always "string" (serialization is done by the
core not by the backend)</p>]]></long-description>
          <tag line="118" name="param" description="Data to cache" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="118" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="118" name="param" description="Array of strings, the cache record will be tagged by each string entry" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="118" name="param" description="If != false, set a specific lifetime for this cache record (null =&gt; infinite lifetime)" type="int" variable="$specificLifetime">
            <type by_reference="false">int</type>
          </tag>
          <tag line="118" name="return" description="true if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="130">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="130">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="130">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
        <argument line="130">
          <name>$specificLifetime</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="161" package="Default">
        <name>remove</name>
        <type>function</type>
        <docblock line="155">
          <description><![CDATA[Remove a cache record]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="155" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="155" name="return" description="True if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="161">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="185" package="Default">
        <name>clean</name>
        <type>function</type>
        <docblock line="167">
          <description><![CDATA[Clean some cache records]]></description>
          <long-description><![CDATA[<p>Available modes are :
Zend_Cache::CLEANING_MODE_ALL (default)    => remove all cache entries ($tags is not used)
Zend_Cache::CLEANING_MODE_OLD              => remove too old cache entries ($tags is not used)
                                              This mode is not supported in this backend
Zend_Cache::CLEANING_MODE_MATCHING_TAG     => remove cache entries matching all given tags
                                              ($tags can be an array of strings or a single string)
Zend_Cache::CLEANING_MODE_NOT_MATCHING_TAG => unsupported
Zend_Cache::CLEANING_MODE_MATCHING_ANY_TAG => remove cache entries matching any given tags
                                              ($tags can be an array of strings or a single string)</p>]]></long-description>
          <tag line="167" name="param" description="Clean mode" type="string" variable="$mode">
            <type by_reference="false">string</type>
          </tag>
          <tag line="167" name="param" description="Array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="167" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="167" name="return" description="True if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="185">
          <name>$mode</name>
          <default><![CDATA[Zend_Cache::CLEANING_MODE_ALL]]></default>
          <type/>
        </argument>
        <argument line="185">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="260" package="Default">
        <name>_clean</name>
        <type>function</type>
        <docblock line="251">
          <description><![CDATA[Clean a directory and recursivly go over it's subdirectories]]></description>
          <long-description><![CDATA[<p>Remove all the cached files that need to be cleaned (according to mode and files mtime)</p>]]></long-description>
          <tag line="251" name="param" description="Path of directory ot clean" type="string" variable="$dir">
            <type by_reference="false">string</type>
          </tag>
          <tag line="251" name="param" description="The same parameter as in Zend_Cache_Backend_ZendPlatform::clean()" type="string" variable="$mode">
            <type by_reference="false">string</type>
          </tag>
          <tag line="251" name="return" description="True if ok" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="260">
          <name>$dir</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="260">
          <name>$mode</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="300" package="Default">
        <name>_remove</name>
        <type>function</type>
        <docblock line="291">
          <description><![CDATA[Remove a file]]></description>
          <long-description><![CDATA[<p>If we can't remove the file (because of locks or any problem), we will touch
the file to invalidate it</p>]]></long-description>
          <tag line="291" name="param" description="Complete file path" type="string" variable="$file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="291" name="return" description="True if ok" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="300">
          <name>$file</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Cache/Backend/TwoLevels.php" hash="83e1f08d51817050630004f0d9f61796" package="Zend\Cache\Zend\Cache\Backend">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Cache"/>
      <tag line="2" name="subpackage" description="Zend_Cache_Backend"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: TwoLevels.php 24254 2011-07-22 12:04:41Z mabe $"/>
    </docblock>
    <parse_markers>
      <error line="512" code="50010">No DocBlock was found for method _getFastFillingPercentage()</error>
      <critical line="35" code="50005">No short description for class Zend_Cache_Backend_TwoLevels</critical>
    </parse_markers>
    <include line="27" type="Require Once" package="Default">
      <name>Zend/Cache/Backend/ExtendedInterface.php</name>
      <docblock line="24">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="24" name="see" description="\Zend_Cache_Backend_ExtendedInterface" refers="\Zend_Cache_Backend_ExtendedInterface"/>
      </docblock>
    </include>
    <include line="32" type="Require Once" package="Default">
      <name>Zend/Cache/Backend.php</name>
      <docblock line="29">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="29" name="see" description="\Zend_Cache_Backend" refers="\Zend_Cache_Backend"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="42" package="Zend\Cache\Zend\Cache\Backend">
      <name>Zend_Cache_Backend_TwoLevels</name>
      <full_name>\Zend_Cache_Backend_TwoLevels</full_name>
      <extends>\Zend_Cache_Backend</extends>
      <extends>\Zend_Cache_Backend_ExtendedInterface</extends>
      <docblock line="35">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="package" description="Zend_Cache"/>
        <tag line="35" name="subpackage" description="Zend_Cache_Backend"/>
        <tag line="35" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="35" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="80" package="Default">
        <name>$_options</name>
        <default><![CDATA[array(
        'slow_backend' => 'File',
        'fast_backend' => 'Apc',
        'slow_backend_options' => array(),
        'fast_backend_options' => array(),
        'stats_update_factor' => 10,
        'slow_backend_custom_naming' => false,
        'fast_backend_custom_naming' => false,
        'slow_backend_autoload' => false,
        'fast_backend_autoload' => false,
        'auto_refresh_fast_cache' => true
    )]]></default>
        <docblock line="44">
          <description><![CDATA[Available options]]></description>
          <long-description><![CDATA[<p>=====> (string) slow_backend :
- Slow backend name
- Must implement the Zend_Cache_Backend_ExtendedInterface
- Should provide a big storage</p>

<p>=====> (string) fast_backend :
- Flow backend name
- Must implement the Zend_Cache_Backend_ExtendedInterface
- Must be much faster than slow_backend</p>

<p>=====> (array) slow_backend_options :
- Slow backend options (see corresponding backend)</p>

<p>=====> (array) fast_backend_options :
- Fast backend options (see corresponding backend)</p>

<p>=====> (int) stats_update_factor :
- Disable / Tune the computation of the fast backend filling percentage
- When saving a record into cache :
    1               => systematic computation of the fast backend filling percentage
    x (integer) > 1 => computation of the fast backend filling percentage randomly 1 times on x cache write</p>

<p>=====> (boolean) slow_backend_custom_naming :
=====> (boolean) fast_backend_custom_naming :
=====> (boolean) slow_backend_autoload :
=====> (boolean) fast_backend_autoload :
- See Zend_Cache::factory() method</p>

<p>=====> (boolean) auto_refresh_fast_cache
- If true, auto refresh the fast cache when a cache record is hit</p>]]></long-description>
          <tag line="44" name="var" description="available options" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="98" package="Default">
        <name>$_slowBackend</name>
        <default><![CDATA[]]></default>
        <docblock line="93">
          <description><![CDATA[Slow Backend]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="93" name="var" description="" type="\Zend_Cache_Backend_ExtendedInterface">
            <type by_reference="false">\Zend_Cache_Backend_ExtendedInterface</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="105" package="Default">
        <name>$_fastBackend</name>
        <default><![CDATA[]]></default>
        <docblock line="100">
          <description><![CDATA[Fast Backend]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="100" name="var" description="" type="\Zend_Cache_Backend_ExtendedInterface">
            <type by_reference="false">\Zend_Cache_Backend_ExtendedInterface</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="112" package="Default">
        <name>$_fastBackendFillingPercentage</name>
        <default><![CDATA[null]]></default>
        <docblock line="107">
          <description><![CDATA[Cache for the fast backend filling percentage]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="107" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="121" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="114">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="114" name="param" description="Associative array of options" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="114" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="114" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="121">
          <name>$options</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="167" package="Default">
        <name>test</name>
        <type>function</type>
        <docblock line="161">
          <description><![CDATA[Test if a cache is available or not (for the given id)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="161" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="161" name="return" description="(a cache is not available) or &quot;last modified&quot; timestamp (int) of the available cache record" type="mixed|false">
            <type by_reference="false">mixed</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="167">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="190" package="Default">
        <name>save</name>
        <type>function</type>
        <docblock line="177">
          <description><![CDATA[Save some string datas into a cache record]]></description>
          <long-description><![CDATA[<p>Note : $data is always "string" (serialization is done by the
core not by the backend)</p>]]></long-description>
          <tag line="177" name="param" description="Datas to cache" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="177" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="177" name="param" description="Array of strings, the cache record will be tagged by each string entry" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="177" name="param" description="If != false, set a specific lifetime for this cache record (null =&gt; infinite lifetime)" type="int" variable="$specificLifetime">
            <type by_reference="false">int</type>
          </tag>
          <tag line="177" name="param" description="integer between 0 (very low priority) and 10 (maximum priority) used by some particular backends" type="int" variable="$priority">
            <type by_reference="false">int</type>
          </tag>
          <tag line="177" name="return" description="true if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="190">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="190">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="190">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
        <argument line="190">
          <name>$specificLifetime</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
        <argument line="190">
          <name>$priority</name>
          <default><![CDATA[8]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="224" package="Default">
        <name>load</name>
        <type>function</type>
        <docblock line="215">
          <description><![CDATA[Test if a cache is available for the given id and (if yes) return it (false else)]]></description>
          <long-description><![CDATA[<p>Note : return value is always "string" (unserialization is done by the core not by the backend)</p>]]></long-description>
          <tag line="215" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="215" name="param" description="If set to true, the cache validity won't be tested" type="boolean" variable="$doNotTestCacheValidity">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="215" name="return" description="cached datas" type="string|false">
            <type by_reference="false">string</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="224">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="224">
          <name>$doNotTestCacheValidity</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="259" package="Default">
        <name>remove</name>
        <type>function</type>
        <docblock line="253">
          <description><![CDATA[Remove a cache record]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="253" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="253" name="return" description="True if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="259">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="284" package="Default">
        <name>clean</name>
        <type>function</type>
        <docblock line="266">
          <description><![CDATA[Clean some cache records]]></description>
          <long-description><![CDATA[<p>Available modes are :
Zend_Cache::CLEANING_MODE_ALL (default)    => remove all cache entries ($tags is not used)
Zend_Cache::CLEANING_MODE_OLD              => remove too old cache entries ($tags is not used)
Zend_Cache::CLEANING_MODE_MATCHING_TAG     => remove cache entries matching all given tags
                                              ($tags can be an array of strings or a single string)
Zend_Cache::CLEANING_MODE_NOT_MATCHING_TAG => remove cache entries not {matching one of the given tags}
                                              ($tags can be an array of strings or a single string)
Zend_Cache::CLEANING_MODE_MATCHING_ANY_TAG => remove cache entries matching any given tags
                                              ($tags can be an array of strings or a single string)</p>]]></long-description>
          <tag line="266" name="param" description="Clean mode" type="string" variable="$mode">
            <type by_reference="false">string</type>
          </tag>
          <tag line="266" name="param" description="Array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="266" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="266" name="return" description="true if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="284">
          <name>$mode</name>
          <default><![CDATA[Zend_Cache::CLEANING_MODE_ALL]]></default>
          <type/>
        </argument>
        <argument line="284">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="332" package="Default">
        <name>getIds</name>
        <type>function</type>
        <docblock line="327">
          <description><![CDATA[Return an array of stored cache ids]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="327" name="return" description="array of stored cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="342" package="Default">
        <name>getTags</name>
        <type>function</type>
        <docblock line="337">
          <description><![CDATA[Return an array of stored tags]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="337" name="return" description="array of stored tags (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="355" package="Default">
        <name>getIdsMatchingTags</name>
        <type>function</type>
        <docblock line="347">
          <description><![CDATA[Return an array of stored cache ids which match given tags]]></description>
          <long-description><![CDATA[<p>In case of multiple tags, a logical AND is made between tags</p>]]></long-description>
          <tag line="347" name="param" description="array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="347" name="return" description="array of matching cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="355">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="368" package="Default">
        <name>getIdsNotMatchingTags</name>
        <type>function</type>
        <docblock line="360">
          <description><![CDATA[Return an array of stored cache ids which don't match given tags]]></description>
          <long-description><![CDATA[<p>In case of multiple tags, a logical OR is made between tags</p>]]></long-description>
          <tag line="360" name="param" description="array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="360" name="return" description="array of not matching cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="368">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="381" package="Default">
        <name>getIdsMatchingAnyTags</name>
        <type>function</type>
        <docblock line="373">
          <description><![CDATA[Return an array of stored cache ids which match any given tags]]></description>
          <long-description><![CDATA[<p>In case of multiple tags, a logical AND is made between tags</p>]]></long-description>
          <tag line="373" name="param" description="array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="373" name="return" description="array of any matching cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="381">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="391" package="Default">
        <name>getFillingPercentage</name>
        <type>function</type>
        <docblock line="386">
          <description><![CDATA[Return the filling percentage of the backend storage]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="386" name="return" description="integer between 0 and 100" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="407" package="Default">
        <name>getMetadatas</name>
        <type>function</type>
        <docblock line="396">
          <description><![CDATA[Return an array of metadatas for the given cache id]]></description>
          <long-description><![CDATA[<p>The array must include these keys :
- expire : the expire timestamp
- tags : a string array of tags
- mtime : timestamp of last modification time</p>]]></long-description>
          <tag line="396" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="396" name="return" description="array of metadatas (false if the cache id is not found)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="407">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="419" package="Default">
        <name>touch</name>
        <type>function</type>
        <docblock line="412">
          <description><![CDATA[Give (if possible) an extra lifetime to the given cache id]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="412" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="412" name="param" description="" type="int" variable="$extraLifetime">
            <type by_reference="false">int</type>
          </tag>
          <tag line="412" name="return" description="true if ok" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="419">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="419">
          <name>$extraLifetime</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="438" package="Default">
        <name>getCapabilities</name>
        <type>function</type>
        <docblock line="424">
          <description><![CDATA[Return an associative array of capabilities (booleans) of the backend]]></description>
          <long-description><![CDATA[<p>The array must include these keys :
- automatic_cleaning (is automating cleaning necessary)
- tags (are tags supported)
- expired_read (is it possible to read expired cache records
                (for doNotTestCacheValidity option for example))
- priority does the backend deal with priority when saving
- infinite_lifetime (is infinite lifetime can work with this backend)
- get_list (is it possible to get the list of cache ids and the complete list of tags)</p>]]></long-description>
          <tag line="424" name="return" description="associative of with capabilities" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="459" package="Default">
        <name>_prepareData</name>
        <type>function</type>
        <docblock line="451">
          <description><![CDATA[Prepare a serialized array to store datas and metadatas informations]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="451" name="param" description="data to store" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="451" name="param" description="original lifetime" type="int" variable="$lifetime">
            <type by_reference="false">int</type>
          </tag>
          <tag line="451" name="param" description="priority" type="int" variable="$priority">
            <type by_reference="false">int</type>
          </tag>
          <tag line="451" name="return" description="serialize array to store into cache" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="459">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="459">
          <name>$lifetime</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="459">
          <name>$priority</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="481" package="Default">
        <name>_getFastLifetime</name>
        <type>function</type>
        <docblock line="473">
          <description><![CDATA[Compute and return the lifetime for the fast backend]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="473" name="param" description="original lifetime" type="int" variable="$lifetime">
            <type by_reference="false">int</type>
          </tag>
          <tag line="473" name="param" description="priority" type="int" variable="$priority">
            <type by_reference="false">int</type>
          </tag>
          <tag line="473" name="param" description="maximum lifetime" type="int" variable="$maxLifetime">
            <type by_reference="false">int</type>
          </tag>
          <tag line="473" name="return" description="lifetime for the fast backend" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="481">
          <name>$lifetime</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="481">
          <name>$priority</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="481">
          <name>$maxLifetime</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="506" package="Default">
        <name>___expire</name>
        <type>function</type>
        <docblock line="499">
          <description><![CDATA[PUBLIC METHOD FOR UNIT TESTING ONLY !]]></description>
          <long-description><![CDATA[<p>Force a cache record to expire</p>]]></long-description>
          <tag line="499" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="506">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="512">
        <name>_getFastFillingPercentage</name>
        <type>function</type>
        <argument line="512">
          <name>$mode</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Cache/Backend/BlackHole.php" hash="7e3d0f7429032a8d8ce6b58998cf7ff0" package="Zend\Cache\Zend\Cache\Backend">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Cache"/>
      <tag line="2" name="subpackage" description="Zend_Cache_Backend"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: BlackHole.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="33" code="50005">No short description for class Zend_Cache_Backend_BlackHole</critical>
    </parse_markers>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Cache/Backend/ExtendedInterface.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Cache_Backend_Interface" refers="\Zend_Cache_Backend_Interface"/>
      </docblock>
    </include>
    <include line="31" type="Require Once" package="Default">
      <name>Zend/Cache/Backend.php</name>
      <docblock line="28">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="28" name="see" description="\Zend_Cache_Backend" refers="\Zend_Cache_Backend"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="39" package="Zend\Cache\Zend\Cache\Backend">
      <name>Zend_Cache_Backend_BlackHole</name>
      <full_name>\Zend_Cache_Backend_BlackHole</full_name>
      <extends>\Zend_Cache_Backend</extends>
      <extends>\Zend_Cache_Backend_ExtendedInterface</extends>
      <docblock line="33">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="33" name="package" description="Zend_Cache"/>
        <tag line="33" name="subpackage" description="Zend_Cache_Backend"/>
        <tag line="33" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="33" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="50" package="Default">
        <name>load</name>
        <type>function</type>
        <docblock line="43">
          <description><![CDATA[Test if a cache is available for the given id and (if yes) return it (false else)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="43" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="43" name="param" description="if set to true, the cache validity won't be tested" type="boolean" variable="$doNotTestCacheValidity">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="43" name="return" description="cached datas" type="string|false">
            <type by_reference="false">string</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="50">
          <name>$doNotTestCacheValidity</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="61" package="Default">
        <name>test</name>
        <type>function</type>
        <docblock line="55">
          <description><![CDATA[Test if a cache is available or not (for the given id)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="55" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="55" name="return" description="false (a cache is not available) or &quot;last modified&quot; timestamp (int) of the available cache record" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="61">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="78" package="Default">
        <name>save</name>
        <type>function</type>
        <docblock line="66">
          <description><![CDATA[Save some string datas into a cache record]]></description>
          <long-description><![CDATA[<p>Note : $data is always "string" (serialization is done by the
core not by the backend)</p>]]></long-description>
          <tag line="66" name="param" description="Datas to cache" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="66" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="66" name="param" description="Array of strings, the cache record will be tagged by each string entry" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="66" name="param" description="If != false, set a specific lifetime for this cache record (null =&gt; infinite lifetime)" type="int" variable="$specificLifetime">
            <type by_reference="false">int</type>
          </tag>
          <tag line="66" name="return" description="true if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="78">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="78">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="78">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
        <argument line="78">
          <name>$specificLifetime</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="89" package="Default">
        <name>remove</name>
        <type>function</type>
        <docblock line="83">
          <description><![CDATA[Remove a cache record]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="83" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="83" name="return" description="true if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="89">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="111" package="Default">
        <name>clean</name>
        <type>function</type>
        <docblock line="94">
          <description><![CDATA[Clean some cache records]]></description>
          <long-description><![CDATA[<p>Available modes are :
'all' (default)  => remove all cache entries ($tags is not used)
'old'            => remove too old cache entries ($tags is not used)
'matchingTag'    => remove cache entries matching all given tags
                    ($tags can be an array of strings or a single string)
'notMatchingTag' => remove cache entries not matching one of the given tags
                    ($tags can be an array of strings or a single string)
'matchingAnyTag' => remove cache entries matching any given tags
                    ($tags can be an array of strings or a single string)</p>]]></long-description>
          <tag line="94" name="param" description="clean mode" type="string" variable="$mode">
            <type by_reference="false">string</type>
          </tag>
          <tag line="94" name="param" description="array $tags array of tags" type="\tags" variable="$tags">
            <type by_reference="false">\tags</type>
          </tag>
          <tag line="94" name="return" description="true if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="111">
          <name>$mode</name>
          <default><![CDATA[Zend_Cache::CLEANING_MODE_ALL]]></default>
          <type/>
        </argument>
        <argument line="111">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="121" package="Default">
        <name>getIds</name>
        <type>function</type>
        <docblock line="116">
          <description><![CDATA[Return an array of stored cache ids]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="116" name="return" description="array of stored cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="131" package="Default">
        <name>getTags</name>
        <type>function</type>
        <docblock line="126">
          <description><![CDATA[Return an array of stored tags]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="126" name="return" description="array of stored tags (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="144" package="Default">
        <name>getIdsMatchingTags</name>
        <type>function</type>
        <docblock line="136">
          <description><![CDATA[Return an array of stored cache ids which match given tags]]></description>
          <long-description><![CDATA[<p>In case of multiple tags, a logical AND is made between tags</p>]]></long-description>
          <tag line="136" name="param" description="array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="136" name="return" description="array of matching cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="144">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="157" package="Default">
        <name>getIdsNotMatchingTags</name>
        <type>function</type>
        <docblock line="149">
          <description><![CDATA[Return an array of stored cache ids which don't match given tags]]></description>
          <long-description><![CDATA[<p>In case of multiple tags, a logical OR is made between tags</p>]]></long-description>
          <tag line="149" name="param" description="array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="149" name="return" description="array of not matching cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="157">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="170" package="Default">
        <name>getIdsMatchingAnyTags</name>
        <type>function</type>
        <docblock line="162">
          <description><![CDATA[Return an array of stored cache ids which match any given tags]]></description>
          <long-description><![CDATA[<p>In case of multiple tags, a logical AND is made between tags</p>]]></long-description>
          <tag line="162" name="param" description="array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="162" name="return" description="array of any matching cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="170">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="181" package="Default">
        <name>getFillingPercentage</name>
        <type>function</type>
        <docblock line="175">
          <description><![CDATA[Return the filling percentage of the backend storage]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="175" name="return" description="integer between 0 and 100" type="int">
            <type by_reference="false">int</type>
          </tag>
          <tag line="175" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="197" package="Default">
        <name>getMetadatas</name>
        <type>function</type>
        <docblock line="186">
          <description><![CDATA[Return an array of metadatas for the given cache id]]></description>
          <long-description><![CDATA[<p>The array must include these keys :
- expire : the expire timestamp
- tags : a string array of tags
- mtime : timestamp of last modification time</p>]]></long-description>
          <tag line="186" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="186" name="return" description="array of metadatas (false if the cache id is not found)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="197">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="209" package="Default">
        <name>touch</name>
        <type>function</type>
        <docblock line="202">
          <description><![CDATA[Give (if possible) an extra lifetime to the given cache id]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="202" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="202" name="param" description="" type="int" variable="$extraLifetime">
            <type by_reference="false">int</type>
          </tag>
          <tag line="202" name="return" description="true if ok" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="209">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="209">
          <name>$extraLifetime</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="228" package="Default">
        <name>getCapabilities</name>
        <type>function</type>
        <docblock line="214">
          <description><![CDATA[Return an associative array of capabilities (booleans) of the backend]]></description>
          <long-description><![CDATA[<p>The array must include these keys :
- automatic_cleaning (is automating cleaning necessary)
- tags (are tags supported)
- expired_read (is it possible to read expired cache records
                (for doNotTestCacheValidity option for example))
- priority does the backend deal with priority when saving
- infinite_lifetime (is infinite lifetime can work with this backend)
- get_list (is it possible to get the list of cache ids and the complete list of tags)</p>]]></long-description>
          <tag line="214" name="return" description="associative of with capabilities" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="247" package="Default">
        <name>___expire</name>
        <type>function</type>
        <docblock line="240">
          <description><![CDATA[PUBLIC METHOD FOR UNIT TESTING ONLY !]]></description>
          <long-description><![CDATA[<p>Force a cache record to expire</p>]]></long-description>
          <tag line="240" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="247">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Cache/Backend/Apc.php" hash="a08bfa75fc61070d2d4d2a1f32668a6b" package="Zend\Cache\Zend\Cache\Backend">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Cache"/>
      <tag line="2" name="subpackage" description="Zend_Cache_Backend"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Apc.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="35" code="50005">No short description for class Zend_Cache_Backend_Apc</critical>
    </parse_markers>
    <include line="27" type="Require Once" package="Default">
      <name>Zend/Cache/Backend/ExtendedInterface.php</name>
      <docblock line="24">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="24" name="see" description="\Zend_Cache_Backend_Interface" refers="\Zend_Cache_Backend_Interface"/>
      </docblock>
    </include>
    <include line="32" type="Require Once" package="Default">
      <name>Zend/Cache/Backend.php</name>
      <docblock line="29">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="29" name="see" description="\Zend_Cache_Backend" refers="\Zend_Cache_Backend"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="41" package="Zend\Cache\Zend\Cache\Backend">
      <name>Zend_Cache_Backend_Apc</name>
      <full_name>\Zend_Cache_Backend_Apc</full_name>
      <extends>\Zend_Cache_Backend</extends>
      <extends>\Zend_Cache_Backend_ExtendedInterface</extends>
      <docblock line="35">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="package" description="Zend_Cache"/>
        <tag line="35" name="subpackage" description="Zend_Cache_Backend"/>
        <tag line="35" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="35" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <constant namespace="default" line="46" package="Default">
        <name>TAGS_UNSUPPORTED_BY_CLEAN_OF_APC_BACKEND</name>
        <value><![CDATA['Zend_Cache_Backend_Apc::clean() : tags are unsupported by the Apc backend']]></value>
        <docblock line="43">
          <description><![CDATA[Log message]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="default" line="47">
        <name>TAGS_UNSUPPORTED_BY_SAVE_OF_APC_BACKEND</name>
        <value><![CDATA['Zend_Cache_Backend_Apc::save() : tags are unsupported by the Apc backend']]></value>
      </constant>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="56" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="49">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="49" name="param" description="associative array of options" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="49" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="49" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$options</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="73" package="Default">
        <name>load</name>
        <type>function</type>
        <docblock line="64">
          <description><![CDATA[Test if a cache is available for the given id and (if yes) return it (false else)]]></description>
          <long-description><![CDATA[<p>WARNING $doNotTestCacheValidity=true is unsupported by the Apc backend</p>]]></long-description>
          <tag line="64" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="64" name="param" description="if set to true, the cache validity won't be tested" type="boolean" variable="$doNotTestCacheValidity">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="64" name="return" description="cached datas (or false)" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="73">
          <name>$doNotTestCacheValidity</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="88" package="Default">
        <name>test</name>
        <type>function</type>
        <docblock line="82">
          <description><![CDATA[Test if a cache is available or not (for the given id)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="82" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="82" name="return" description="false (a cache is not available) or &quot;last modified&quot; timestamp (int) of the available cache record" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="88">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="109" package="Default">
        <name>save</name>
        <type>function</type>
        <docblock line="97">
          <description><![CDATA[Save some string datas into a cache record]]></description>
          <long-description><![CDATA[<p>Note : $data is always "string" (serialization is done by the
core not by the backend)</p>]]></long-description>
          <tag line="97" name="param" description="datas to cache" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="97" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="97" name="param" description="array of strings, the cache record will be tagged by each string entry" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="97" name="param" description="if != false, set a specific lifetime for this cache record (null =&gt; infinite lifetime)" type="int" variable="$specificLifetime">
            <type by_reference="false">int</type>
          </tag>
          <tag line="97" name="return" description="true if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="109">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="109">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="109">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
        <argument line="109">
          <name>$specificLifetime</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="125" package="Default">
        <name>remove</name>
        <type>function</type>
        <docblock line="119">
          <description><![CDATA[Remove a cache record]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="119" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="119" name="return" description="true if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="125">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="145" package="Default">
        <name>clean</name>
        <type>function</type>
        <docblock line="130">
          <description><![CDATA[Clean some cache records]]></description>
          <long-description><![CDATA[<p>Available modes are :
'all' (default)  => remove all cache entries ($tags is not used)
'old'            => unsupported
'matchingTag'    => unsupported
'notMatchingTag' => unsupported
'matchingAnyTag' => unsupported</p>]]></long-description>
          <tag line="130" name="param" description="clean mode" type="string" variable="$mode">
            <type by_reference="false">string</type>
          </tag>
          <tag line="130" name="param" description="array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="130" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="130" name="return" description="true if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="145">
          <name>$mode</name>
          <default><![CDATA[Zend_Cache::CLEANING_MODE_ALL]]></default>
          <type/>
        </argument>
        <argument line="145">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="173" package="Default">
        <name>isAutomaticCleaningAvailable</name>
        <type>function</type>
        <docblock line="165">
          <description><![CDATA[Return true if the automatic cleaning is available for the backend]]></description>
          <long-description><![CDATA[<p>DEPRECATED : use getCapabilities() instead</p>]]></long-description>
          <tag line="165" name="deprecated" description=""/>
          <tag line="165" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="184" package="Default">
        <name>getFillingPercentage</name>
        <type>function</type>
        <docblock line="178">
          <description><![CDATA[Return the filling percentage of the backend storage]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="178" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="178" name="return" description="integer between 0 and 100" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="204" package="Default">
        <name>getTags</name>
        <type>function</type>
        <docblock line="199">
          <description><![CDATA[Return an array of stored tags]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="199" name="return" description="array of stored tags (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="218" package="Default">
        <name>getIdsMatchingTags</name>
        <type>function</type>
        <docblock line="210">
          <description><![CDATA[Return an array of stored cache ids which match given tags]]></description>
          <long-description><![CDATA[<p>In case of multiple tags, a logical AND is made between tags</p>]]></long-description>
          <tag line="210" name="param" description="array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="210" name="return" description="array of matching cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="218">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="232" package="Default">
        <name>getIdsNotMatchingTags</name>
        <type>function</type>
        <docblock line="224">
          <description><![CDATA[Return an array of stored cache ids which don't match given tags]]></description>
          <long-description><![CDATA[<p>In case of multiple tags, a logical OR is made between tags</p>]]></long-description>
          <tag line="224" name="param" description="array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="224" name="return" description="array of not matching cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="232">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="246" package="Default">
        <name>getIdsMatchingAnyTags</name>
        <type>function</type>
        <docblock line="238">
          <description><![CDATA[Return an array of stored cache ids which match any given tags]]></description>
          <long-description><![CDATA[<p>In case of multiple tags, a logical AND is made between tags</p>]]></long-description>
          <tag line="238" name="param" description="array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="238" name="return" description="array of any matching cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="246">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="257" package="Default">
        <name>getIds</name>
        <type>function</type>
        <docblock line="252">
          <description><![CDATA[Return an array of stored cache ids]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="252" name="return" description="array of stored cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="279" package="Default">
        <name>getMetadatas</name>
        <type>function</type>
        <docblock line="268">
          <description><![CDATA[Return an array of metadatas for the given cache id]]></description>
          <long-description><![CDATA[<p>The array must include these keys :
- expire : the expire timestamp
- tags : a string array of tags
- mtime : timestamp of last modification time</p>]]></long-description>
          <tag line="268" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="268" name="return" description="array of metadatas (false if the cache id is not found)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="279">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="307" package="Default">
        <name>touch</name>
        <type>function</type>
        <docblock line="300">
          <description><![CDATA[Give (if possible) an extra lifetime to the given cache id]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="300" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="300" name="param" description="" type="int" variable="$extraLifetime">
            <type by_reference="false">int</type>
          </tag>
          <tag line="300" name="return" description="true if ok" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="307">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="307">
          <name>$extraLifetime</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="343" package="Default">
        <name>getCapabilities</name>
        <type>function</type>
        <docblock line="329">
          <description><![CDATA[Return an associative array of capabilities (booleans) of the backend]]></description>
          <long-description><![CDATA[<p>The array must include these keys :
- automatic_cleaning (is automating cleaning necessary)
- tags (are tags supported)
- expired_read (is it possible to read expired cache records
                (for doNotTestCacheValidity option for example))
- priority does the backend deal with priority when saving
- infinite_lifetime (is infinite lifetime can work with this backend)
- get_list (is it possible to get the list of cache ids and the complete list of tags)</p>]]></long-description>
          <tag line="329" name="return" description="associative of with capabilities" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Cache/Backend/Interface.php" hash="99e8ce8e5cb9d4a2f5ef9a5497ee6bb8" package="Zend\Cache\Zend\Cache\Backend">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Cache"/>
      <tag line="2" name="subpackage" description="Zend_Cache_Backend"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Interface.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <interface namespace="default" line="30" package="Zend\Cache\Zend\Cache\Backend">
      <name>Zend_Cache_Backend_Interface</name>
      <full_name>\Zend_Cache_Backend_Interface</full_name>
      <extends/>
      <docblock line="24">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="24" name="package" description="Zend_Cache"/>
        <tag line="24" name="subpackage" description="Zend_Cache_Backend"/>
        <tag line="24" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="24" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="37" package="Default">
        <name>setDirectives</name>
        <type>function</type>
        <docblock line="32">
          <description><![CDATA[Set the frontend directives]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="32" name="param" description="assoc of directives" type="array" variable="$directives">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="37">
          <name>$directives</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="48" package="Default">
        <name>load</name>
        <type>function</type>
        <docblock line="39">
          <description><![CDATA[Test if a cache is available for the given id and (if yes) return it (false else)]]></description>
          <long-description><![CDATA[<p>Note : return value is always "string" (unserialization is done by the core not by the backend)</p>]]></long-description>
          <tag line="39" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="39" name="param" description="If set to true, the cache validity won't be tested" type="boolean" variable="$doNotTestCacheValidity">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="39" name="return" description="cached datas" type="string|false">
            <type by_reference="false">string</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="48">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="48">
          <name>$doNotTestCacheValidity</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="56" package="Default">
        <name>test</name>
        <type>function</type>
        <docblock line="50">
          <description><![CDATA[Test if a cache is available or not (for the given id)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="50" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="50" name="return" description="(a cache is not available) or &quot;last modified&quot; timestamp (int) of the available cache record" type="mixed|false">
            <type by_reference="false">mixed</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="56">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="70" package="Default">
        <name>save</name>
        <type>function</type>
        <docblock line="58">
          <description><![CDATA[Save some string datas into a cache record]]></description>
          <long-description><![CDATA[<p>Note : $data is always "string" (serialization is done by the
core not by the backend)</p>]]></long-description>
          <tag line="58" name="param" description="Datas to cache" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="58" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="58" name="param" description="Array of strings, the cache record will be tagged by each string entry" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="58" name="param" description="If != false, set a specific lifetime for this cache record (null =&gt; infinite lifetime)" type="int" variable="$specificLifetime">
            <type by_reference="false">int</type>
          </tag>
          <tag line="58" name="return" description="true if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="70">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="70">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="70">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
        <argument line="70">
          <name>$specificLifetime</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="78" package="Default">
        <name>remove</name>
        <type>function</type>
        <docblock line="72">
          <description><![CDATA[Remove a cache record]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="72" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="72" name="return" description="True if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="78">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="97" package="Default">
        <name>clean</name>
        <type>function</type>
        <docblock line="80">
          <description><![CDATA[Clean some cache records]]></description>
          <long-description><![CDATA[<p>Available modes are :
Zend_Cache::CLEANING_MODE_ALL (default)    => remove all cache entries ($tags is not used)
Zend_Cache::CLEANING_MODE_OLD              => remove too old cache entries ($tags is not used)
Zend_Cache::CLEANING_MODE_MATCHING_TAG     => remove cache entries matching all given tags
                                              ($tags can be an array of strings or a single string)
Zend_Cache::CLEANING_MODE_NOT_MATCHING_TAG => remove cache entries not {matching one of the given tags}
                                              ($tags can be an array of strings or a single string)
Zend_Cache::CLEANING_MODE_MATCHING_ANY_TAG => remove cache entries matching any given tags
                                              ($tags can be an array of strings or a single string)</p>]]></long-description>
          <tag line="80" name="param" description="Clean mode" type="string" variable="$mode">
            <type by_reference="false">string</type>
          </tag>
          <tag line="80" name="param" description="Array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="80" name="return" description="true if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="97">
          <name>$mode</name>
          <default><![CDATA[Zend_Cache::CLEANING_MODE_ALL]]></default>
          <type/>
        </argument>
        <argument line="97">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
    </interface>
  </file>
  <file path="Zend/Cache/Backend/Xcache.php" hash="d09e7bc368db0e81b33147aa1bda3e12" package="Zend\Cache\Zend\Cache\Backend">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Cache"/>
      <tag line="2" name="subpackage" description="Zend_Cache_Backend"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Xcache.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="35" code="50005">No short description for class Zend_Cache_Backend_Xcache</critical>
    </parse_markers>
    <include line="27" type="Require Once" package="Default">
      <name>Zend/Cache/Backend/Interface.php</name>
      <docblock line="24">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="24" name="see" description="\Zend_Cache_Backend_Interface" refers="\Zend_Cache_Backend_Interface"/>
      </docblock>
    </include>
    <include line="32" type="Require Once" package="Default">
      <name>Zend/Cache/Backend.php</name>
      <docblock line="29">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="29" name="see" description="\Zend_Cache_Backend" refers="\Zend_Cache_Backend"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="41" package="Zend\Cache\Zend\Cache\Backend">
      <name>Zend_Cache_Backend_Xcache</name>
      <full_name>\Zend_Cache_Backend_Xcache</full_name>
      <extends>\Zend_Cache_Backend</extends>
      <extends>\Zend_Cache_Backend_Interface</extends>
      <docblock line="35">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="package" description="Zend_Cache"/>
        <tag line="35" name="subpackage" description="Zend_Cache_Backend"/>
        <tag line="35" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="35" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <constant namespace="default" line="47" package="Default">
        <name>TAGS_UNSUPPORTED_BY_CLEAN_OF_XCACHE_BACKEND</name>
        <value><![CDATA['Zend_Cache_Backend_Xcache::clean() : tags are unsupported by the Xcache backend']]></value>
        <docblock line="44">
          <description><![CDATA[Log message]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="default" line="48">
        <name>TAGS_UNSUPPORTED_BY_SAVE_OF_XCACHE_BACKEND</name>
        <value><![CDATA['Zend_Cache_Backend_Xcache::save() : tags are unsupported by the Xcache backend']]></value>
      </constant>
      <property final="false" static="false" visibility="protected" line="61" package="Default">
        <name>$_options</name>
        <default><![CDATA[array(
        'user' => null,
        'password' => null
    )]]></default>
        <docblock line="50">
          <description><![CDATA[Available options]]></description>
          <long-description><![CDATA[<p>=====> (string) user :
xcache.admin.user (necessary for the clean() method)</p>

<p>=====> (string) password :
xcache.admin.pass (clear, not MD5) (necessary for the clean() method)</p>]]></long-description>
          <tag line="50" name="var" description="available options" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="73" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="66">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="66" name="param" description="associative array of options" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="66" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="66" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="73">
          <name>$options</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="90" package="Default">
        <name>load</name>
        <type>function</type>
        <docblock line="81">
          <description><![CDATA[Test if a cache is available for the given id and (if yes) return it (false else)]]></description>
          <long-description><![CDATA[<p>WARNING $doNotTestCacheValidity=true is unsupported by the Xcache backend</p>]]></long-description>
          <tag line="81" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="81" name="param" description="if set to true, the cache validity won't be tested" type="boolean" variable="$doNotTestCacheValidity">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="81" name="return" description="cached datas (or false)" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="90">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="90">
          <name>$doNotTestCacheValidity</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="108" package="Default">
        <name>test</name>
        <type>function</type>
        <docblock line="102">
          <description><![CDATA[Test if a cache is available or not (for the given id)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="102" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="102" name="return" description="false (a cache is not available) or &quot;last modified&quot; timestamp (int) of the available cache record" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="108">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="131" package="Default">
        <name>save</name>
        <type>function</type>
        <docblock line="119">
          <description><![CDATA[Save some string datas into a cache record]]></description>
          <long-description><![CDATA[<p>Note : $data is always "string" (serialization is done by the
core not by the backend)</p>]]></long-description>
          <tag line="119" name="param" description="datas to cache" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="119" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="119" name="param" description="array of strings, the cache record will be tagged by each string entry" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="119" name="param" description="if != false, set a specific lifetime for this cache record (null =&gt; infinite lifetime)" type="int" variable="$specificLifetime">
            <type by_reference="false">int</type>
          </tag>
          <tag line="119" name="return" description="true if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="131">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="131">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="131">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
        <argument line="131">
          <name>$specificLifetime</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="147" package="Default">
        <name>remove</name>
        <type>function</type>
        <docblock line="141">
          <description><![CDATA[Remove a cache record]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="141" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="141" name="return" description="true if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="147">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="167" package="Default">
        <name>clean</name>
        <type>function</type>
        <docblock line="152">
          <description><![CDATA[Clean some cache records]]></description>
          <long-description><![CDATA[<p>Available modes are :
'all' (default)  => remove all cache entries ($tags is not used)
'old'            => unsupported
'matchingTag'    => unsupported
'notMatchingTag' => unsupported
'matchingAnyTag' => unsupported</p>]]></long-description>
          <tag line="152" name="param" description="clean mode" type="string" variable="$mode">
            <type by_reference="false">string</type>
          </tag>
          <tag line="152" name="param" description="array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="152" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="152" name="return" description="true if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="167">
          <name>$mode</name>
          <default><![CDATA[Zend_Cache::CLEANING_MODE_ALL]]></default>
          <type/>
        </argument>
        <argument line="167">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="216" package="Default">
        <name>isAutomaticCleaningAvailable</name>
        <type>function</type>
        <docblock line="211">
          <description><![CDATA[Return true if the automatic cleaning is available for the backend]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="211" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Cache/Backend/Memcached.php" hash="6d6fc426bcfab7e303d8d645d72d9d6f" package="Zend\Cache\Zend\Cache\Backend">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Cache"/>
      <tag line="2" name="subpackage" description="Zend_Cache_Backend"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Memcached.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="35" code="50005">No short description for class Zend_Cache_Backend_Memcached</critical>
    </parse_markers>
    <include line="27" type="Require Once" package="Default">
      <name>Zend/Cache/Backend/ExtendedInterface.php</name>
      <docblock line="24">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="24" name="see" description="\Zend_Cache_Backend_Interface" refers="\Zend_Cache_Backend_Interface"/>
      </docblock>
    </include>
    <include line="32" type="Require Once" package="Default">
      <name>Zend/Cache/Backend.php</name>
      <docblock line="29">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="29" name="see" description="\Zend_Cache_Backend" refers="\Zend_Cache_Backend"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="41" package="Zend\Cache\Zend\Cache\Backend">
      <name>Zend_Cache_Backend_Memcached</name>
      <full_name>\Zend_Cache_Backend_Memcached</full_name>
      <extends>\Zend_Cache_Backend</extends>
      <extends>\Zend_Cache_Backend_ExtendedInterface</extends>
      <docblock line="35">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="package" description="Zend_Cache"/>
        <tag line="35" name="subpackage" description="Zend_Cache_Backend"/>
        <tag line="35" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="35" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <constant namespace="default" line="46" package="Default">
        <name>DEFAULT_HOST</name>
        <value><![CDATA['127.0.0.1']]></value>
        <docblock line="43">
          <description><![CDATA[Default Values]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="default" line="47">
        <name>DEFAULT_PORT</name>
        <value><![CDATA[11211]]></value>
      </constant>
      <constant namespace="default" line="48">
        <name>DEFAULT_PERSISTENT</name>
        <value><![CDATA[true]]></value>
      </constant>
      <constant namespace="default" line="49">
        <name>DEFAULT_WEIGHT</name>
        <value><![CDATA[1]]></value>
      </constant>
      <constant namespace="default" line="50">
        <name>DEFAULT_TIMEOUT</name>
        <value><![CDATA[1]]></value>
      </constant>
      <constant namespace="default" line="51">
        <name>DEFAULT_RETRY_INTERVAL</name>
        <value><![CDATA[15]]></value>
      </constant>
      <constant namespace="default" line="52">
        <name>DEFAULT_STATUS</name>
        <value><![CDATA[true]]></value>
      </constant>
      <constant namespace="default" line="53">
        <name>DEFAULT_FAILURE_CALLBACK</name>
        <value><![CDATA[null]]></value>
      </constant>
      <constant namespace="default" line="58" package="Default">
        <name>TAGS_UNSUPPORTED_BY_CLEAN_OF_MEMCACHED_BACKEND</name>
        <value><![CDATA['Zend_Cache_Backend_Memcached::clean() : tags are unsupported by the Memcached backend']]></value>
        <docblock line="55">
          <description><![CDATA[Log message]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="default" line="59">
        <name>TAGS_UNSUPPORTED_BY_SAVE_OF_MEMCACHED_BACKEND</name>
        <value><![CDATA['Zend_Cache_Backend_Memcached::save() : tags are unsupported by the Memcached backend']]></value>
      </constant>
      <property final="false" static="false" visibility="protected" line="91" package="Default">
        <name>$_options</name>
        <default><![CDATA[array(
        'servers' => array(array(
            'host' => self::DEFAULT_HOST,
            'port' => self::DEFAULT_PORT,
            'persistent' => self::DEFAULT_PERSISTENT,
            'weight'  => self::DEFAULT_WEIGHT,
            'timeout' => self::DEFAULT_TIMEOUT,
            'retry_interval' => self::DEFAULT_RETRY_INTERVAL,
            'status' => self::DEFAULT_STATUS,
            'failure_callback' => self::DEFAULT_FAILURE_CALLBACK
        )),
        'compression' => false,
        'compatibility' => false,
    )]]></default>
        <docblock line="61">
          <description><![CDATA[Available options]]></description>
          <long-description><![CDATA[<p>=====> (array) servers :
an array of memcached server ; each memcached server is described by an associative array :
'host' => (string) : the name of the memcached server
'port' => (int) : the port of the memcached server
'persistent' => (bool) : use or not persistent connections to this memcached server
'weight' => (int) : number of buckets to create for this server which in turn control its
                    probability of it being selected. The probability is relative to the total
                    weight of all servers.
'timeout' => (int) : value in seconds which will be used for connecting to the daemon. Think twice
                     before changing the default value of 1 second - you can lose all the
                     advantages of caching if your connection is too slow.
'retry_interval' => (int) : controls how often a failed server will be retried, the default value
                            is 15 seconds. Setting this parameter to -1 disables automatic retry.
'status' => (bool) : controls if the server should be flagged as online.
'failure_callback' => (callback) : Allows the user to specify a callback function to run upon
                                   encountering an error. The callback is run before failover
                                   is attempted. The function takes two parameters, the hostname
                                   and port of the failed server.</p>

<p>=====> (boolean) compression :
true if you want to use on-the-fly compression</p>

<p>=====> (boolean) compatibility :
true if you use old memcache server or extension</p>]]></long-description>
          <tag line="61" name="var" description="available options" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="111" package="Default">
        <name>$_memcache</name>
        <default><![CDATA[null]]></default>
        <docblock line="106">
          <description><![CDATA[Memcache object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="106" name="var" description="memcache object" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="120" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="113">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="113" name="param" description="associative array of options" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="113" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="113" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="120">
          <name>$options</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="178" package="Default">
        <name>load</name>
        <type>function</type>
        <docblock line="171">
          <description><![CDATA[Test if a cache is available for the given id and (if yes) return it (false else)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="171" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="171" name="param" description="If set to true, the cache validity won't be tested" type="boolean" variable="$doNotTestCacheValidity">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="171" name="return" description="cached datas" type="string|false">
            <type by_reference="false">string</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="178">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="178">
          <name>$doNotTestCacheValidity</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="193" package="Default">
        <name>test</name>
        <type>function</type>
        <docblock line="187">
          <description><![CDATA[Test if a cache is available or not (for the given id)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="187" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="187" name="return" description="(a cache is not available) or &quot;last modified&quot; timestamp (int) of the available cache record" type="mixed|false">
            <type by_reference="false">mixed</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="193">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="214" package="Default">
        <name>save</name>
        <type>function</type>
        <docblock line="202">
          <description><![CDATA[Save some string datas into a cache record]]></description>
          <long-description><![CDATA[<p>Note : $data is always "string" (serialization is done by the
core not by the backend)</p>]]></long-description>
          <tag line="202" name="param" description="Datas to cache" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="202" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="202" name="param" description="Array of strings, the cache record will be tagged by each string entry" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="202" name="param" description="If != false, set a specific lifetime for this cache record (null =&gt; infinite lifetime)" type="int" variable="$specificLifetime">
            <type by_reference="false">int</type>
          </tag>
          <tag line="202" name="return" description="True if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="214">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="214">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="214">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
        <argument line="214">
          <name>$specificLifetime</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="239" package="Default">
        <name>remove</name>
        <type>function</type>
        <docblock line="233">
          <description><![CDATA[Remove a cache record]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="233" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="233" name="return" description="True if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="239">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="259" package="Default">
        <name>clean</name>
        <type>function</type>
        <docblock line="244">
          <description><![CDATA[Clean some cache records]]></description>
          <long-description><![CDATA[<p>Available modes are :
'all' (default)  => remove all cache entries ($tags is not used)
'old'            => unsupported
'matchingTag'    => unsupported
'notMatchingTag' => unsupported
'matchingAnyTag' => unsupported</p>]]></long-description>
          <tag line="244" name="param" description="Clean mode" type="string" variable="$mode">
            <type by_reference="false">string</type>
          </tag>
          <tag line="244" name="param" description="Array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="244" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="244" name="return" description="True if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="259">
          <name>$mode</name>
          <default><![CDATA[Zend_Cache::CLEANING_MODE_ALL]]></default>
          <type/>
        </argument>
        <argument line="259">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="284" package="Default">
        <name>isAutomaticCleaningAvailable</name>
        <type>function</type>
        <docblock line="279">
          <description><![CDATA[Return true if the automatic cleaning is available for the backend]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="279" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="296" package="Default">
        <name>setDirectives</name>
        <type>function</type>
        <docblock line="289">
          <description><![CDATA[Set the frontend directives]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="289" name="param" description="Assoc of directives" type="array" variable="$directives">
            <type by_reference="false">array</type>
          </tag>
          <tag line="289" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="289" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="296">
          <name>$directives</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="315" package="Default">
        <name>getIds</name>
        <type>function</type>
        <docblock line="310">
          <description><![CDATA[Return an array of stored cache ids]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="310" name="return" description="array of stored cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="326" package="Default">
        <name>getTags</name>
        <type>function</type>
        <docblock line="321">
          <description><![CDATA[Return an array of stored tags]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="321" name="return" description="array of stored tags (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="340" package="Default">
        <name>getIdsMatchingTags</name>
        <type>function</type>
        <docblock line="332">
          <description><![CDATA[Return an array of stored cache ids which match given tags]]></description>
          <long-description><![CDATA[<p>In case of multiple tags, a logical AND is made between tags</p>]]></long-description>
          <tag line="332" name="param" description="array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="332" name="return" description="array of matching cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="340">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="354" package="Default">
        <name>getIdsNotMatchingTags</name>
        <type>function</type>
        <docblock line="346">
          <description><![CDATA[Return an array of stored cache ids which don't match given tags]]></description>
          <long-description><![CDATA[<p>In case of multiple tags, a logical OR is made between tags</p>]]></long-description>
          <tag line="346" name="param" description="array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="346" name="return" description="array of not matching cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="354">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="368" package="Default">
        <name>getIdsMatchingAnyTags</name>
        <type>function</type>
        <docblock line="360">
          <description><![CDATA[Return an array of stored cache ids which match any given tags]]></description>
          <long-description><![CDATA[<p>In case of multiple tags, a logical AND is made between tags</p>]]></long-description>
          <tag line="360" name="param" description="array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="360" name="return" description="array of any matching cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="368">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="380" package="Default">
        <name>getFillingPercentage</name>
        <type>function</type>
        <docblock line="374">
          <description><![CDATA[Return the filling percentage of the backend storage]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="374" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="374" name="return" description="integer between 0 and 100" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="420" package="Default">
        <name>getMetadatas</name>
        <type>function</type>
        <docblock line="409">
          <description><![CDATA[Return an array of metadatas for the given cache id]]></description>
          <long-description><![CDATA[<p>The array must include these keys :
- expire : the expire timestamp
- tags : a string array of tags
- mtime : timestamp of last modification time</p>]]></long-description>
          <tag line="409" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="409" name="return" description="array of metadatas (false if the cache id is not found)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="420">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="448" package="Default">
        <name>touch</name>
        <type>function</type>
        <docblock line="441">
          <description><![CDATA[Give (if possible) an extra lifetime to the given cache id]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="441" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="441" name="param" description="" type="int" variable="$extraLifetime">
            <type by_reference="false">int</type>
          </tag>
          <tag line="441" name="return" description="true if ok" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="448">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="448">
          <name>$extraLifetime</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="492" package="Default">
        <name>getCapabilities</name>
        <type>function</type>
        <docblock line="478">
          <description><![CDATA[Return an associative array of capabilities (booleans) of the backend]]></description>
          <long-description><![CDATA[<p>The array must include these keys :
- automatic_cleaning (is automating cleaning necessary)
- tags (are tags supported)
- expired_read (is it possible to read expired cache records
                (for doNotTestCacheValidity option for example))
- priority does the backend deal with priority when saving
- infinite_lifetime (is infinite lifetime can work with this backend)
- get_list (is it possible to get the list of cache ids and the complete list of tags)</p>]]></long-description>
          <tag line="478" name="return" description="associative of with capabilities" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Cache/Backend/Libmemcached.php" hash="8904b1f7a4f49e019868c1e18572aa94" package="Zend\Cache\Zend\Cache\Backend">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Cache"/>
      <tag line="2" name="subpackage" description="Zend_Cache_Backend"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Libmemcached.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="35" code="50005">No short description for class Zend_Cache_Backend_Libmemcached</critical>
    </parse_markers>
    <include line="27" type="Require Once" package="Default">
      <name>Zend/Cache/Backend/ExtendedInterface.php</name>
      <docblock line="24">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="24" name="see" description="\Zend_Cache_Backend_Interface" refers="\Zend_Cache_Backend_Interface"/>
      </docblock>
    </include>
    <include line="32" type="Require Once" package="Default">
      <name>Zend/Cache/Backend.php</name>
      <docblock line="29">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="29" name="see" description="\Zend_Cache_Backend" refers="\Zend_Cache_Backend"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="41" package="Zend\Cache\Zend\Cache\Backend">
      <name>Zend_Cache_Backend_Libmemcached</name>
      <full_name>\Zend_Cache_Backend_Libmemcached</full_name>
      <extends>\Zend_Cache_Backend</extends>
      <extends>\Zend_Cache_Backend_ExtendedInterface</extends>
      <docblock line="35">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="package" description="Zend_Cache"/>
        <tag line="35" name="subpackage" description="Zend_Cache_Backend"/>
        <tag line="35" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="35" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <constant namespace="default" line="46" package="Default">
        <name>DEFAULT_HOST</name>
        <value><![CDATA['127.0.0.1']]></value>
        <docblock line="43">
          <description><![CDATA[Default Server Values]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="default" line="47">
        <name>DEFAULT_PORT</name>
        <value><![CDATA[11211]]></value>
      </constant>
      <constant namespace="default" line="48">
        <name>DEFAULT_WEIGHT</name>
        <value><![CDATA[1]]></value>
      </constant>
      <constant namespace="default" line="53" package="Default">
        <name>TAGS_UNSUPPORTED_BY_CLEAN_OF_LIBMEMCACHED_BACKEND</name>
        <value><![CDATA['Zend_Cache_Backend_Libmemcached::clean() : tags are unsupported by the Libmemcached backend']]></value>
        <docblock line="50">
          <description><![CDATA[Log message]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="default" line="54">
        <name>TAGS_UNSUPPORTED_BY_SAVE_OF_LIBMEMCACHED_BACKEND</name>
        <value><![CDATA['Zend_Cache_Backend_Libmemcached::save() : tags are unsupported by the Libmemcached backend']]></value>
      </constant>
      <property final="false" static="false" visibility="protected" line="74" package="Default">
        <name>$_options</name>
        <default><![CDATA[array(
        'servers' => array(array(
            'host'   => self::DEFAULT_HOST,
            'port'   => self::DEFAULT_PORT,
            'weight' => self::DEFAULT_WEIGHT,
        )),
        'client' => array()
    )]]></default>
        <docblock line="56">
          <description><![CDATA[Available options]]></description>
          <long-description><![CDATA[<p>=====> (array) servers :
an array of memcached server ; each memcached server is described by an associative array :
'host' => (string) : the name of the memcached server
'port' => (int) : the port of the memcached server
'weight' => (int) : number of buckets to create for this server which in turn control its
                    probability of it being selected. The probability is relative to the total
                    weight of all servers.
=====> (array) client :
an array of memcached client options ; the memcached client is described by an associative array :</p>]]></long-description>
          <tag line="56" name="see" description="\http://php.net/manual/memcached.constants.php" refers="\http://php.net/manual/memcached.constants.php"/>
          <tag line="56" name="var" description="available options" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="88" package="Default">
        <name>$_memcache</name>
        <default><![CDATA[null]]></default>
        <docblock line="83">
          <description><![CDATA[Memcached object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="83" name="var" description="memcached object" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="97" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="90">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="90" name="param" description="associative array of options" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="90" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="90" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="97">
          <name>$options</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="164" package="Default">
        <name>load</name>
        <type>function</type>
        <docblock line="157">
          <description><![CDATA[Test if a cache is available for the given id and (if yes) return it (false else)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="157" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="157" name="param" description="If set to true, the cache validity won't be tested" type="boolean" variable="$doNotTestCacheValidity">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="157" name="return" description="cached datas" type="string|false">
            <type by_reference="false">string</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="164">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="164">
          <name>$doNotTestCacheValidity</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="179" package="Default">
        <name>test</name>
        <type>function</type>
        <docblock line="173">
          <description><![CDATA[Test if a cache is available or not (for the given id)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="173" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="173" name="return" description="(a cache is not available) or &quot;last modified&quot; timestamp (int) of the available cache record" type="int|false">
            <type by_reference="false">int</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="179">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="200" package="Default">
        <name>save</name>
        <type>function</type>
        <docblock line="188">
          <description><![CDATA[Save some string datas into a cache record]]></description>
          <long-description><![CDATA[<p>Note : $data is always "string" (serialization is done by the
core not by the backend)</p>]]></long-description>
          <tag line="188" name="param" description="Datas to cache" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="188" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="188" name="param" description="Array of strings, the cache record will be tagged by each string entry" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="188" name="param" description="If != false, set a specific lifetime for this cache record (null =&gt; infinite lifetime)" type="int" variable="$specificLifetime">
            <type by_reference="false">int</type>
          </tag>
          <tag line="188" name="return" description="True if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="200">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="200">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="200">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
        <argument line="200">
          <name>$specificLifetime</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="225" package="Default">
        <name>remove</name>
        <type>function</type>
        <docblock line="219">
          <description><![CDATA[Remove a cache record]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="219" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="219" name="return" description="True if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="225">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="245" package="Default">
        <name>clean</name>
        <type>function</type>
        <docblock line="230">
          <description><![CDATA[Clean some cache records]]></description>
          <long-description><![CDATA[<p>Available modes are :
'all' (default)  => remove all cache entries ($tags is not used)
'old'            => unsupported
'matchingTag'    => unsupported
'notMatchingTag' => unsupported
'matchingAnyTag' => unsupported</p>]]></long-description>
          <tag line="230" name="param" description="Clean mode" type="string" variable="$mode">
            <type by_reference="false">string</type>
          </tag>
          <tag line="230" name="param" description="Array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="230" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="230" name="return" description="True if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="245">
          <name>$mode</name>
          <default><![CDATA[Zend_Cache::CLEANING_MODE_ALL]]></default>
          <type/>
        </argument>
        <argument line="245">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="270" package="Default">
        <name>isAutomaticCleaningAvailable</name>
        <type>function</type>
        <docblock line="265">
          <description><![CDATA[Return true if the automatic cleaning is available for the backend]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="265" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="282" package="Default">
        <name>setDirectives</name>
        <type>function</type>
        <docblock line="275">
          <description><![CDATA[Set the frontend directives]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="275" name="param" description="Assoc of directives" type="array" variable="$directives">
            <type by_reference="false">array</type>
          </tag>
          <tag line="275" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="275" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="282">
          <name>$directives</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="301" package="Default">
        <name>getIds</name>
        <type>function</type>
        <docblock line="296">
          <description><![CDATA[Return an array of stored cache ids]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="296" name="return" description="array of stored cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="312" package="Default">
        <name>getTags</name>
        <type>function</type>
        <docblock line="307">
          <description><![CDATA[Return an array of stored tags]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="307" name="return" description="array of stored tags (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="326" package="Default">
        <name>getIdsMatchingTags</name>
        <type>function</type>
        <docblock line="318">
          <description><![CDATA[Return an array of stored cache ids which match given tags]]></description>
          <long-description><![CDATA[<p>In case of multiple tags, a logical AND is made between tags</p>]]></long-description>
          <tag line="318" name="param" description="array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="318" name="return" description="array of matching cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="326">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="340" package="Default">
        <name>getIdsNotMatchingTags</name>
        <type>function</type>
        <docblock line="332">
          <description><![CDATA[Return an array of stored cache ids which don't match given tags]]></description>
          <long-description><![CDATA[<p>In case of multiple tags, a logical OR is made between tags</p>]]></long-description>
          <tag line="332" name="param" description="array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="332" name="return" description="array of not matching cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="340">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="354" package="Default">
        <name>getIdsMatchingAnyTags</name>
        <type>function</type>
        <docblock line="346">
          <description><![CDATA[Return an array of stored cache ids which match any given tags]]></description>
          <long-description><![CDATA[<p>In case of multiple tags, a logical AND is made between tags</p>]]></long-description>
          <tag line="346" name="param" description="array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="346" name="return" description="array of any matching cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="354">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="366" package="Default">
        <name>getFillingPercentage</name>
        <type>function</type>
        <docblock line="360">
          <description><![CDATA[Return the filling percentage of the backend storage]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="360" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="360" name="return" description="integer between 0 and 100" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="409" package="Default">
        <name>getMetadatas</name>
        <type>function</type>
        <docblock line="398">
          <description><![CDATA[Return an array of metadatas for the given cache id]]></description>
          <long-description><![CDATA[<p>The array must include these keys :
- expire : the expire timestamp
- tags : a string array of tags
- mtime : timestamp of last modification time</p>]]></long-description>
          <tag line="398" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="398" name="return" description="array of metadatas (false if the cache id is not found)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="409">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="433" package="Default">
        <name>touch</name>
        <type>function</type>
        <docblock line="426">
          <description><![CDATA[Give (if possible) an extra lifetime to the given cache id]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="426" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="426" name="param" description="" type="int" variable="$extraLifetime">
            <type by_reference="false">int</type>
          </tag>
          <tag line="426" name="return" description="true if ok" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="433">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="433">
          <name>$extraLifetime</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="472" package="Default">
        <name>getCapabilities</name>
        <type>function</type>
        <docblock line="458">
          <description><![CDATA[Return an associative array of capabilities (booleans) of the backend]]></description>
          <long-description><![CDATA[<p>The array must include these keys :
- automatic_cleaning (is automating cleaning necessary)
- tags (are tags supported)
- expired_read (is it possible to read expired cache records
                (for doNotTestCacheValidity option for example))
- priority does the backend deal with priority when saving
- infinite_lifetime (is infinite lifetime can work with this backend)
- get_list (is it possible to get the list of cache ids and the complete list of tags)</p>]]></long-description>
          <tag line="458" name="return" description="associative of with capabilities" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Cache/Backend/File.php" hash="afb2234ca6312da3261040ab9005e094" package="Zend\Cache\Zend\Cache\Backend">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Cache"/>
      <tag line="2" name="subpackage" description="Zend_Cache_Backend"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: File.php 24030 2011-05-09 22:10:00Z mabe $"/>
    </docblock>
    <parse_markers>
      <error line="735" code="50010">No DocBlock was found for method _get()</error>
      <error line="819" code="50015">Argument $lifetime is missing from the Docblock of _expireTime()</error>
      <critical line="34" code="50005">No short description for class Zend_Cache_Backend_File</critical>
    </parse_markers>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Cache/Backend/ExtendedInterface.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Cache_Backend_Interface" refers="\Zend_Cache_Backend_Interface"/>
      </docblock>
    </include>
    <include line="31" type="Require Once" package="Default">
      <name>Zend/Cache/Backend.php</name>
      <docblock line="28">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="28" name="see" description="\Zend_Cache_Backend" refers="\Zend_Cache_Backend"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="40" package="Zend\Cache\Zend\Cache\Backend">
      <name>Zend_Cache_Backend_File</name>
      <full_name>\Zend_Cache_Backend_File</full_name>
      <extends>\Zend_Cache_Backend</extends>
      <extends>\Zend_Cache_Backend_ExtendedInterface</extends>
      <docblock line="34">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="34" name="package" description="Zend_Cache"/>
        <tag line="34" name="subpackage" description="Zend_Cache_Backend"/>
        <tag line="34" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="34" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="90" package="Default">
        <name>$_options</name>
        <default><![CDATA[array(
        'cache_dir' => null,
        'file_locking' => true,
        'read_control' => true,
        'read_control_type' => 'crc32',
        'hashed_directory_level' => 0,
        'hashed_directory_umask' => 0700,
        'file_name_prefix' => 'zend_cache',
        'cache_file_umask' => 0600,
        'metadatas_array_max_size' => 100
    )]]></default>
        <docblock line="42">
          <description><![CDATA[Available options]]></description>
          <long-description><![CDATA[<p>=====> (string) cache_dir :
- Directory where to put the cache files</p>

<p>=====> (boolean) file_locking :
- Enable / disable file_locking
- Can avoid cache corruption under bad circumstances but it doesn't work on multithread
webservers and on NFS filesystems for example</p>

<p>=====> (boolean) read_control :
- Enable / disable read control
- If enabled, a control key is embeded in cache file and this key is compared with the one
calculated after the reading.</p>

<p>=====> (string) read_control_type :
- Type of read control (only if read control is enabled). Available values are :
  'md5' for a md5 hash control (best but slowest)
  'crc32' for a crc32 hash control (lightly less safe but faster, better choice)
  'adler32' for an adler32 hash control (excellent choice too, faster than crc32)
  'strlen' for a length only test (fastest)</p>

<p>=====> (int) hashed_directory_level :
- Hashed directory level
- Set the hashed directory structure level. 0 means "no hashed directory
structure", 1 means "one level of directory", 2 means "two levels"...
This option can speed up the cache only when you have many thousands of
cache file. Only specific benchs can help you to choose the perfect value
for you. Maybe, 1 or 2 is a good start.</p>

<p>=====> (int) hashed_directory_umask :
- Umask for hashed directory structure</p>

<p>=====> (string) file_name_prefix :
- prefix for cache files
- be really carefull with this option because a too generic value in a system cache dir
  (like /tmp) can cause disasters when cleaning the cache</p>

<p>=====> (int) cache_file_umask :
- Umask for cache files</p>

<p>=====> (int) metatadatas_array_max_size :
- max size for the metadatas array (don't change this value unless you
  know what you are doing)</p>]]></long-description>
          <tag line="42" name="var" description="available options" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="107" package="Default">
        <name>$_metadatasArray</name>
        <default><![CDATA[array()]]></default>
        <docblock line="102">
          <description><![CDATA[Array of metadatas (each item is an associative array)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="102" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="117" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="110">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="110" name="param" description="associative array of options" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="110" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="110" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="117">
          <name>$options</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="151" package="Default">
        <name>setCacheDir</name>
        <type>function</type>
        <docblock line="143">
          <description><![CDATA[Set the cache_dir (particular case of setOption() method)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="143" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="143" name="param" description="If true, add a trailing separator is necessary" type="boolean" variable="$trailingSeparator">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="143" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="143" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="151">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="151">
          <name>$trailingSeparator</name>
          <default><![CDATA[true]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="173" package="Default">
        <name>load</name>
        <type>function</type>
        <docblock line="166">
          <description><![CDATA[Test if a cache is available for the given id and (if yes) return it (false else)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="166" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="166" name="param" description="if set to true, the cache validity won't be tested" type="boolean" variable="$doNotTestCacheValidity">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="166" name="return" description="cached datas" type="string|false">
            <type by_reference="false">string</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="173">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="173">
          <name>$doNotTestCacheValidity</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="201" package="Default">
        <name>test</name>
        <type>function</type>
        <docblock line="195">
          <description><![CDATA[Test if a cache is available or not (for the given id)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="195" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="195" name="return" description="false (a cache is not available) or &quot;last modified&quot; timestamp (int) of the available cache record" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="201">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="219" package="Default">
        <name>save</name>
        <type>function</type>
        <docblock line="207">
          <description><![CDATA[Save some string datas into a cache record]]></description>
          <long-description><![CDATA[<p>Note : $data is always "string" (serialization is done by the
core not by the backend)</p>]]></long-description>
          <tag line="207" name="param" description="Datas to cache" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="207" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="207" name="param" description="Array of strings, the cache record will be tagged by each string entry" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="207" name="param" description="If != false, set a specific lifetime for this cache record (null =&gt; infinite lifetime)" type="int" variable="$specificLifetime">
            <type by_reference="false">int</type>
          </tag>
          <tag line="207" name="return" description="true if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="219">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="219">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="219">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
        <argument line="219">
          <name>$specificLifetime</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="259" package="Default">
        <name>remove</name>
        <type>function</type>
        <docblock line="253">
          <description><![CDATA[Remove a cache record]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="253" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="253" name="return" description="true if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="259">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="285" package="Default">
        <name>clean</name>
        <type>function</type>
        <docblock line="267">
          <description><![CDATA[Clean some cache records]]></description>
          <long-description><![CDATA[<p>Available modes are :</p>

<p>Zend_Cache::CLEANING_MODE_ALL (default)    => remove all cache entries ($tags is not used)
Zend_Cache::CLEANING_MODE_OLD              => remove too old cache entries ($tags is not used)
Zend_Cache::CLEANING_MODE_MATCHING_TAG     => remove cache entries matching all given tags
                                              ($tags can be an array of strings or a single string)
Zend_Cache::CLEANING_MODE_NOT_MATCHING_TAG => remove cache entries not {matching one of the given tags}
                                              ($tags can be an array of strings or a single string)
Zend_Cache::CLEANING_MODE_MATCHING_ANY_TAG => remove cache entries matching any given tags
                                              ($tags can be an array of strings or a single string)</p>]]></long-description>
          <tag line="267" name="param" description="clean mode" type="string" variable="$mode">
            <type by_reference="false">string</type>
          </tag>
          <tag line="267" name="param" description="array $tags array of tags" type="\tags" variable="$tags">
            <type by_reference="false">\tags</type>
          </tag>
          <tag line="267" name="return" description="true if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="285">
          <name>$mode</name>
          <default><![CDATA[Zend_Cache::CLEANING_MODE_ALL]]></default>
          <type/>
        </argument>
        <argument line="285">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="297" package="Default">
        <name>getIds</name>
        <type>function</type>
        <docblock line="292">
          <description><![CDATA[Return an array of stored cache ids]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="292" name="return" description="array of stored cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="307" package="Default">
        <name>getTags</name>
        <type>function</type>
        <docblock line="302">
          <description><![CDATA[Return an array of stored tags]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="302" name="return" description="array of stored tags (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="320" package="Default">
        <name>getIdsMatchingTags</name>
        <type>function</type>
        <docblock line="312">
          <description><![CDATA[Return an array of stored cache ids which match given tags]]></description>
          <long-description><![CDATA[<p>In case of multiple tags, a logical AND is made between tags</p>]]></long-description>
          <tag line="312" name="param" description="array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="312" name="return" description="array of matching cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="320">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="333" package="Default">
        <name>getIdsNotMatchingTags</name>
        <type>function</type>
        <docblock line="325">
          <description><![CDATA[Return an array of stored cache ids which don't match given tags]]></description>
          <long-description><![CDATA[<p>In case of multiple tags, a logical OR is made between tags</p>]]></long-description>
          <tag line="325" name="param" description="array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="325" name="return" description="array of not matching cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="333">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="346" package="Default">
        <name>getIdsMatchingAnyTags</name>
        <type>function</type>
        <docblock line="338">
          <description><![CDATA[Return an array of stored cache ids which match any given tags]]></description>
          <long-description><![CDATA[<p>In case of multiple tags, a logical AND is made between tags</p>]]></long-description>
          <tag line="338" name="param" description="array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="338" name="return" description="array of any matching cache ids (string)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="346">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="357" package="Default">
        <name>getFillingPercentage</name>
        <type>function</type>
        <docblock line="351">
          <description><![CDATA[Return the filling percentage of the backend storage]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="351" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="351" name="return" description="integer between 0 and 100" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="382" package="Default">
        <name>getMetadatas</name>
        <type>function</type>
        <docblock line="371">
          <description><![CDATA[Return an array of metadatas for the given cache id]]></description>
          <long-description><![CDATA[<p>The array must include these keys :
- expire : the expire timestamp
- tags : a string array of tags
- mtime : timestamp of last modification time</p>]]></long-description>
          <tag line="371" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="371" name="return" description="array of metadatas (false if the cache id is not found)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="382">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="405" package="Default">
        <name>touch</name>
        <type>function</type>
        <docblock line="398">
          <description><![CDATA[Give (if possible) an extra lifetime to the given cache id]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="398" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="398" name="param" description="" type="int" variable="$extraLifetime">
            <type by_reference="false">int</type>
          </tag>
          <tag line="398" name="return" description="true if ok" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="405">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="405">
          <name>$extraLifetime</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="441" package="Default">
        <name>getCapabilities</name>
        <type>function</type>
        <docblock line="427">
          <description><![CDATA[Return an associative array of capabilities (booleans) of the backend]]></description>
          <long-description><![CDATA[<p>The array must include these keys :
- automatic_cleaning (is automating cleaning necessary)
- tags (are tags supported)
- expired_read (is it possible to read expired cache records
                (for doNotTestCacheValidity option for example))
- priority does the backend deal with priority when saving
- infinite_lifetime (is infinite lifetime can work with this backend)
- get_list (is it possible to get the list of cache ids and the complete list of tags)</p>]]></long-description>
          <tag line="427" name="return" description="associative of with capabilities" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="460" package="Default">
        <name>___expire</name>
        <type>function</type>
        <docblock line="453">
          <description><![CDATA[PUBLIC METHOD FOR UNIT TESTING ONLY !]]></description>
          <long-description><![CDATA[<p>Force a cache record to expire</p>]]></long-description>
          <tag line="453" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="460">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="475" package="Default">
        <name>_getMetadatas</name>
        <type>function</type>
        <docblock line="469">
          <description><![CDATA[Get a metadatas record]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="469" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="469" name="return" description="Associative array of metadatas" type="array|false">
            <type by_reference="false">array</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="475">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="497" package="Default">
        <name>_setMetadatas</name>
        <type>function</type>
        <docblock line="489">
          <description><![CDATA[Set a metadatas record]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="489" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="489" name="param" description="Associative array of metadatas" type="array" variable="$metadatas">
            <type by_reference="false">array</type>
          </tag>
          <tag line="489" name="param" description="optional pass false to disable saving to file" type="boolean" variable="$save">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="489" name="return" description="True if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="497">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="497">
          <name>$metadatas</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="497">
          <name>$save</name>
          <default><![CDATA[true]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="519" package="Default">
        <name>_delMetadatas</name>
        <type>function</type>
        <docblock line="513">
          <description><![CDATA[Drop a metadata record]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="513" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="513" name="return" description="True if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="519">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="533" package="Default">
        <name>_cleanMetadatas</name>
        <type>function</type>
        <docblock line="528">
          <description><![CDATA[Clear the metadatas array]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="528" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="544" package="Default">
        <name>_loadMetadatas</name>
        <type>function</type>
        <docblock line="538">
          <description><![CDATA[Load metadatas from disk]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="538" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="538" name="return" description="Metadatas associative array" type="array|false">
            <type by_reference="false">array</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="544">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="562" package="Default">
        <name>_saveMetadatas</name>
        <type>function</type>
        <docblock line="555">
          <description><![CDATA[Save metadatas to disk]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="555" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="555" name="param" description="Associative array" type="array" variable="$metadatas">
            <type by_reference="false">array</type>
          </tag>
          <tag line="555" name="return" description="True if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="562">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="562">
          <name>$metadatas</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="578" package="Default">
        <name>_metadatasFile</name>
        <type>function</type>
        <docblock line="572">
          <description><![CDATA[Make and return a file name (with path) for metadatas]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="572" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="572" name="return" description="Metadatas file name (with path)" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="578">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="591" package="Default">
        <name>_isMetadatasFile</name>
        <type>function</type>
        <docblock line="585">
          <description><![CDATA[Check if the given filename is a metadatas one]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="585" name="param" description="File name" type="string" variable="$fileName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="585" name="return" description="True if it's a metadatas one" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="591">
          <name>$fileName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="610" package="Default">
        <name>_remove</name>
        <type>function</type>
        <docblock line="601">
          <description><![CDATA[Remove a file]]></description>
          <long-description><![CDATA[<p>If we can't remove the file (because of locks or any problem), we will touch
the file to invalidate it</p>]]></long-description>
          <tag line="601" name="param" description="Complete file path" type="string" variable="$file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="601" name="return" description="True if ok" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="610">
          <name>$file</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="642" package="Default">
        <name>_clean</name>
        <type>function</type>
        <docblock line="623">
          <description><![CDATA[Clean some cache records (protected method used for recursive stuff)]]></description>
          <long-description><![CDATA[<p>Available modes are :
Zend_Cache::CLEANING_MODE_ALL (default)    => remove all cache entries ($tags is not used)
Zend_Cache::CLEANING_MODE_OLD              => remove too old cache entries ($tags is not used)
Zend_Cache::CLEANING_MODE_MATCHING_TAG     => remove cache entries matching all given tags
                                              ($tags can be an array of strings or a single string)
Zend_Cache::CLEANING_MODE_NOT_MATCHING_TAG => remove cache entries not {matching one of the given tags}
                                              ($tags can be an array of strings or a single string)
Zend_Cache::CLEANING_MODE_MATCHING_ANY_TAG => remove cache entries matching any given tags
                                              ($tags can be an array of strings or a single string)</p>]]></long-description>
          <tag line="623" name="param" description="Directory to clean" type="string" variable="$dir">
            <type by_reference="false">string</type>
          </tag>
          <tag line="623" name="param" description="Clean mode" type="string" variable="$mode">
            <type by_reference="false">string</type>
          </tag>
          <tag line="623" name="param" description="Array of tags" type="array" variable="$tags">
            <type by_reference="false">array</type>
          </tag>
          <tag line="623" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="623" name="return" description="True if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="642">
          <name>$dir</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="642">
          <name>$mode</name>
          <default><![CDATA[Zend_Cache::CLEANING_MODE_ALL]]></default>
          <type/>
        </argument>
        <argument line="642">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="735">
        <name>_get</name>
        <type>function</type>
        <argument line="735">
          <name>$dir</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="735">
          <name>$mode</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="735">
          <name>$tags</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="824" package="Default">
        <name>_expireTime</name>
        <type>function</type>
        <docblock line="819">
          <description><![CDATA[Compute & return the expire time]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="819" name="return" description="expire time (unix timestamp)" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="824">
          <name>$lifetime</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="840" package="Default">
        <name>_hash</name>
        <type>function</type>
        <docblock line="832">
          <description><![CDATA[Make a control key with the string containing datas]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="832" name="param" description="Data" type="string" variable="$data">
            <type by_reference="false">string</type>
          </tag>
          <tag line="832" name="param" description="Type of control 'md5', 'crc32' or 'strlen'" type="string" variable="$controlType">
            <type by_reference="false">string</type>
          </tag>
          <tag line="832" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="832" name="return" description="Control key" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="840">
          <name>$data</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="840">
          <name>$controlType</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="862" package="Default">
        <name>_idToFileName</name>
        <type>function</type>
        <docblock line="856">
          <description><![CDATA[Transform a cache id into a file name and return it]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="856" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="856" name="return" description="File name" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="862">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="875" package="Default">
        <name>_file</name>
        <type>function</type>
        <docblock line="869">
          <description><![CDATA[Make and return a file name (with path)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="869" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="869" name="return" description="File name (with path)" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="875">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="889" package="Default">
        <name>_path</name>
        <type>function</type>
        <docblock line="882">
          <description><![CDATA[Return the complete directory path of a filename (including hashedDirectoryStructure)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="882" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="882" name="param" description="if true, returns array of directory parts instead of single string" type="boolean" variable="$parts">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="882" name="return" description="Complete directory path" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="889">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="889">
          <name>$parts</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="914" package="Default">
        <name>_recursiveMkdirAndChmod</name>
        <type>function</type>
        <docblock line="908">
          <description><![CDATA[Make the directory strucuture for the given id]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="908" name="param" description="cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="908" name="return" description="true" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="914">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="936" package="Default">
        <name>_test</name>
        <type>function</type>
        <docblock line="929">
          <description><![CDATA[Test if the given cache id is available (and still valid as a cache record)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="929" name="param" description="Cache id" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="929" name="param" description="If set to true, the cache validity won't be tested" type="boolean" variable="$doNotTestCacheValidity">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="929" name="return" description="false (a cache is not available) or &quot;last modified&quot; timestamp (int) of the available cache record" type="boolean|mixed">
            <type by_reference="false">boolean</type>
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="936">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="936">
          <name>$doNotTestCacheValidity</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="954" package="Default">
        <name>_fileGetContents</name>
        <type>function</type>
        <docblock line="948">
          <description><![CDATA[Return the file content of the given file]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="948" name="param" description="File complete path" type="string" variable="$file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="948" name="return" description="File content (or false if problem)" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="954">
          <name>$file</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="977" package="Default">
        <name>_filePutContents</name>
        <type>function</type>
        <docblock line="970">
          <description><![CDATA[Put the given string into the given file]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="970" name="param" description="File complete path" type="string" variable="$file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="970" name="param" description="String to put in file" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="970" name="return" description="true if no problem" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="977">
          <name>$file</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="977">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="1001" package="Default">
        <name>_fileNameToId</name>
        <type>function</type>
        <docblock line="995">
          <description><![CDATA[Transform a file name into cache id and return it]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="995" name="param" description="File name" type="string" variable="$fileName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="995" name="return" description="Cache id" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="1001">
          <name>$fileName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Acl.php" hash="0e0ea28553764bdefce85d3fa03faa5c" package="Zend\Acl">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Acl"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Acl.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="95" code="50019">No short description for property $_isAllowedRole</critical>
      <critical line="100" code="50019">No short description for property $_isAllowedResource</critical>
      <critical line="105" code="50019">No short description for property $_isAllowedPrivilege</critical>
      <error line="1207" code="50012">No short description for method getRegisteredRoles()</error>
      <error line="1233" code="50012">No short description for method getResources()</error>
      <critical line="53" code="50005">No short description for class Zend_Acl</critical>
    </parse_markers>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Acl/Resource/Interface.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Acl_Resource_Interface" refers="\Zend_Acl_Resource_Interface"/>
      </docblock>
    </include>
    <include line="32" type="Require Once" package="Default">
      <name>Zend/Acl/Role/Registry.php</name>
      <docblock line="29">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="29" name="see" description="\Zend_Acl_Role_Registry" refers="\Zend_Acl_Role_Registry"/>
      </docblock>
    </include>
    <include line="38" type="Require Once" package="Default">
      <name>Zend/Acl/Assert/Interface.php</name>
      <docblock line="35">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="see" description="\Zend_Acl_Assert_Interface" refers="\Zend_Acl_Assert_Interface"/>
      </docblock>
    </include>
    <include line="44" type="Require Once" package="Default">
      <name>Zend/Acl/Role.php</name>
      <docblock line="41">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="41" name="see" description="\Zend_Acl_Role" refers="\Zend_Acl_Role"/>
      </docblock>
    </include>
    <include line="50" type="Require Once" package="Default">
      <name>Zend/Acl/Resource.php</name>
      <docblock line="47">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="47" name="see" description="\Zend_Acl_Resource" refers="\Zend_Acl_Resource"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="59" package="Zend\Acl">
      <name>Zend_Acl</name>
      <full_name>\Zend_Acl</full_name>
      <extends/>
      <docblock line="53">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="53" name="category" description="Zend"/>
        <tag line="53" name="package" description="Zend_Acl"/>
        <tag line="53" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="53" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <constant namespace="default" line="64" package="Default">
        <name>TYPE_ALLOW</name>
        <value><![CDATA['TYPE_ALLOW']]></value>
        <docblock line="61">
          <description><![CDATA[Rule type: allow]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="default" line="69" package="Default">
        <name>TYPE_DENY</name>
        <value><![CDATA['TYPE_DENY']]></value>
        <docblock line="66">
          <description><![CDATA[Rule type: deny]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="default" line="74" package="Default">
        <name>OP_ADD</name>
        <value><![CDATA['OP_ADD']]></value>
        <docblock line="71">
          <description><![CDATA[Rule operation: add]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="default" line="79" package="Default">
        <name>OP_REMOVE</name>
        <value><![CDATA['OP_REMOVE']]></value>
        <docblock line="76">
          <description><![CDATA[Rule operation: remove]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="protected" line="86" package="Default">
        <name>$_roleRegistry</name>
        <default><![CDATA[null]]></default>
        <docblock line="81">
          <description><![CDATA[Role registry]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="81" name="var" description="" type="\Zend_Acl_Role_Registry">
            <type by_reference="false">\Zend_Acl_Role_Registry</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="93" package="Default">
        <name>$_resources</name>
        <default><![CDATA[array()]]></default>
        <docblock line="88">
          <description><![CDATA[Resource tree]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="88" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="98" package="Default">
        <name>$_isAllowedRole</name>
        <default><![CDATA[null]]></default>
        <docblock line="95">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="95" name="var" description="" type="\Zend_Acl_Role_Interface">
            <type by_reference="false">\Zend_Acl_Role_Interface</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="103" package="Default">
        <name>$_isAllowedResource</name>
        <default><![CDATA[null]]></default>
        <docblock line="100">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="100" name="var" description="" type="\Zend_Acl_Resource_Interface">
            <type by_reference="false">\Zend_Acl_Resource_Interface</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="108" package="Default">
        <name>$_isAllowedPrivilege</name>
        <default><![CDATA[null]]></default>
        <docblock line="105">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="105" name="var" description="" type="String">
            <type by_reference="false">String</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="115" package="Default">
        <name>$_rules</name>
        <default><![CDATA[array(
        'allResources' => array(
            'allRoles' => array(
                'allPrivileges' => array(
                    'type'   => self::TYPE_DENY,
                    'assert' => null
                    ),
                'byPrivilegeId' => array()
                ),
            'byRoleId' => array()
            ),
        'byResourceId' => array()
        )]]></default>
        <docblock line="110">
          <description><![CDATA[ACL rules; whitelist (deny everything to all) by default]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="110" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="148" package="Default">
        <name>addRole</name>
        <type>function</type>
        <docblock line="129">
          <description><![CDATA[Adds a Role having an identifier unique to the registry]]></description>
          <long-description><![CDATA[<p>The $parents parameter may be a reference to, or the string identifier for,
a Role existing in the registry, or $parents may be passed as an array of
these - mixing string identifiers and objects is ok - to indicate the Roles
from which the newly added Role will directly inherit.</p>

<p>In order to resolve potential ambiguities with conflicting rules inherited
from different parents, the most recently added parent takes precedence over
parents that were previously added. In other words, the first parent added
will have the least priority, and the last parent added will have the
highest priority.</p>]]></long-description>
          <tag line="129" name="param" description="" type="\Zend_Acl_Role_Interface" variable="$role">
            <type by_reference="false">\Zend_Acl_Role_Interface</type>
          </tag>
          <tag line="129" name="param" description="" type="\Zend_Acl_Role_Interface|string|array" variable="$parents">
            <type by_reference="false">\Zend_Acl_Role_Interface</type>
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="129" name="uses" description="\Zend_Acl_Role_Registry::add()" refers="\Zend_Acl_Role_Registry::add()"/>
          <tag line="129" name="return" description="Provides a fluent interface" type="\Zend_Acl">
            <type by_reference="false">\Zend_Acl</type>
          </tag>
        </docblock>
        <argument line="148">
          <name>$role</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="148">
          <name>$parents</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="174" package="Default">
        <name>getRole</name>
        <type>function</type>
        <docblock line="165">
          <description><![CDATA[Returns the identified Role]]></description>
          <long-description><![CDATA[<p>The $role parameter can either be a Role or Role identifier.</p>]]></long-description>
          <tag line="165" name="param" description="" type="\Zend_Acl_Role_Interface|string" variable="$role">
            <type by_reference="false">\Zend_Acl_Role_Interface</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="165" name="uses" description="\Zend_Acl_Role_Registry::get()" refers="\Zend_Acl_Role_Registry::get()"/>
          <tag line="165" name="return" description="" type="\Zend_Acl_Role_Interface">
            <type by_reference="false">\Zend_Acl_Role_Interface</type>
          </tag>
        </docblock>
        <argument line="174">
          <name>$role</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="188" package="Default">
        <name>hasRole</name>
        <type>function</type>
        <docblock line="179">
          <description><![CDATA[Returns true if and only if the Role exists in the registry]]></description>
          <long-description><![CDATA[<p>The $role parameter can either be a Role or a Role identifier.</p>]]></long-description>
          <tag line="179" name="param" description="" type="\Zend_Acl_Role_Interface|string" variable="$role">
            <type by_reference="false">\Zend_Acl_Role_Interface</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="179" name="uses" description="\Zend_Acl_Role_Registry::has()" refers="\Zend_Acl_Role_Registry::has()"/>
          <tag line="179" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="188">
          <name>$role</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="208" package="Default">
        <name>inheritsRole</name>
        <type>function</type>
        <docblock line="193">
          <description><![CDATA[Returns true if and only if $role inherits from $inherit]]></description>
          <long-description><![CDATA[<p>Both parameters may be either a Role or a Role identifier. If
$onlyParents is true, then $role must inherit directly from
$inherit in order to return true. By default, this method looks
through the entire inheritance DAG to determine whether $role
inherits from $inherit through its ancestor Roles.</p>]]></long-description>
          <tag line="193" name="param" description="" type="\Zend_Acl_Role_Interface|string" variable="$role">
            <type by_reference="false">\Zend_Acl_Role_Interface</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="193" name="param" description="" type="\Zend_Acl_Role_Interface|string" variable="$inherit">
            <type by_reference="false">\Zend_Acl_Role_Interface</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="193" name="param" description="" type="boolean" variable="$onlyParents">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="193" name="uses" description="\Zend_Acl_Role_Registry::inherits()" refers="\Zend_Acl_Role_Registry::inherits()"/>
          <tag line="193" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="208">
          <name>$role</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="208">
          <name>$inherit</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="208">
          <name>$onlyParents</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="222" package="Default">
        <name>removeRole</name>
        <type>function</type>
        <docblock line="213">
          <description><![CDATA[Removes the Role from the registry]]></description>
          <long-description><![CDATA[<p>The $role parameter can either be a Role or a Role identifier.</p>]]></long-description>
          <tag line="213" name="param" description="" type="\Zend_Acl_Role_Interface|string" variable="$role">
            <type by_reference="false">\Zend_Acl_Role_Interface</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="213" name="uses" description="\Zend_Acl_Role_Registry::remove()" refers="\Zend_Acl_Role_Registry::remove()"/>
          <tag line="213" name="return" description="Provides a fluent interface" type="\Zend_Acl">
            <type by_reference="false">\Zend_Acl</type>
          </tag>
        </docblock>
        <argument line="222">
          <name>$role</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="256" package="Default">
        <name>removeRoleAll</name>
        <type>function</type>
        <docblock line="250">
          <description><![CDATA[Removes all Roles from the registry]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="250" name="uses" description="\Zend_Acl_Role_Registry::removeAll()" refers="\Zend_Acl_Role_Registry::removeAll()"/>
          <tag line="250" name="return" description="Provides a fluent interface" type="\Zend_Acl">
            <type by_reference="false">\Zend_Acl</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="283" package="Default">
        <name>addResource</name>
        <type>function</type>
        <docblock line="272">
          <description><![CDATA[Adds a Resource having an identifier unique to the ACL]]></description>
          <long-description><![CDATA[<p>The $parent parameter may be a reference to, or the string identifier for,
the existing Resource from which the newly added Resource will inherit.</p>]]></long-description>
          <tag line="272" name="param" description="" type="\Zend_Acl_Resource_Interface|string" variable="$resource">
            <type by_reference="false">\Zend_Acl_Resource_Interface</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="272" name="param" description="" type="\Zend_Acl_Resource_Interface|string" variable="$parent">
            <type by_reference="false">\Zend_Acl_Resource_Interface</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="272" name="throws" description="" type="\Zend_Acl_Exception">
            <type by_reference="false">\Zend_Acl_Exception</type>
          </tag>
          <tag line="272" name="return" description="Provides a fluent interface" type="\Zend_Acl">
            <type by_reference="false">\Zend_Acl</type>
          </tag>
        </docblock>
        <argument line="283">
          <name>$resource</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="283">
          <name>$parent</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="341" package="Default">
        <name>add</name>
        <type>function</type>
        <docblock line="327">
          <description><![CDATA[Adds a Resource having an identifier unique to the ACL]]></description>
          <long-description><![CDATA[<p>The $parent parameter may be a reference to, or the string identifier for,
the existing Resource from which the newly added Resource will inherit.</p>]]></long-description>
          <tag line="327" name="deprecated" description="in version 1.9.1 and will be available till 2.0.  New code&#10;should use addResource() instead."/>
          <tag line="327" name="param" description="" type="\Zend_Acl_Resource_Interface" variable="$resource">
            <type by_reference="false">\Zend_Acl_Resource_Interface</type>
          </tag>
          <tag line="327" name="param" description="" type="\Zend_Acl_Resource_Interface|string" variable="$parent">
            <type by_reference="false">\Zend_Acl_Resource_Interface</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="327" name="throws" description="" type="\Zend_Acl_Exception">
            <type by_reference="false">\Zend_Acl_Exception</type>
          </tag>
          <tag line="327" name="return" description="Provides a fluent interface" type="\Zend_Acl">
            <type by_reference="false">\Zend_Acl</type>
          </tag>
        </docblock>
        <argument line="341">
          <name>$resource</name>
          <default><![CDATA[]]></default>
          <type>Zend_Acl_Resource_Interface</type>
        </argument>
        <argument line="341">
          <name>$parent</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="355" package="Default">
        <name>get</name>
        <type>function</type>
        <docblock line="346">
          <description><![CDATA[Returns the identified Resource]]></description>
          <long-description><![CDATA[<p>The $resource parameter can either be a Resource or a Resource identifier.</p>]]></long-description>
          <tag line="346" name="param" description="" type="\Zend_Acl_Resource_Interface|string" variable="$resource">
            <type by_reference="false">\Zend_Acl_Resource_Interface</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="346" name="throws" description="" type="\Zend_Acl_Exception">
            <type by_reference="false">\Zend_Acl_Exception</type>
          </tag>
          <tag line="346" name="return" description="" type="\Zend_Acl_Resource_Interface">
            <type by_reference="false">\Zend_Acl_Resource_Interface</type>
          </tag>
        </docblock>
        <argument line="355">
          <name>$resource</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="379" package="Default">
        <name>has</name>
        <type>function</type>
        <docblock line="371">
          <description><![CDATA[Returns true if and only if the Resource exists in the ACL]]></description>
          <long-description><![CDATA[<p>The $resource parameter can either be a Resource or a Resource identifier.</p>]]></long-description>
          <tag line="371" name="param" description="" type="\Zend_Acl_Resource_Interface|string" variable="$resource">
            <type by_reference="false">\Zend_Acl_Resource_Interface</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="371" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="379">
          <name>$resource</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="405" package="Default">
        <name>inherits</name>
        <type>function</type>
        <docblock line="390">
          <description><![CDATA[Returns true if and only if $resource inherits from $inherit]]></description>
          <long-description><![CDATA[<p>Both parameters may be either a Resource or a Resource identifier. If
$onlyParent is true, then $resource must inherit directly from
$inherit in order to return true. By default, this method looks
through the entire inheritance tree to determine whether $resource
inherits from $inherit through its ancestor Resources.</p>]]></long-description>
          <tag line="390" name="param" description="" type="\Zend_Acl_Resource_Interface|string" variable="$resource">
            <type by_reference="false">\Zend_Acl_Resource_Interface</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="390" name="param" description="" type="\Zend_Acl_Resource_Interface|string" variable="$inherit">
            <type by_reference="false">\Zend_Acl_Resource_Interface</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="390" name="param" description="" type="boolean" variable="$onlyParent">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="390" name="throws" description="" type="\Zend_Acl_Resource_Registry_Exception">
            <type by_reference="false">\Zend_Acl_Resource_Registry_Exception</type>
          </tag>
          <tag line="390" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="405">
          <name>$resource</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="405">
          <name>$inherit</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="405">
          <name>$onlyParent</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="445" package="Default">
        <name>remove</name>
        <type>function</type>
        <docblock line="436">
          <description><![CDATA[Removes a Resource and all of its children]]></description>
          <long-description><![CDATA[<p>The $resource parameter can either be a Resource or a Resource identifier.</p>]]></long-description>
          <tag line="436" name="param" description="" type="\Zend_Acl_Resource_Interface|string" variable="$resource">
            <type by_reference="false">\Zend_Acl_Resource_Interface</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="436" name="throws" description="" type="\Zend_Acl_Exception">
            <type by_reference="false">\Zend_Acl_Exception</type>
          </tag>
          <tag line="436" name="return" description="Provides a fluent interface" type="\Zend_Acl">
            <type by_reference="false">\Zend_Acl</type>
          </tag>
        </docblock>
        <argument line="445">
          <name>$resource</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="481" package="Default">
        <name>removeAll</name>
        <type>function</type>
        <docblock line="476">
          <description><![CDATA[Removes all Resources]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="476" name="return" description="Provides a fluent interface" type="\Zend_Acl">
            <type by_reference="false">\Zend_Acl</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="506" package="Default">
        <name>allow</name>
        <type>function</type>
        <docblock line="496">
          <description><![CDATA[Adds an "allow" rule to the ACL]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="496" name="param" description="" type="\Zend_Acl_Role_Interface|string|array" variable="$roles">
            <type by_reference="false">\Zend_Acl_Role_Interface</type>
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="496" name="param" description="" type="\Zend_Acl_Resource_Interface|string|array" variable="$resources">
            <type by_reference="false">\Zend_Acl_Resource_Interface</type>
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="496" name="param" description="" type="string|array" variable="$privileges">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="496" name="param" description="" type="\Zend_Acl_Assert_Interface" variable="$assert">
            <type by_reference="false">\Zend_Acl_Assert_Interface</type>
          </tag>
          <tag line="496" name="uses" description="\Zend_Acl::setRule()" refers="\Zend_Acl::setRule()"/>
          <tag line="496" name="return" description="Provides a fluent interface" type="\Zend_Acl">
            <type by_reference="false">\Zend_Acl</type>
          </tag>
        </docblock>
        <argument line="506">
          <name>$roles</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="506">
          <name>$resources</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="506">
          <name>$privileges</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="506">
          <name>$assert</name>
          <default><![CDATA[null]]></default>
          <type>Zend_Acl_Assert_Interface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="521" package="Default">
        <name>deny</name>
        <type>function</type>
        <docblock line="511">
          <description><![CDATA[Adds a "deny" rule to the ACL]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="511" name="param" description="" type="\Zend_Acl_Role_Interface|string|array" variable="$roles">
            <type by_reference="false">\Zend_Acl_Role_Interface</type>
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="511" name="param" description="" type="\Zend_Acl_Resource_Interface|string|array" variable="$resources">
            <type by_reference="false">\Zend_Acl_Resource_Interface</type>
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="511" name="param" description="" type="string|array" variable="$privileges">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="511" name="param" description="" type="\Zend_Acl_Assert_Interface" variable="$assert">
            <type by_reference="false">\Zend_Acl_Assert_Interface</type>
          </tag>
          <tag line="511" name="uses" description="\Zend_Acl::setRule()" refers="\Zend_Acl::setRule()"/>
          <tag line="511" name="return" description="Provides a fluent interface" type="\Zend_Acl">
            <type by_reference="false">\Zend_Acl</type>
          </tag>
        </docblock>
        <argument line="521">
          <name>$roles</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="521">
          <name>$resources</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="521">
          <name>$privileges</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="521">
          <name>$assert</name>
          <default><![CDATA[null]]></default>
          <type>Zend_Acl_Assert_Interface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="535" package="Default">
        <name>removeAllow</name>
        <type>function</type>
        <docblock line="526">
          <description><![CDATA[Removes "allow" permissions from the ACL]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="526" name="param" description="" type="\Zend_Acl_Role_Interface|string|array" variable="$roles">
            <type by_reference="false">\Zend_Acl_Role_Interface</type>
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="526" name="param" description="" type="\Zend_Acl_Resource_Interface|string|array" variable="$resources">
            <type by_reference="false">\Zend_Acl_Resource_Interface</type>
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="526" name="param" description="" type="string|array" variable="$privileges">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="526" name="uses" description="\Zend_Acl::setRule()" refers="\Zend_Acl::setRule()"/>
          <tag line="526" name="return" description="Provides a fluent interface" type="\Zend_Acl">
            <type by_reference="false">\Zend_Acl</type>
          </tag>
        </docblock>
        <argument line="535">
          <name>$roles</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="535">
          <name>$resources</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="535">
          <name>$privileges</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="549" package="Default">
        <name>removeDeny</name>
        <type>function</type>
        <docblock line="540">
          <description><![CDATA[Removes "deny" restrictions from the ACL]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="540" name="param" description="" type="\Zend_Acl_Role_Interface|string|array" variable="$roles">
            <type by_reference="false">\Zend_Acl_Role_Interface</type>
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="540" name="param" description="" type="\Zend_Acl_Resource_Interface|string|array" variable="$resources">
            <type by_reference="false">\Zend_Acl_Resource_Interface</type>
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="540" name="param" description="" type="string|array" variable="$privileges">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="540" name="uses" description="\Zend_Acl::setRule()" refers="\Zend_Acl::setRule()"/>
          <tag line="540" name="return" description="Provides a fluent interface" type="\Zend_Acl">
            <type by_reference="false">\Zend_Acl</type>
          </tag>
        </docblock>
        <argument line="549">
          <name>$roles</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="549">
          <name>$resources</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="549">
          <name>$privileges</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="606" package="Default">
        <name>setRule</name>
        <type>function</type>
        <docblock line="554">
          <description><![CDATA[Performs operations on ACL rules]]></description>
          <long-description><![CDATA[<p>The $operation parameter may be either OP_ADD or OP_REMOVE, depending on whether the
user wants to add or remove a rule, respectively:</p>

<p>OP_ADD specifics:</p>

<pre><code> A rule is added that would allow one or more Roles access to [certain $privileges
 upon] the specified Resource(s).
</code></pre>

<p>OP_REMOVE specifics:</p>

<pre><code> The rule is removed only in the context of the given Roles, Resources, and privileges.
 Existing rules to which the remove operation does not apply would remain in the
 ACL.
</code></pre>

<p>The $type parameter may be either TYPE_ALLOW or TYPE_DENY, depending on whether the
rule is intended to allow or deny permission, respectively.</p>

<p>The $roles and $resources parameters may be references to, or the string identifiers for,
existing Resources/Roles, or they may be passed as arrays of these - mixing string identifiers
and objects is ok - to indicate the Resources and Roles to which the rule applies. If either
$roles or $resources is null, then the rule applies to all Roles or all Resources, respectively.
Both may be null in order to work with the default rule of the ACL.</p>

<p>The $privileges parameter may be used to further specify that the rule applies only
to certain privileges upon the Resource(s) in question. This may be specified to be a single
privilege with a string, and multiple privileges may be specified as an array of strings.</p>

<p>If $assert is provided, then its assert() method must return true in order for
the rule to apply. If $assert is provided with $roles, $resources, and $privileges all
equal to null, then a rule having a type of:</p>

<pre><code> TYPE_ALLOW will imply a type of TYPE_DENY, and

 TYPE_DENY will imply a type of TYPE_ALLOW
</code></pre>

<p>when the rule's assertion fails. This is because the ACL needs to provide expected
behavior when an assertion upon the default ACL rule fails.</p>]]></long-description>
          <tag line="554" name="param" description="" type="string" variable="$operation">
            <type by_reference="false">string</type>
          </tag>
          <tag line="554" name="param" description="" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="554" name="param" description="" type="\Zend_Acl_Role_Interface|string|array" variable="$roles">
            <type by_reference="false">\Zend_Acl_Role_Interface</type>
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="554" name="param" description="" type="\Zend_Acl_Resource_Interface|string|array" variable="$resources">
            <type by_reference="false">\Zend_Acl_Resource_Interface</type>
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="554" name="param" description="" type="string|array" variable="$privileges">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="554" name="param" description="" type="\Zend_Acl_Assert_Interface" variable="$assert">
            <type by_reference="false">\Zend_Acl_Assert_Interface</type>
          </tag>
          <tag line="554" name="throws" description="" type="\Zend_Acl_Exception">
            <type by_reference="false">\Zend_Acl_Exception</type>
          </tag>
          <tag line="554" name="uses" description="\Zend_Acl_Role_Registry::get()" refers="\Zend_Acl_Role_Registry::get()"/>
          <tag line="554" name="uses" description="\Zend_Acl::get()" refers="\Zend_Acl::get()"/>
          <tag line="554" name="return" description="Provides a fluent interface" type="\Zend_Acl">
            <type by_reference="false">\Zend_Acl</type>
          </tag>
        </docblock>
        <argument line="606">
          <name>$operation</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="606">
          <name>$type</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="606">
          <name>$roles</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="606">
          <name>$resources</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="606">
          <name>$privileges</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="607">
          <name>$assert</name>
          <default><![CDATA[null]]></default>
          <type>Zend_Acl_Assert_Interface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="827" package="Default">
        <name>isAllowed</name>
        <type>function</type>
        <docblock line="799">
          <description><![CDATA[Returns true if and only if the Role has access to the Resource]]></description>
          <long-description><![CDATA[<p>The $role and $resource parameters may be references to, or the string identifiers for,
an existing Resource and Role combination.</p>

<p>If either $role or $resource is null, then the query applies to all Roles or all Resources,
respectively. Both may be null to query whether the ACL has a "blacklist" rule
(allow everything to all). By default, Zend_Acl creates a "whitelist" rule (deny
everything to all), and this method would return false unless this default has
been overridden (i.e., by executing $acl->allow()).</p>

<p>If a $privilege is not provided, then this method returns false if and only if the
Role is denied access to at least one privilege upon the Resource. In other words, this
method returns true if and only if the Role is allowed all privileges on the Resource.</p>

<p>This method checks Role inheritance using a depth-first traversal of the Role registry.
The highest priority parent (i.e., the parent most recently added) is checked first,
and its respective parents are checked similarly before the lower-priority parents of
the Role are checked.</p>]]></long-description>
          <tag line="799" name="param" description="" type="\Zend_Acl_Role_Interface|string" variable="$role">
            <type by_reference="false">\Zend_Acl_Role_Interface</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="799" name="param" description="" type="\Zend_Acl_Resource_Interface|string" variable="$resource">
            <type by_reference="false">\Zend_Acl_Resource_Interface</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="799" name="param" description="" type="string" variable="$privilege">
            <type by_reference="false">string</type>
          </tag>
          <tag line="799" name="uses" description="\Zend_Acl::get()" refers="\Zend_Acl::get()"/>
          <tag line="799" name="uses" description="\Zend_Acl_Role_Registry::get()" refers="\Zend_Acl_Role_Registry::get()"/>
          <tag line="799" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="827">
          <name>$role</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="827">
          <name>$resource</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="827">
          <name>$privilege</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="907" package="Default">
        <name>_getRoleRegistry</name>
        <type>function</type>
        <docblock line="899">
          <description><![CDATA[Returns the Role registry for this ACL]]></description>
          <long-description><![CDATA[<p>If no Role registry has been created yet, a new default Role registry
is created and returned.</p>]]></long-description>
          <tag line="899" name="return" description="" type="\Zend_Acl_Role_Registry">
            <type by_reference="false">\Zend_Acl_Role_Registry</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="926" package="Default">
        <name>_roleDFSAllPrivileges</name>
        <type>function</type>
        <docblock line="915">
          <description><![CDATA[Performs a depth-first search of the Role DAG, starting at $role, in order to find a rule
allowing/denying $role access to all privileges upon $resource]]></description>
          <long-description><![CDATA[<p>This method returns true if a rule is found and allows access. If a rule exists and denies access,
then this method returns false. If no applicable rule is found, then this method returns null.</p>]]></long-description>
          <tag line="915" name="param" description="" type="\Zend_Acl_Role_Interface" variable="$role">
            <type by_reference="false">\Zend_Acl_Role_Interface</type>
          </tag>
          <tag line="915" name="param" description="" type="\Zend_Acl_Resource_Interface" variable="$resource">
            <type by_reference="false">\Zend_Acl_Resource_Interface</type>
          </tag>
          <tag line="915" name="return" description="" type="boolean|null">
            <type by_reference="false">boolean</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="926">
          <name>$role</name>
          <default><![CDATA[]]></default>
          <type>Zend_Acl_Role_Interface</type>
        </argument>
        <argument line="926">
          <name>$resource</name>
          <default><![CDATA[null]]></default>
          <type>Zend_Acl_Resource_Interface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="962" package="Default">
        <name>_roleDFSVisitAllPrivileges</name>
        <type>function</type>
        <docblock line="948">
          <description><![CDATA[Visits an $role in order to look for a rule allowing/denying $role access to all privileges upon $resource]]></description>
          <long-description><![CDATA[<p>This method returns true if a rule is found and allows access. If a rule exists and denies access,
then this method returns false. If no applicable rule is found, then this method returns null.</p>

<p>This method is used by the internal depth-first search algorithm and may modify the DFS data structure.</p>]]></long-description>
          <tag line="948" name="param" description="" type="\Zend_Acl_Role_Interface" variable="$role">
            <type by_reference="false">\Zend_Acl_Role_Interface</type>
          </tag>
          <tag line="948" name="param" description="" type="\Zend_Acl_Resource_Interface" variable="$resource">
            <type by_reference="false">\Zend_Acl_Resource_Interface</type>
          </tag>
          <tag line="948" name="param" description="" type="array" variable="$dfs">
            <type by_reference="false">array</type>
          </tag>
          <tag line="948" name="return" description="" type="boolean|null">
            <type by_reference="false">boolean</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="948" name="throws" description="" type="\Zend_Acl_Exception">
            <type by_reference="false">\Zend_Acl_Exception</type>
          </tag>
        </docblock>
        <argument line="962">
          <name>$role</name>
          <default><![CDATA[]]></default>
          <type>Zend_Acl_Role_Interface</type>
        </argument>
        <argument line="962">
          <name>$resource</name>
          <default><![CDATA[null]]></default>
          <type>Zend_Acl_Resource_Interface</type>
        </argument>
        <argument line="963">
          <name>$dfs</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="1005" package="Default">
        <name>_roleDFSOnePrivilege</name>
        <type>function</type>
        <docblock line="992">
          <description><![CDATA[Performs a depth-first search of the Role DAG, starting at $role, in order to find a rule
allowing/denying $role access to a $privilege upon $resource]]></description>
          <long-description><![CDATA[<p>This method returns true if a rule is found and allows access. If a rule exists and denies access,
then this method returns false. If no applicable rule is found, then this method returns null.</p>]]></long-description>
          <tag line="992" name="param" description="" type="\Zend_Acl_Role_Interface" variable="$role">
            <type by_reference="false">\Zend_Acl_Role_Interface</type>
          </tag>
          <tag line="992" name="param" description="" type="\Zend_Acl_Resource_Interface" variable="$resource">
            <type by_reference="false">\Zend_Acl_Resource_Interface</type>
          </tag>
          <tag line="992" name="param" description="" type="string" variable="$privilege">
            <type by_reference="false">string</type>
          </tag>
          <tag line="992" name="return" description="" type="boolean|null">
            <type by_reference="false">boolean</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="992" name="throws" description="" type="\Zend_Acl_Exception">
            <type by_reference="false">\Zend_Acl_Exception</type>
          </tag>
        </docblock>
        <argument line="1005">
          <name>$role</name>
          <default><![CDATA[]]></default>
          <type>Zend_Acl_Role_Interface</type>
        </argument>
        <argument line="1005">
          <name>$resource</name>
          <default><![CDATA[null]]></default>
          <type>Zend_Acl_Resource_Interface</type>
        </argument>
        <argument line="1006">
          <name>$privilege</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="1051" package="Default">
        <name>_roleDFSVisitOnePrivilege</name>
        <type>function</type>
        <docblock line="1036">
          <description><![CDATA[Visits an $role in order to look for a rule allowing/denying $role access to a $privilege upon $resource]]></description>
          <long-description><![CDATA[<p>This method returns true if a rule is found and allows access. If a rule exists and denies access,
then this method returns false. If no applicable rule is found, then this method returns null.</p>

<p>This method is used by the internal depth-first search algorithm and may modify the DFS data structure.</p>]]></long-description>
          <tag line="1036" name="param" description="" type="\Zend_Acl_Role_Interface" variable="$role">
            <type by_reference="false">\Zend_Acl_Role_Interface</type>
          </tag>
          <tag line="1036" name="param" description="" type="\Zend_Acl_Resource_Interface" variable="$resource">
            <type by_reference="false">\Zend_Acl_Resource_Interface</type>
          </tag>
          <tag line="1036" name="param" description="" type="string" variable="$privilege">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1036" name="param" description="" type="array" variable="$dfs">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1036" name="return" description="" type="boolean|null">
            <type by_reference="false">boolean</type>
            <type by_reference="false">null</type>
          </tag>
          <tag line="1036" name="throws" description="" type="\Zend_Acl_Exception">
            <type by_reference="false">\Zend_Acl_Exception</type>
          </tag>
        </docblock>
        <argument line="1051">
          <name>$role</name>
          <default><![CDATA[]]></default>
          <type>Zend_Acl_Role_Interface</type>
        </argument>
        <argument line="1051">
          <name>$resource</name>
          <default><![CDATA[null]]></default>
          <type>Zend_Acl_Resource_Interface</type>
        </argument>
        <argument line="1052">
          <name>$privilege</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="1052">
          <name>$dfs</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="1105" package="Default">
        <name>_getRuleType</name>
        <type>function</type>
        <docblock line="1084">
          <description><![CDATA[Returns the rule type associated with the specified Resource, Role, and privilege
combination.]]></description>
          <long-description><![CDATA[<p>If a rule does not exist or its attached assertion fails, which means that
the rule is not applicable, then this method returns null. Otherwise, the
rule type applies and is returned as either TYPE_ALLOW or TYPE_DENY.</p>

<p>If $resource or $role is null, then this means that the rule must apply to
all Resources or Roles, respectively.</p>

<p>If $privilege is null, then the rule must apply to all privileges.</p>

<p>If all three parameters are null, then the default ACL rule type is returned,
based on whether its assertion method passes.</p>]]></long-description>
          <tag line="1084" name="param" description="" type="\Zend_Acl_Resource_Interface" variable="$resource">
            <type by_reference="false">\Zend_Acl_Resource_Interface</type>
          </tag>
          <tag line="1084" name="param" description="" type="\Zend_Acl_Role_Interface" variable="$role">
            <type by_reference="false">\Zend_Acl_Role_Interface</type>
          </tag>
          <tag line="1084" name="param" description="" type="string" variable="$privilege">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1084" name="return" description="" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="1105">
          <name>$resource</name>
          <default><![CDATA[null]]></default>
          <type>Zend_Acl_Resource_Interface</type>
        </argument>
        <argument line="1105">
          <name>$role</name>
          <default><![CDATA[null]]></default>
          <type>Zend_Acl_Role_Interface</type>
        </argument>
        <argument line="1106">
          <name>$privilege</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="1161" package="Default">
        <name>_getRules</name>
        <type>function</type>
        <docblock line="1148">
          <description><![CDATA[Returns the rules associated with a Resource and a Role, or null if no such rules exist]]></description>
          <long-description><![CDATA[<p>If either $resource or $role is null, this means that the rules returned are for all Resources or all Roles,
respectively. Both can be null to return the default rule set for all Resources and all Roles.</p>

<p>If the $create parameter is true, then a rule set is first created and then returned to the caller.</p>]]></long-description>
          <tag line="1148" name="param" description="" type="\Zend_Acl_Resource_Interface" variable="$resource">
            <type by_reference="false">\Zend_Acl_Resource_Interface</type>
          </tag>
          <tag line="1148" name="param" description="" type="\Zend_Acl_Role_Interface" variable="$role">
            <type by_reference="false">\Zend_Acl_Role_Interface</type>
          </tag>
          <tag line="1148" name="param" description="" type="boolean" variable="$create">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1148" name="return" description="" type="array|null">
            <type by_reference="false">array</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="1161">
          <name>$resource</name>
          <default><![CDATA[null]]></default>
          <type>Zend_Acl_Resource_Interface</type>
        </argument>
        <argument line="1161">
          <name>$role</name>
          <default><![CDATA[null]]></default>
          <type>Zend_Acl_Role_Interface</type>
        </argument>
        <argument line="1162">
          <name>$create</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="1211" package="Default">
        <name>getRegisteredRoles</name>
        <type>function</type>
        <docblock line="1207">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1207" name="return" description="of registered roles (Deprecated)" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="1207" name="deprecated" description="Deprecated since version 1.10 (December 2009)"/>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="1228" package="Default">
        <name>getRoles</name>
        <type>function</type>
        <docblock line="1220">
          <description><![CDATA[Returns an array of registered roles.]]></description>
          <long-description><![CDATA[<p>Note that this method does not return instances of registered roles,
but only the role identifiers.</p>]]></long-description>
          <tag line="1220" name="return" description="of registered roles" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="1236" package="Default">
        <name>getResources</name>
        <type>function</type>
        <docblock line="1233">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1233" name="return" description="of registered resources" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Acl/Assert/Interface.php" hash="240e72c579261b56ac97fefb8ef6cac0" package="Zend\Acl">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Acl"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Interface.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Acl.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Acl" refers="\Zend_Acl"/>
      </docblock>
    </include>
    <include line="32" type="Require Once" package="Default">
      <name>Zend/Acl/Role/Interface.php</name>
      <docblock line="29">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="29" name="see" description="\Zend_Acl_Role_Interface" refers="\Zend_Acl_Role_Interface"/>
      </docblock>
    </include>
    <include line="38" type="Require Once" package="Default">
      <name>Zend/Acl/Resource/Interface.php</name>
      <docblock line="35">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="see" description="\Zend_Acl_Resource_Interface" refers="\Zend_Acl_Resource_Interface"/>
      </docblock>
    </include>
    <interface namespace="default" line="47" package="Zend\Acl">
      <name>Zend_Acl_Assert_Interface</name>
      <full_name>\Zend_Acl_Assert_Interface</full_name>
      <extends/>
      <docblock line="41">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="41" name="category" description="Zend"/>
        <tag line="41" name="package" description="Zend_Acl"/>
        <tag line="41" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="41" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="62" package="Default">
        <name>assert</name>
        <type>function</type>
        <docblock line="49">
          <description><![CDATA[Returns true if and only if the assertion conditions are met]]></description>
          <long-description><![CDATA[<p>This method is passed the ACL, Role, Resource, and privilege to which the authorization query applies. If the
$role, $resource, or $privilege parameters are null, it means that the query applies to all Roles, Resources, or
privileges, respectively.</p>]]></long-description>
          <tag line="49" name="param" description="" type="\Zend_Acl" variable="$acl">
            <type by_reference="false">\Zend_Acl</type>
          </tag>
          <tag line="49" name="param" description="" type="\Zend_Acl_Role_Interface" variable="$role">
            <type by_reference="false">\Zend_Acl_Role_Interface</type>
          </tag>
          <tag line="49" name="param" description="" type="\Zend_Acl_Resource_Interface" variable="$resource">
            <type by_reference="false">\Zend_Acl_Resource_Interface</type>
          </tag>
          <tag line="49" name="param" description="" type="string" variable="$privilege">
            <type by_reference="false">string</type>
          </tag>
          <tag line="49" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="62">
          <name>$acl</name>
          <default><![CDATA[]]></default>
          <type>Zend_Acl</type>
        </argument>
        <argument line="62">
          <name>$role</name>
          <default><![CDATA[null]]></default>
          <type>Zend_Acl_Role_Interface</type>
        </argument>
        <argument line="62">
          <name>$resource</name>
          <default><![CDATA[null]]></default>
          <type>Zend_Acl_Resource_Interface</type>
        </argument>
        <argument line="63">
          <name>$privilege</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
    </interface>
  </file>
  <file path="Zend/Acl/Exception.php" hash="009346d8e57b427007bcb9baa3c1f618" package="Zend\Acl">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Acl"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Exception.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="29" code="50005">No short description for class Zend_Acl_Exception</critical>
    </parse_markers>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Exception.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Exception" refers="\Zend_Exception"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="35" package="Zend\Acl">
      <name>Zend_Acl_Exception</name>
      <full_name>\Zend_Acl_Exception</full_name>
      <extends>\Zend_Exception</extends>
      <docblock line="29">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="29" name="category" description="Zend"/>
        <tag line="29" name="package" description="Zend_Acl"/>
        <tag line="29" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="29" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
    </class>
  </file>
  <file path="Zend/Acl/Resource.php" hash="5e11e925ec3558dec67b280207b25bac" package="Zend\Acl">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Acl"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Resource.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="29" code="50005">No short description for class Zend_Acl_Resource</critical>
    </parse_markers>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Acl/Resource/Interface.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Acl_Resource_Interface" refers="\Zend_Acl_Resource_Interface"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="35" package="Zend\Acl">
      <name>Zend_Acl_Resource</name>
      <full_name>\Zend_Acl_Resource</full_name>
      <extends/>
      <extends>\Zend_Acl_Resource_Interface</extends>
      <docblock line="29">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="29" name="category" description="Zend"/>
        <tag line="29" name="package" description="Zend_Acl"/>
        <tag line="29" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="29" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="42" package="Default">
        <name>$_resourceId</name>
        <default><![CDATA[]]></default>
        <docblock line="37">
          <description><![CDATA[Unique id of Resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="37" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="50" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="44">
          <description><![CDATA[Sets the Resource identifier]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="44" name="param" description="" type="string" variable="$resourceId">
            <type by_reference="false">string</type>
          </tag>
          <tag line="44" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$resourceId</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="60" package="Default">
        <name>getResourceId</name>
        <type>function</type>
        <docblock line="55">
          <description><![CDATA[Defined by Zend_Acl_Resource_Interface; returns the Resource identifier]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="55" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="71" package="Default">
        <name>__toString</name>
        <type>function</type>
        <docblock line="65">
          <description><![CDATA[Defined by Zend_Acl_Resource_Interface; returns the Resource identifier
Proxies to getResourceId()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="65" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Acl/Role.php" hash="c9861677b8e7e5f504bf6d2912bfbc85" package="Zend\Acl">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Acl"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Role.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="29" code="50005">No short description for class Zend_Acl_Role</critical>
    </parse_markers>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Acl/Role/Interface.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Acl_Role_Interface" refers="\Zend_Acl_Role_Interface"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="35" package="Zend\Acl">
      <name>Zend_Acl_Role</name>
      <full_name>\Zend_Acl_Role</full_name>
      <extends/>
      <extends>\Zend_Acl_Role_Interface</extends>
      <docblock line="29">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="29" name="category" description="Zend"/>
        <tag line="29" name="package" description="Zend_Acl"/>
        <tag line="29" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="29" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="42" package="Default">
        <name>$_roleId</name>
        <default><![CDATA[]]></default>
        <docblock line="37">
          <description><![CDATA[Unique id of Role]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="37" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="50" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="44">
          <description><![CDATA[Sets the Role identifier]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="44" name="param" description="" type="string" variable="$roleId">
            <type by_reference="false">string</type>
          </tag>
          <tag line="44" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$roleId</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="60" package="Default">
        <name>getRoleId</name>
        <type>function</type>
        <docblock line="55">
          <description><![CDATA[Defined by Zend_Acl_Role_Interface; returns the Role identifier]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="55" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="71" package="Default">
        <name>__toString</name>
        <type>function</type>
        <docblock line="65">
          <description><![CDATA[Defined by Zend_Acl_Role_Interface; returns the Role identifier
Proxies to getRoleId()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="65" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Acl/Role/Registry/Exception.php" hash="aeec6b3ad07b28da28997c4852b468bb" package="Zend\Acl">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Acl"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Exception.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="29" code="50005">No short description for class Zend_Acl_Role_Registry_Exception</critical>
    </parse_markers>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Acl/Exception.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Acl_Exception" refers="\Zend_Acl_Exception"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="35" package="Zend\Acl">
      <name>Zend_Acl_Role_Registry_Exception</name>
      <full_name>\Zend_Acl_Role_Registry_Exception</full_name>
      <extends>\Zend_Acl_Exception</extends>
      <docblock line="29">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="29" name="category" description="Zend"/>
        <tag line="29" name="package" description="Zend_Acl"/>
        <tag line="29" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="29" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
    </class>
  </file>
  <file path="Zend/Acl/Role/Interface.php" hash="970663c17c81cc69438e7c22390aa638" package="Zend\Acl">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Acl"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Interface.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <interface namespace="default" line="29" package="Zend\Acl">
      <name>Zend_Acl_Role_Interface</name>
      <full_name>\Zend_Acl_Role_Interface</full_name>
      <extends/>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="category" description="Zend"/>
        <tag line="23" name="package" description="Zend_Acl"/>
        <tag line="23" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="23" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="36" package="Default">
        <name>getRoleId</name>
        <type>function</type>
        <docblock line="31">
          <description><![CDATA[Returns the string identifier of the Role]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="31" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </interface>
  </file>
  <file path="Zend/Acl/Role/Registry.php" hash="a6548fbf5bb4114cc53cd882429697ee" package="Zend\Acl">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Acl"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Registry.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <error line="266" code="50010">No DocBlock was found for method getRoles()</error>
      <critical line="29" code="50005">No short description for class Zend_Acl_Role_Registry</critical>
    </parse_markers>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Acl/Role/Interface.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Acl_Role_Interface" refers="\Zend_Acl_Role_Interface"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="35" package="Zend\Acl">
      <name>Zend_Acl_Role_Registry</name>
      <full_name>\Zend_Acl_Role_Registry</full_name>
      <extends/>
      <docblock line="29">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="29" name="category" description="Zend"/>
        <tag line="29" name="package" description="Zend_Acl"/>
        <tag line="29" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="29" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="42" package="Default">
        <name>$_roles</name>
        <default><![CDATA[array()]]></default>
        <docblock line="37">
          <description><![CDATA[Internal Role registry data storage]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="37" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="63" package="Default">
        <name>add</name>
        <type>function</type>
        <docblock line="44">
          <description><![CDATA[Adds a Role having an identifier unique to the registry]]></description>
          <long-description><![CDATA[<p>The $parents parameter may be a reference to, or the string identifier for,
a Role existing in the registry, or $parents may be passed as an array of
these - mixing string identifiers and objects is ok - to indicate the Roles
from which the newly added Role will directly inherit.</p>

<p>In order to resolve potential ambiguities with conflicting rules inherited
from different parents, the most recently added parent takes precedence over
parents that were previously added. In other words, the first parent added
will have the least priority, and the last parent added will have the
highest priority.</p>]]></long-description>
          <tag line="44" name="param" description="" type="\Zend_Acl_Role_Interface" variable="$role">
            <type by_reference="false">\Zend_Acl_Role_Interface</type>
          </tag>
          <tag line="44" name="param" description="" type="\Zend_Acl_Role_Interface|string|array" variable="$parents">
            <type by_reference="false">\Zend_Acl_Role_Interface</type>
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="44" name="throws" description="" type="\Zend_Acl_Role_Registry_Exception">
            <type by_reference="false">\Zend_Acl_Role_Registry_Exception</type>
          </tag>
          <tag line="44" name="return" description="Provides a fluent interface" type="\Zend_Acl_Role_Registry">
            <type by_reference="false">\Zend_Acl_Role_Registry</type>
          </tag>
        </docblock>
        <argument line="63">
          <name>$role</name>
          <default><![CDATA[]]></default>
          <type>Zend_Acl_Role_Interface</type>
        </argument>
        <argument line="63">
          <name>$parents</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="119" package="Default">
        <name>get</name>
        <type>function</type>
        <docblock line="110">
          <description><![CDATA[Returns the identified Role]]></description>
          <long-description><![CDATA[<p>The $role parameter can either be a Role or a Role identifier.</p>]]></long-description>
          <tag line="110" name="param" description="" type="\Zend_Acl_Role_Interface|string" variable="$role">
            <type by_reference="false">\Zend_Acl_Role_Interface</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="110" name="throws" description="" type="\Zend_Acl_Role_Registry_Exception">
            <type by_reference="false">\Zend_Acl_Role_Registry_Exception</type>
          </tag>
          <tag line="110" name="return" description="" type="\Zend_Acl_Role_Interface">
            <type by_reference="false">\Zend_Acl_Role_Interface</type>
          </tag>
        </docblock>
        <argument line="119">
          <name>$role</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="146" package="Default">
        <name>has</name>
        <type>function</type>
        <docblock line="138">
          <description><![CDATA[Returns true if and only if the Role exists in the registry]]></description>
          <long-description><![CDATA[<p>The $role parameter can either be a Role or a Role identifier.</p>]]></long-description>
          <tag line="138" name="param" description="" type="\Zend_Acl_Role_Interface|string" variable="$role">
            <type by_reference="false">\Zend_Acl_Role_Interface</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="138" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="146">
          <name>$role</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="171" package="Default">
        <name>getParents</name>
        <type>function</type>
        <docblock line="157">
          <description><![CDATA[Returns an array of an existing Role's parents]]></description>
          <long-description><![CDATA[<p>The array keys are the identifiers of the parent Roles, and the values are
the parent Role instances. The parent Roles are ordered in this array by
ascending priority. The highest priority parent Role, last in the array,
corresponds with the parent Role most recently added.</p>

<p>If the Role does not have any parents, then an empty array is returned.</p>]]></long-description>
          <tag line="157" name="param" description="" type="\Zend_Acl_Role_Interface|string" variable="$role">
            <type by_reference="false">\Zend_Acl_Role_Interface</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="157" name="uses" description="\Zend_Acl_Role_Registry::get()" refers="\Zend_Acl_Role_Registry::get()"/>
          <tag line="157" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="171">
          <name>$role</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="193" package="Default">
        <name>inherits</name>
        <type>function</type>
        <docblock line="178">
          <description><![CDATA[Returns true if and only if $role inherits from $inherit]]></description>
          <long-description><![CDATA[<p>Both parameters may be either a Role or a Role identifier. If
$onlyParents is true, then $role must inherit directly from
$inherit in order to return true. By default, this method looks
through the entire inheritance DAG to determine whether $role
inherits from $inherit through its ancestor Roles.</p>]]></long-description>
          <tag line="178" name="param" description="" type="\Zend_Acl_Role_Interface|string" variable="$role">
            <type by_reference="false">\Zend_Acl_Role_Interface</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="178" name="param" description="" type="\Zend_Acl_Role_Interface|string" variable="$inherit">
            <type by_reference="false">\Zend_Acl_Role_Interface</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="178" name="param" description="" type="boolean" variable="$onlyParents">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="178" name="throws" description="" type="\Zend_Acl_Role_Registry_Exception">
            <type by_reference="false">\Zend_Acl_Role_Registry_Exception</type>
          </tag>
          <tag line="178" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="193">
          <name>$role</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="193">
          <name>$inherit</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="193">
          <name>$onlyParents</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="230" package="Default">
        <name>remove</name>
        <type>function</type>
        <docblock line="221">
          <description><![CDATA[Removes the Role from the registry]]></description>
          <long-description><![CDATA[<p>The $role parameter can either be a Role or a Role identifier.</p>]]></long-description>
          <tag line="221" name="param" description="" type="\Zend_Acl_Role_Interface|string" variable="$role">
            <type by_reference="false">\Zend_Acl_Role_Interface</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="221" name="throws" description="" type="\Zend_Acl_Role_Registry_Exception">
            <type by_reference="false">\Zend_Acl_Role_Registry_Exception</type>
          </tag>
          <tag line="221" name="return" description="Provides a fluent interface" type="\Zend_Acl_Role_Registry">
            <type by_reference="false">\Zend_Acl_Role_Registry</type>
          </tag>
        </docblock>
        <argument line="230">
          <name>$role</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="259" package="Default">
        <name>removeAll</name>
        <type>function</type>
        <docblock line="254">
          <description><![CDATA[Removes all Roles from the registry]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="254" name="return" description="Provides a fluent interface" type="\Zend_Acl_Role_Registry">
            <type by_reference="false">\Zend_Acl_Role_Registry</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="266">
        <name>getRoles</name>
        <type>function</type>
      </method>
    </class>
  </file>
  <file path="Zend/Acl/Resource/Interface.php" hash="d2f2fee41c7690764c5e3fc7e3c32f79" package="Zend\Acl">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Acl"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Interface.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <interface namespace="default" line="29" package="Zend\Acl">
      <name>Zend_Acl_Resource_Interface</name>
      <full_name>\Zend_Acl_Resource_Interface</full_name>
      <extends/>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="category" description="Zend"/>
        <tag line="23" name="package" description="Zend_Acl"/>
        <tag line="23" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="23" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="36" package="Default">
        <name>getResourceId</name>
        <type>function</type>
        <docblock line="31">
          <description><![CDATA[Returns the string identifier of the Resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="31" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </interface>
  </file>
  <file path="Zend/Cache.php" hash="7d013244b64f6167e3b0ee3f5562b0b5" package="Zend\Cache">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Cache"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Cache.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <error line="198" code="50015">Argument $e is missing from the Docblock of throwException()</error>
      <critical line="23" code="50005">No short description for class Zend_Cache</critical>
    </parse_markers>
    <class final="false" abstract="true" namespace="default" line="28" package="Zend\Cache">
      <name>Zend_Cache</name>
      <full_name>\Zend_Cache</full_name>
      <extends/>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="package" description="Zend_Cache"/>
        <tag line="23" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="23" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <constant namespace="default" line="72" package="Default">
        <name>CLEANING_MODE_ALL</name>
        <value><![CDATA['all']]></value>
        <docblock line="69">
          <description><![CDATA[Consts for clean() method]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="default" line="73">
        <name>CLEANING_MODE_OLD</name>
        <value><![CDATA['old']]></value>
      </constant>
      <constant namespace="default" line="74">
        <name>CLEANING_MODE_MATCHING_TAG</name>
        <value><![CDATA['matchingTag']]></value>
      </constant>
      <constant namespace="default" line="75">
        <name>CLEANING_MODE_NOT_MATCHING_TAG</name>
        <value><![CDATA['notMatchingTag']]></value>
      </constant>
      <constant namespace="default" line="76">
        <name>CLEANING_MODE_MATCHING_ANY_TAG</name>
        <value><![CDATA['matchingAnyTag']]></value>
      </constant>
      <property final="false" static="true" visibility="public" line="36" package="Default">
        <name>$standardFrontends</name>
        <default><![CDATA[array('Core', 'Output', 'Class', 'File', 'Function', 'Page')]]></default>
        <docblock line="31">
          <description><![CDATA[Standard frontends]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="31" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="43" package="Default">
        <name>$standardBackends</name>
        <default><![CDATA[array('File', 'Sqlite', 'Memcached', 'Libmemcached', 'Apc', 'ZendPlatform',
                                            'Xcache', 'TwoLevels', 'WinCache', 'ZendServer_Disk', 'ZendServer_ShMem')]]></default>
        <docblock line="38">
          <description><![CDATA[Standard backends]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="38" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="51" package="Default">
        <name>$standardExtendedBackends</name>
        <default><![CDATA[array('File', 'Apc', 'TwoLevels', 'Memcached', 'Libmemcached', 'Sqlite', 'WinCache')]]></default>
        <docblock line="46">
          <description><![CDATA[Standard backends which implement the ExtendedInterface]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="46" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="59" package="Default">
        <name>$availableFrontends</name>
        <default><![CDATA[array('Core', 'Output', 'Class', 'File', 'Function', 'Page')]]></default>
        <docblock line="53">
          <description><![CDATA[Only for backward compatibility (may be removed in next major release)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="53" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="53" name="deprecated" description=""/>
        </docblock>
      </property>
      <property final="false" static="true" visibility="public" line="67" package="Default">
        <name>$availableBackends</name>
        <default><![CDATA[array('File', 'Sqlite', 'Memcached', 'Libmemcached', 'Apc', 'ZendPlatform', 'Xcache', 'WinCache', 'TwoLevels')]]></default>
        <docblock line="61">
          <description><![CDATA[Only for backward compatibility (may be removed in next major release)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="61" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="61" name="deprecated" description=""/>
        </docblock>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="91" package="Default">
        <name>factory</name>
        <type>function</type>
        <docblock line="78">
          <description><![CDATA[Factory]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="78" name="param" description="frontend name (string) or Zend_Cache_Frontend_ object" type="mixed" variable="$frontend">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="78" name="param" description="backend name (string) or Zend_Cache_Backend_ object" type="mixed" variable="$backend">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="78" name="param" description="associative array of options for the corresponding frontend constructor" type="array" variable="$frontendOptions">
            <type by_reference="false">array</type>
          </tag>
          <tag line="78" name="param" description="associative array of options for the corresponding backend constructor" type="array" variable="$backendOptions">
            <type by_reference="false">array</type>
          </tag>
          <tag line="78" name="param" description="if true, the frontend argument is used as a complete class name ; if false, the frontend argument is used as the end of &quot;Zend_Cache_Frontend_[...]&quot; class name" type="boolean" variable="$customFrontendNaming">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="78" name="param" description="if true, the backend argument is used as a complete class name ; if false, the backend argument is used as the end of &quot;Zend_Cache_Backend_[...]&quot; class name" type="boolean" variable="$customBackendNaming">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="78" name="param" description="if true, there will no require_once for backend and frontend (useful only for custom backends/frontends)" type="boolean" variable="$autoload">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="78" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
          <tag line="78" name="return" description="" type="\Zend_Cache_Core|\Zend_Cache_Frontend">
            <type by_reference="false">\Zend_Cache_Core</type>
            <type by_reference="false">\Zend_Cache_Frontend</type>
          </tag>
        </docblock>
        <argument line="91">
          <name>$frontend</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="91">
          <name>$backend</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="91">
          <name>$frontendOptions</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
        <argument line="91">
          <name>$backendOptions</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
        <argument line="91">
          <name>$customFrontendNaming</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
        <argument line="91">
          <name>$customBackendNaming</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
        <argument line="91">
          <name>$autoload</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="124" package="Default">
        <name>_makeBackend</name>
        <type>function</type>
        <docblock line="115">
          <description><![CDATA[Backend Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="115" name="param" description="" type="string" variable="$backend">
            <type by_reference="false">string</type>
          </tag>
          <tag line="115" name="param" description="" type="array" variable="$backendOptions">
            <type by_reference="false">array</type>
          </tag>
          <tag line="115" name="param" description="" type="boolean" variable="$customBackendNaming">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="115" name="param" description="" type="boolean" variable="$autoload">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="115" name="return" description="" type="\Zend_Cache_Backend">
            <type by_reference="false">\Zend_Cache_Backend</type>
          </tag>
        </docblock>
        <argument line="124">
          <name>$backend</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="124">
          <name>$backendOptions</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="124">
          <name>$customBackendNaming</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
        <argument line="124">
          <name>$autoload</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="165" package="Default">
        <name>_makeFrontend</name>
        <type>function</type>
        <docblock line="156">
          <description><![CDATA[Frontend Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="156" name="param" description="" type="string" variable="$frontend">
            <type by_reference="false">string</type>
          </tag>
          <tag line="156" name="param" description="" type="array" variable="$frontendOptions">
            <type by_reference="false">array</type>
          </tag>
          <tag line="156" name="param" description="" type="boolean" variable="$customFrontendNaming">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="156" name="param" description="" type="boolean" variable="$autoload">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="156" name="return" description="" type="\Zend_Cache_Core|\Zend_Cache_Frontend">
            <type by_reference="false">\Zend_Cache_Core</type>
            <type by_reference="false">\Zend_Cache_Frontend</type>
          </tag>
        </docblock>
        <argument line="165">
          <name>$frontend</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="165">
          <name>$frontendOptions</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
        <argument line="165">
          <name>$customFrontendNaming</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
        <argument line="165">
          <name>$autoload</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="205" package="Default">
        <name>throwException</name>
        <type>function</type>
        <docblock line="198">
          <description><![CDATA[Throw an exception]]></description>
          <long-description><![CDATA[<p>Note : for perf reasons, the "load" of Zend/Cache/Exception is dynamic</p>]]></long-description>
          <tag line="198" name="param" description="Message for the exception" type="string" variable="$msg">
            <type by_reference="false">string</type>
          </tag>
          <tag line="198" name="throws" description="" type="\Zend_Cache_Exception">
            <type by_reference="false">\Zend_Cache_Exception</type>
          </tag>
        </docblock>
        <argument line="205">
          <name>$msg</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="205">
          <name>$e</name>
          <default><![CDATA[null]]></default>
          <type>Exception</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="default" line="218" package="Default">
        <name>_normalizeName</name>
        <type>function</type>
        <docblock line="212">
          <description><![CDATA[Normalize frontend and backend names to allow multiple words TitleCased]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="212" name="param" description="Name to normalize" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="212" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="218">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="private" namespace="default" line="241" package="Default">
        <name>_isReadable</name>
        <type>function</type>
        <docblock line="231">
          <description><![CDATA[Returns TRUE if the $filename is readable, or FALSE otherwise.]]></description>
          <long-description><![CDATA[<p>This function uses the PHP include_path, where PHP's is_readable()
does not.</p>

<p>Note : this method comes from Zend_Loader (see #ZF-2891 for details)</p>]]></long-description>
          <tag line="231" name="param" description="" type="string" variable="$filename">
            <type by_reference="false">string</type>
          </tag>
          <tag line="231" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="241">
          <name>$filename</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Barcode/Exception.php" hash="5ca7b11efd959fd1070131cfe04145cc" package="Zend\Barcode">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to version 1.0 of the Zend Framework
license, that is bundled with this package in the file LICENSE.txt, and
is available through the world-wide-web at the following URL:
http://framework.zend.com/license/new-bsd. If you did not receive
a copy of the Zend Framework license and are unable to obtain it
through the world-wide-web, please send a note to license@zend.com
so we can mail you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Barcode"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Exception.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <include line="24" type="Require Once" package="Default">
      <name>Zend/Exception.php</name>
      <docblock line="21">
        <description><![CDATA[Zend_Exception]]></description>
        <long-description><![CDATA[]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="34" package="Zend\Barcode">
      <name>Zend_Barcode_Exception</name>
      <full_name>\Zend_Barcode_Exception</full_name>
      <extends>\Zend_Exception</extends>
      <docblock line="26">
        <description><![CDATA[Zend_Barcode_Exception]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="26" name="category" description="Zend"/>
        <tag line="26" name="package" description="Zend_Barcode"/>
        <tag line="26" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="26" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="40" package="Default">
        <name>$_isRenderable</name>
        <default><![CDATA[true]]></default>
        <docblock line="36">
          <description><![CDATA[Is this exception renderable?]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="36" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="48" package="Default">
        <name>setIsRenderable</name>
        <type>function</type>
        <docblock line="42">
          <description><![CDATA[Set renderable flag]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="42" name="param" description="" type="bool" variable="$flag">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="42" name="return" description="" type="\Zend_Barcode_Exception">
            <type by_reference="false">\Zend_Barcode_Exception</type>
          </tag>
        </docblock>
        <argument line="48">
          <name>$flag</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="59" package="Default">
        <name>isRenderable</name>
        <type>function</type>
        <docblock line="54">
          <description><![CDATA[Retrieve renderable flag]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="54" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Barcode/Object/Code25.php" hash="26128b65170e5fcd2a11bc831710a21a" package="Zend\Barcode\Object">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Barcode"/>
      <tag line="2" name="subpackage" description="Object"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Code25.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Barcode/Object/ObjectAbstract.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Barcode_Object_ObjectAbstract" refers="\Zend_Barcode_Object_ObjectAbstract"/>
      </docblock>
    </include>
    <include line="31" type="Require Once" package="Default">
      <name>Zend/Validate/Barcode.php</name>
      <docblock line="28">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="28" name="see" description="\Zend_Validate_Barcode" refers="\Zend_Validate_Barcode"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="41" package="Zend\Barcode">
      <name>Zend_Barcode_Object_Code25</name>
      <full_name>\Zend_Barcode_Object_Code25</full_name>
      <extends>\Zend_Barcode_Object_ObjectAbstract</extends>
      <docblock line="33">
        <description><![CDATA[Class for generate Interleaved 2 of 5 barcode]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="33" name="category" description="Zend"/>
        <tag line="33" name="package" description="Zend_Barcode"/>
        <tag line="33" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="33" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="49" package="Default">
        <name>$_codingMap</name>
        <default><![CDATA[array(
        '0' => '00110',
        '1' => '10001',
        '2' => '01001',
        '3' => '11000',
        '4' => '00101',
        '5' => '10100',
        '6' => '01100',
        '7' => '00011',
        '8' => '10010',
        '9' => '01010',
    )]]></default>
        <docblock line="43">
          <description><![CDATA[Coding map
- 0 = narrow bar
- 1 = wide bar]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="43" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="66" package="Default">
        <name>_calculateBarcodeWidth</name>
        <type>function</type>
        <docblock line="62">
          <description><![CDATA[Width of the barcode (in pixels)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="62" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="81" package="Default">
        <name>_checkParams</name>
        <type>function</type>
        <docblock line="77">
          <description><![CDATA[Partial check of interleaved 2 of 5 barcode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="77" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="90" package="Default">
        <name>_prepareBarcode</name>
        <type>function</type>
        <docblock line="86">
          <description><![CDATA[Prepare array to draw barcode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="86" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="128" package="Default">
        <name>getChecksum</name>
        <type>function</type>
        <docblock line="122">
          <description><![CDATA[Get barcode checksum]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="122" name="param" description="" type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="122" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="128">
          <name>$text</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Barcode/Object/Upca.php" hash="61ab981ad09ef72e0da7ac2659ad9570" package="Zend\Barcode\Object">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Barcode"/>
      <tag line="2" name="subpackage" description="Object"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Upca.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Barcode/Object/Ean13.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Barcode_Object_Ean13" refers="\Zend_Barcode_Object_Ean13"/>
      </docblock>
    </include>
    <include line="31" type="Require Once" package="Default">
      <name>Zend/Validate/Barcode.php</name>
      <docblock line="28">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="28" name="see" description="\Zend_Validate_Barcode" refers="\Zend_Validate_Barcode"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="41" package="Zend\Barcode">
      <name>Zend_Barcode_Object_Upca</name>
      <full_name>\Zend_Barcode_Object_Upca</full_name>
      <extends>\Zend_Barcode_Object_Ean13</extends>
      <docblock line="33">
        <description><![CDATA[Class for generate UpcA barcode]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="33" name="category" description="Zend"/>
        <tag line="33" name="package" description="Zend_Barcode"/>
        <tag line="33" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="33" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="48" package="Default">
        <name>_getDefaultOptions</name>
        <type>function</type>
        <docblock line="44">
          <description><![CDATA[Default options for Postnet barcode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="44" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="59" package="Default">
        <name>_calculateBarcodeWidth</name>
        <type>function</type>
        <docblock line="55">
          <description><![CDATA[Width of the barcode (in pixels)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="55" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="73" package="Default">
        <name>_prepareBarcode</name>
        <type>function</type>
        <docblock line="69">
          <description><![CDATA[Prepare array to draw barcode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="69" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="131" package="Default">
        <name>_drawText</name>
        <type>function</type>
        <docblock line="127">
          <description><![CDATA[Partial function to draw text]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="127" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Barcode/Object/Ean8.php" hash="c7194d5f13e44da253cd78caa48ec0be" package="Zend\Barcode\Object">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Barcode"/>
      <tag line="2" name="subpackage" description="Object"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Ean8.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Barcode/Object/Ean13.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Barcode_Object_Ean13" refers="\Zend_Barcode_Object_Ean13"/>
      </docblock>
    </include>
    <include line="31" type="Require Once" package="Default">
      <name>Zend/Validate/Barcode.php</name>
      <docblock line="28">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="28" name="see" description="\Zend_Validate_Barcode" refers="\Zend_Validate_Barcode"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="41" package="Zend\Barcode">
      <name>Zend_Barcode_Object_Ean8</name>
      <full_name>\Zend_Barcode_Object_Ean8</full_name>
      <extends>\Zend_Barcode_Object_Ean13</extends>
      <docblock line="33">
        <description><![CDATA[Class for generate Ean8 barcode]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="33" name="category" description="Zend"/>
        <tag line="33" name="package" description="Zend_Barcode"/>
        <tag line="33" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="33" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="48" package="Default">
        <name>_getDefaultOptions</name>
        <type>function</type>
        <docblock line="44">
          <description><![CDATA[Default options for Postnet barcode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="44" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="58" package="Default">
        <name>_calculateBarcodeWidth</name>
        <type>function</type>
        <docblock line="54">
          <description><![CDATA[Width of the barcode (in pixels)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="54" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="72" package="Default">
        <name>_prepareBarcode</name>
        <type>function</type>
        <docblock line="68">
          <description><![CDATA[Prepare array to draw barcode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="68" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="118" package="Default">
        <name>_drawText</name>
        <type>function</type>
        <docblock line="114">
          <description><![CDATA[Partial function to draw text]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="114" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="156" package="Default">
        <name>_validateText</name>
        <type>function</type>
        <docblock line="150">
          <description><![CDATA[Particular validation for Ean8 barcode objects
(to suppress checksum character substitution)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="150" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="150" name="param" description="" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="156">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="156">
          <name>$options</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Barcode/Object/Ean2.php" hash="c566c2ef2761296fceb29b275295b7c1" package="Zend\Barcode\Object">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Barcode"/>
      <tag line="2" name="subpackage" description="Object"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Ean2.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <error line="44" code="50018">No DocBlock was found for property $_parities</error>
      <error line="60" code="50010">No DocBlock was found for method _getParity()</error>
    </parse_markers>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Barcode/Object/Ean5.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Barcode_Object_Ean5" refers="\Zend_Barcode_Object_Ean5"/>
      </docblock>
    </include>
    <include line="31" type="Require Once" package="Default">
      <name>Zend/Validate/Barcode.php</name>
      <docblock line="28">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="28" name="see" description="\Zend_Validate_Barcode" refers="\Zend_Validate_Barcode"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="41" package="Zend\Barcode">
      <name>Zend_Barcode_Object_Ean2</name>
      <full_name>\Zend_Barcode_Object_Ean2</full_name>
      <extends>\Zend_Barcode_Object_Ean5</extends>
      <docblock line="33">
        <description><![CDATA[Class for generate Ean2 barcode]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="33" name="category" description="Zend"/>
        <tag line="33" name="package" description="Zend_Barcode"/>
        <tag line="33" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="33" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="44">
        <name>$_parities</name>
        <default><![CDATA[array(
        0 => array('A','A'),
        1 => array('A','B'),
        2 => array('B','A'),
        3 => array('B','B')
    )]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="55" package="Default">
        <name>_getDefaultOptions</name>
        <type>function</type>
        <docblock line="51">
          <description><![CDATA[Default options for Ean2 barcode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="51" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="60">
        <name>_getParity</name>
        <type>function</type>
        <argument line="60">
          <name>$i</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Barcode/Object/Exception.php" hash="0776d85698e6a7e4f7df3a576ac576c7" package="Zend\Barcode">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to version 1.0 of the Zend Framework
license, that is bundled with this package in the file LICENSE.txt, and
is available through the world-wide-web at the following URL:
http://framework.zend.com/license/new-bsd. If you did not receive
a copy of the Zend Framework license and are unable to obtain it
through the world-wide-web, please send a note to license@zend.com
so we can mail you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Barcode"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Exception.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <include line="23" type="Require Once" package="Default">
      <name>Zend/Barcode/Exception.php</name>
      <docblock line="22">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="22" name="see" description="\Zend_Barcode_Exception" refers="\Zend_Barcode_Exception"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="33" package="Zend\Barcode">
      <name>Zend_Barcode_Object_Exception</name>
      <full_name>\Zend_Barcode_Object_Exception</full_name>
      <extends>\Zend_Barcode_Exception</extends>
      <docblock line="25">
        <description><![CDATA[Zend_Barcode_Renderer_Exception]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="25" name="category" description="Zend"/>
        <tag line="25" name="package" description="Zend_Barcode"/>
        <tag line="25" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="25" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
    </class>
  </file>
  <file path="Zend/Barcode/Object/Itf14.php" hash="d7c6ce68610fab7b53503d4a4399532e" package="Zend\Barcode\Object">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Barcode"/>
      <tag line="2" name="subpackage" description="Object"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Itf14.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <include line="24" type="Require Once" package="Default">
      <name>Zend/Barcode/Object/Code25interleaved.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Barcode_Object_Code25interleaved" refers="\Zend_Barcode_Object_Code25interleaved"/>
      </docblock>
    </include>
    <include line="27" type="Require Once" package="Default">
      <name>Zend/Validate/Barcode.php</name>
      <docblock line="26">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="26" name="see" description="\Zend_Validate_Barcode" refers="\Zend_Validate_Barcode"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="37" package="Zend\Barcode">
      <name>Zend_Barcode_Object_Itf14</name>
      <full_name>\Zend_Barcode_Object_Itf14</full_name>
      <extends>\Zend_Barcode_Object_Code25interleaved</extends>
      <docblock line="29">
        <description><![CDATA[Class for generate Itf14 barcode]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="29" name="category" description="Zend"/>
        <tag line="29" name="package" description="Zend_Barcode"/>
        <tag line="29" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="29" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="44" package="Default">
        <name>_getDefaultOptions</name>
        <type>function</type>
        <docblock line="40">
          <description><![CDATA[Default options for Identcode barcode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="40" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Barcode/Object/Ean5.php" hash="a3115ed7fe6ee735fedfd17269df2a5d" package="Zend\Barcode\Object">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Barcode"/>
      <tag line="2" name="subpackage" description="Object"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Ean5.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <error line="44" code="50018">No DocBlock was found for property $_parities</error>
      <error line="133" code="50010">No DocBlock was found for method _getParity()</error>
    </parse_markers>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Barcode/Object/Ean13.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Barcode_Object_Ean13" refers="\Zend_Barcode_Object_Ean13"/>
      </docblock>
    </include>
    <include line="31" type="Require Once" package="Default">
      <name>Zend/Validate/Barcode.php</name>
      <docblock line="28">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="28" name="see" description="\Zend_Validate_Barcode" refers="\Zend_Validate_Barcode"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="41" package="Zend\Barcode">
      <name>Zend_Barcode_Object_Ean5</name>
      <full_name>\Zend_Barcode_Object_Ean5</full_name>
      <extends>\Zend_Barcode_Object_Ean13</extends>
      <docblock line="33">
        <description><![CDATA[Class for generate Ean5 barcode]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="33" name="category" description="Zend"/>
        <tag line="33" name="package" description="Zend_Barcode"/>
        <tag line="33" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="33" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="44">
        <name>$_parities</name>
        <default><![CDATA[array(
        0 => array('B','B','A','A','A'),
        1 => array('B','A','B','A','A'),
        2 => array('B','A','A','B','A'),
        3 => array('B','A','A','A','B'),
        4 => array('A','B','B','A','A'),
        5 => array('A','A','B','B','A'),
        6 => array('A','A','A','B','B'),
        7 => array('A','B','A','B','A'),
        8 => array('A','B','A','A','B'),
        9 => array('A','A','B','A','B')
    )]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="61" package="Default">
        <name>_getDefaultOptions</name>
        <type>function</type>
        <docblock line="57">
          <description><![CDATA[Default options for Ean5 barcode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="57" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="70" package="Default">
        <name>_calculateBarcodeWidth</name>
        <type>function</type>
        <docblock line="66">
          <description><![CDATA[Width of the barcode (in pixels)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="66" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="83" package="Default">
        <name>_prepareBarcode</name>
        <type>function</type>
        <docblock line="79">
          <description><![CDATA[Prepare array to draw barcode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="79" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="121" package="Default">
        <name>getChecksum</name>
        <type>function</type>
        <docblock line="115">
          <description><![CDATA[Get barcode checksum]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="115" name="param" description="" type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="115" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="121">
          <name>$text</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="133">
        <name>_getParity</name>
        <type>function</type>
        <argument line="133">
          <name>$i</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="143" package="Default">
        <name>getText</name>
        <type>function</type>
        <docblock line="139">
          <description><![CDATA[Retrieve text to encode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="139" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Barcode/Object/Royalmail.php" hash="6a47e670949cda1bf0bae99a2c7e6732" package="Zend\Barcode\Object">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Barcode"/>
      <tag line="2" name="subpackage" description="Object"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Royalmail.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <error line="61" code="50018">No DocBlock was found for property $_rows</error>
      <error line="70" code="50018">No DocBlock was found for property $_columns</error>
    </parse_markers>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Barcode/Object/ObjectAbstract.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Barcode_Object_ObjectAbstract" refers="\Zend_Barcode_Object_ObjectAbstract"/>
      </docblock>
    </include>
    <include line="31" type="Require Once" package="Default">
      <name>Zend/Validate/Barcode.php</name>
      <docblock line="28">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="28" name="see" description="\Zend_Validate_Barcode" refers="\Zend_Validate_Barcode"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="41" package="Zend\Barcode">
      <name>Zend_Barcode_Object_Royalmail</name>
      <full_name>\Zend_Barcode_Object_Royalmail</full_name>
      <extends>\Zend_Barcode_Object_ObjectAbstract</extends>
      <docblock line="33">
        <description><![CDATA[Class for generate Royal maim barcode]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="33" name="category" description="Zend"/>
        <tag line="33" name="package" description="Zend_Barcode"/>
        <tag line="33" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="33" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="52" package="Default">
        <name>$_codingMap</name>
        <default><![CDATA[array(
        '0' => '3300', '1' => '3210', '2' => '3201', '3' => '2310', '4' => '2301', '5' => '2211',
        '6' => '3120', '7' => '3030', '8' => '3021', '9' => '2130', 'A' => '2121', 'B' => '2031',
        'C' => '3102', 'D' => '3012', 'E' => '3003', 'F' => '2112', 'G' => '2103', 'H' => '2013',
        'I' => '1320', 'J' => '1230', 'K' => '1221', 'L' => '0330', 'M' => '0321', 'N' => '0231',
        'O' => '1302', 'P' => '1212', 'Q' => '1203', 'R' => '0312', 'S' => '0303', 'T' => '0213',
        'U' => '1122', 'V' => '1032', 'W' => '1023', 'X' => '0132', 'Y' => '0123', 'Z' => '0033'
    )]]></default>
        <docblock line="44">
          <description><![CDATA[Coding map
- 0 = Tracker, Ascender and Descender
- 1 = Tracker and Ascender
- 2 = Tracker and Descender
- 3 = Tracker]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="44" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="61">
        <name>$_rows</name>
        <default><![CDATA[array(
        '0' => 1, '1' => 1, '2' => 1, '3' => 1, '4' => 1, '5' => 1,
        '6' => 2, '7' => 2, '8' => 2, '9' => 2, 'A' => 2, 'B' => 2,
        'C' => 3, 'D' => 3, 'E' => 3, 'F' => 3, 'G' => 3, 'H' => 3,
        'I' => 4, 'J' => 4, 'K' => 4, 'L' => 4, 'M' => 4, 'N' => 4,
        'O' => 5, 'P' => 5, 'Q' => 5, 'R' => 5, 'S' => 5, 'T' => 5,
        'U' => 0, 'V' => 0, 'W' => 0, 'X' => 0, 'Y' => 0, 'Z' => 0,
    )]]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="70">
        <name>$_columns</name>
        <default><![CDATA[array(
        '0' => 1, '1' => 2, '2' => 3, '3' => 4, '4' => 5, '5' => 0,
        '6' => 1, '7' => 2, '8' => 3, '9' => 4, 'A' => 5, 'B' => 0,
        'C' => 1, 'D' => 2, 'E' => 3, 'F' => 4, 'G' => 5, 'H' => 0,
        'I' => 1, 'J' => 2, 'K' => 3, 'L' => 4, 'M' => 5, 'N' => 0,
        'O' => 1, 'P' => 2, 'Q' => 3, 'R' => 4, 'S' => 5, 'T' => 0,
        'U' => 1, 'V' => 2, 'W' => 3, 'X' => 4, 'Y' => 5, 'Z' => 0,
    )]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="83" package="Default">
        <name>_getDefaultOptions</name>
        <type>function</type>
        <docblock line="79">
          <description><![CDATA[Default options for Postnet barcode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="79" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="96" package="Default">
        <name>_calculateBarcodeWidth</name>
        <type>function</type>
        <docblock line="92">
          <description><![CDATA[Width of the barcode (in pixels)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="92" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="109" package="Default">
        <name>_checkParams</name>
        <type>function</type>
        <docblock line="105">
          <description><![CDATA[Partial check of interleaved Postnet barcode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="105" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="116" package="Default">
        <name>_prepareBarcode</name>
        <type>function</type>
        <docblock line="112">
          <description><![CDATA[Prepare array to draw barcode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="112" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="145" package="Default">
        <name>getChecksum</name>
        <type>function</type>
        <docblock line="139">
          <description><![CDATA[Get barcode checksum]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="139" name="param" description="" type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="139" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="145">
          <name>$text</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Barcode/Object/Error.php" hash="7bd0b8006b54f975d0519b94bd9f6095" package="Zend\Barcode\Object">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Barcode"/>
      <tag line="2" name="subpackage" description="Object"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Error.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <error line="46" code="50015">Argument $recalculate is missing from the Docblock of getHeight()</error>
      <error line="55" code="50015">Argument $recalculate is missing from the Docblock of getWidth()</error>
    </parse_markers>
    <include line="24" type="Require Once" package="Default">
      <name>Zend/Barcode/Object/ObjectAbstract.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Barcode_Object_ObjectAbstract" refers="\Zend_Barcode_Object_ObjectAbstract"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="34" package="Zend\Barcode">
      <name>Zend_Barcode_Object_Error</name>
      <full_name>\Zend_Barcode_Object_Error</full_name>
      <extends>\Zend_Barcode_Object_ObjectAbstract</extends>
      <docblock line="26">
        <description><![CDATA[Class for generate Barcode]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="26" name="category" description="Zend"/>
        <tag line="26" name="package" description="Zend_Barcode"/>
        <tag line="26" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="26" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="41" package="Default">
        <name>validateText</name>
        <type>function</type>
        <docblock line="36">
          <description><![CDATA[All texts are accepted]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="36" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="36" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="41">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="50" package="Default">
        <name>getHeight</name>
        <type>function</type>
        <docblock line="46">
          <description><![CDATA[Height is forced]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="46" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="50">
          <name>$recalculate</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="59" package="Default">
        <name>getWidth</name>
        <type>function</type>
        <docblock line="55">
          <description><![CDATA[Width is forced]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="55" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="59">
          <name>$recalculate</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="69" package="Default">
        <name>draw</name>
        <type>function</type>
        <docblock line="64">
          <description><![CDATA[Reset precedent instructions
and draw the error message]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="64" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="81" package="Default">
        <name>_prepareBarcode</name>
        <type>function</type>
        <docblock line="77">
          <description><![CDATA[For compatibility reason]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="77" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="89" package="Default">
        <name>_checkParams</name>
        <type>function</type>
        <docblock line="85">
          <description><![CDATA[For compatibility reason]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="85" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="97" package="Default">
        <name>_calculateBarcodeWidth</name>
        <type>function</type>
        <docblock line="93">
          <description><![CDATA[For compatibility reason]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="93" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Barcode/Object/Upce.php" hash="ce2c3206249917f4f52f295d945c5a22" package="Zend\Barcode\Object">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Barcode"/>
      <tag line="2" name="subpackage" description="Object"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Upce.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <error line="44" code="50018">No DocBlock was found for property $_parities</error>
    </parse_markers>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Barcode/Object/Ean13.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Barcode_Object_Ean13" refers="\Zend_Barcode_Object_Ean13"/>
      </docblock>
    </include>
    <include line="31" type="Require Once" package="Default">
      <name>Zend/Validate/Barcode.php</name>
      <docblock line="28">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="28" name="see" description="\Zend_Validate_Barcode" refers="\Zend_Validate_Barcode"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="41" package="Zend\Barcode">
      <name>Zend_Barcode_Object_Upce</name>
      <full_name>\Zend_Barcode_Object_Upce</full_name>
      <extends>\Zend_Barcode_Object_Ean13</extends>
      <docblock line="33">
        <description><![CDATA[Class for generate UpcA barcode]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="33" name="category" description="Zend"/>
        <tag line="33" name="package" description="Zend_Barcode"/>
        <tag line="33" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="33" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="44">
        <name>$_parities</name>
        <default><![CDATA[array(
        0 => array(
            0 => array('B','B','B','A','A','A'),
            1 => array('B','B','A','B','A','A'),
            2 => array('B','B','A','A','B','A'),
            3 => array('B','B','A','A','A','B'),
            4 => array('B','A','B','B','A','A'),
            5 => array('B','A','A','B','B','A'),
            6 => array('B','A','A','A','B','B'),
            7 => array('B','A','B','A','B','A'),
            8 => array('B','A','B','A','A','B'),
            9 => array('B','A','A','B','A','B')),
        1 => array(
            0 => array('A','A','A','B','B','B'),
            1 => array('A','A','B','A','B','B'),
            2 => array('A','A','B','B','A','B'),
            3 => array('A','A','B','B','B','A'),
            4 => array('A','B','A','A','B','B'),
            5 => array('A','B','B','A','A','B'),
            6 => array('A','B','B','B','A','A'),
            7 => array('A','B','A','B','A','B'),
            8 => array('A','B','A','B','B','A'),
            9 => array('A','B','B','A','B','A'))
    )]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="73" package="Default">
        <name>_getDefaultOptions</name>
        <type>function</type>
        <docblock line="69">
          <description><![CDATA[Default options for Postnet barcode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="69" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="84" package="Default">
        <name>getText</name>
        <type>function</type>
        <docblock line="80">
          <description><![CDATA[Retrieve text to encode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="80" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="97" package="Default">
        <name>_calculateBarcodeWidth</name>
        <type>function</type>
        <docblock line="93">
          <description><![CDATA[Width of the barcode (in pixels)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="93" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="110" package="Default">
        <name>_prepareBarcode</name>
        <type>function</type>
        <docblock line="106">
          <description><![CDATA[Prepare array to draw barcode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="106" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="149" package="Default">
        <name>_drawText</name>
        <type>function</type>
        <docblock line="145">
          <description><![CDATA[Partial function to draw text]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="145" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="194" package="Default">
        <name>_validateText</name>
        <type>function</type>
        <docblock line="188">
          <description><![CDATA[Particular validation for Upce barcode objects
(to suppress checksum character substitution)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="188" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="188" name="param" description="" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="194">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="194">
          <name>$options</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="220" package="Default">
        <name>getChecksum</name>
        <type>function</type>
        <docblock line="214">
          <description><![CDATA[Get barcode checksum]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="214" name="param" description="" type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="214" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="220">
          <name>$text</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Barcode/Object/Code39.php" hash="f134e3e17803f0057cc642da84bd1cdd" package="Zend\Barcode\Object">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Barcode"/>
      <tag line="2" name="subpackage" description="Object"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Code39.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Barcode/Object/ObjectAbstract.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Barcode_Object_ObjectAbstract" refers="\Zend_Barcode_Object_ObjectAbstract"/>
      </docblock>
    </include>
    <include line="31" type="Require Once" package="Default">
      <name>Zend/Validate/Barcode.php</name>
      <docblock line="28">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="28" name="see" description="\'Zend_Validate_Barcode'" refers="\'Zend_Validate_Barcode'"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="41" package="Zend\Barcode">
      <name>Zend_Barcode_Object_Code39</name>
      <full_name>\Zend_Barcode_Object_Code39</full_name>
      <extends>\Zend_Barcode_Object_ObjectAbstract</extends>
      <docblock line="33">
        <description><![CDATA[Class for generate Code39 barcode]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="33" name="category" description="Zend"/>
        <tag line="33" name="package" description="Zend_Barcode"/>
        <tag line="33" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="33" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="47" package="Default">
        <name>$_codingMap</name>
        <default><![CDATA[array(
        '0' => '000110100',
        '1' => '100100001',
        '2' => '001100001',
        '3' => '101100000',
        '4' => '000110001',
        '5' => '100110000',
        '6' => '001110000',
        '7' => '000100101',
        '8' => '100100100',
        '9' => '001100100',
        'A' => '100001001',
        'B' => '001001001',
        'C' => '101001000',
        'D' => '000011001',
        'E' => '100011000',
        'F' => '001011000',
        'G' => '000001101',
        'H' => '100001100',
        'I' => '001001100',
        'J' => '000011100',
        'K' => '100000011',
        'L' => '001000011',
        'M' => '101000010',
        'N' => '000010011',
        'O' => '100010010',
        'P' => '001010010',
        'Q' => '000000111',
        'R' => '100000110',
        'S' => '001000110',
        'T' => '000010110',
        'U' => '110000001',
        'V' => '011000001',
        'W' => '111000000',
        'X' => '010010001',
        'Y' => '110010000',
        'Z' => '011010000',
        '-' => '010000101',
        '.' => '110000100',
        ' ' => '011000100',
        '$' => '010101000',
        '/' => '010100010',
        '+' => '010001010',
        '%' => '000101010',
        '*' => '010010100',
    )]]></default>
        <docblock line="43">
          <description><![CDATA[Coding map]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="43" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="98" package="Default">
        <name>_checkParams</name>
        <type>function</type>
        <docblock line="94">
          <description><![CDATA[Partial check of Code39 barcode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="94" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="107" package="Default">
        <name>_calculateBarcodeWidth</name>
        <type>function</type>
        <docblock line="103">
          <description><![CDATA[Width of the barcode (in pixels)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="103" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="120" package="Default">
        <name>setText</name>
        <type>function</type>
        <docblock line="115">
          <description><![CDATA[Set text to encode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="115" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="115" name="return" description="" type="\Zend_Barcode_Object">
            <type by_reference="false">\Zend_Barcode_Object</type>
          </tag>
        </docblock>
        <argument line="120">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="130" package="Default">
        <name>getText</name>
        <type>function</type>
        <docblock line="126">
          <description><![CDATA[Retrieve text to display]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="126" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="139" package="Default">
        <name>getTextToDisplay</name>
        <type>function</type>
        <docblock line="135">
          <description><![CDATA[Retrieve text to display]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="135" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="153" package="Default">
        <name>_prepareBarcode</name>
        <type>function</type>
        <docblock line="149">
          <description><![CDATA[Prepare array to draw barcode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="149" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="177" package="Default">
        <name>getChecksum</name>
        <type>function</type>
        <docblock line="171">
          <description><![CDATA[Get barcode checksum]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="171" name="param" description="" type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="171" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="177">
          <name>$text</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Barcode/Object/Code128.php" hash="14fd91ba4fbe2315e6aa8fe87e0c8f5f" package="Zend\Barcode\Object">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Barcode"/>
      <tag line="2" name="subpackage" description="Object"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Code25.php 20096 2010-01-06 02:05:09Z bkarwin $"/>
    </docblock>
    <parse_markers>
      <critical line="50" code="50019">No short description for property $_convertedText</critical>
      <error line="55" code="50018">No DocBlock was found for property $_codingMap</error>
      <error line="260" code="50015">Argument $string is missing from the Docblock of _convertToBarcodeChars()</error>
    </parse_markers>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Barcode/Object/ObjectAbstract.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Barcode_Object_ObjectAbstract" refers="\Zend_Barcode_Object_ObjectAbstract"/>
      </docblock>
    </include>
    <include line="31" type="Require Once" package="Default">
      <name>Zend/Validate/Barcode.php</name>
      <docblock line="28">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="28" name="see" description="\Zend_Validate_Barcode" refers="\Zend_Validate_Barcode"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="41" package="Zend\Barcode">
      <name>Zend_Barcode_Object_Code128</name>
      <full_name>\Zend_Barcode_Object_Code128</full_name>
      <extends>\Zend_Barcode_Object_ObjectAbstract</extends>
      <docblock line="33">
        <description><![CDATA[Class for generate Code128 barcode]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="33" name="category" description="Zend"/>
        <tag line="33" name="package" description="Zend_Barcode"/>
        <tag line="33" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="33" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="48" package="Default">
        <name>$_withChecksum</name>
        <default><![CDATA[true]]></default>
        <docblock line="43">
          <description><![CDATA[Drawing of checksum
(even if it's sometime optional, most of time it's required)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="43" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="53" package="Default">
        <name>$_convertedText</name>
        <default><![CDATA[array()]]></default>
        <docblock line="50">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="50" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="55">
        <name>$_codingMap</name>
        <default><![CDATA[array(
                 0 => "11011001100",   1 => "11001101100",   2 => "11001100110",
                 3 => "10010011000",   4 => "10010001100",   5 => "10001001100",
                 6 => "10011001000",   7 => "10011000100",   8 => "10001100100",
                 9 => "11001001000",  10 => "11001000100",  11 => "11000100100",
                12 => "10110011100",  13 => "10011011100",  14 => "10011001110",
                15 => "10111001100",  16 => "10011101100",  17 => "10011100110",
                18 => "11001110010",  19 => "11001011100",  20 => "11001001110",
                21 => "11011100100",  22 => "11001110100",  23 => "11101101110",
                24 => "11101001100",  25 => "11100101100",  26 => "11100100110",
                27 => "11101100100",  28 => "11100110100",  29 => "11100110010",
                30 => "11011011000",  31 => "11011000110",  32 => "11000110110",
                33 => "10100011000",  34 => "10001011000",  35 => "10001000110",
                36 => "10110001000",  37 => "10001101000",  38 => "10001100010",
                39 => "11010001000",  40 => "11000101000",  41 => "11000100010",
                42 => "10110111000",  43 => "10110001110",  44 => "10001101110",
                45 => "10111011000",  46 => "10111000110",  47 => "10001110110",
                48 => "11101110110",  49 => "11010001110",  50 => "11000101110",
                51 => "11011101000",  52 => "11011100010",  53 => "11011101110",
                54 => "11101011000",  55 => "11101000110",  56 => "11100010110",
                57 => "11101101000",  58 => "11101100010",  59 => "11100011010",
                60 => "11101111010",  61 => "11001000010",  62 => "11110001010",
                63 => "10100110000",  64 => "10100001100",  65 => "10010110000",
                66 => "10010000110",  67 => "10000101100",  68 => "10000100110",
                69 => "10110010000",  70 => "10110000100",  71 => "10011010000",
                72 => "10011000010",  73 => "10000110100",  74 => "10000110010",
                75 => "11000010010",  76 => "11001010000",  77 => "11110111010",
                78 => "11000010100",  79 => "10001111010",  80 => "10100111100",
                81 => "10010111100",  82 => "10010011110",  83 => "10111100100",
                84 => "10011110100",  85 => "10011110010",  86 => "11110100100",
                87 => "11110010100",  88 => "11110010010",  89 => "11011011110",
                90 => "11011110110",  91 => "11110110110",  92 => "10101111000",
                93 => "10100011110",  94 => "10001011110",  95 => "10111101000",
                96 => "10111100010",  97 => "11110101000",  98 => "11110100010",
                99 => "10111011110", 100 => "10111101110", 101 => "11101011110",
               102 => "11110101110",
               103 => "11010000100", 104 => "11010010000", 105 => "11010011100",
               106 => "1100011101011")]]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="98" package="Default">
        <name>$_charSets</name>
        <default><![CDATA[array(
        'A' => array(
            ' ', '!', '"', '#', '$', '%', '&', "'",
            '(', ')', '*', '+', ',', '-', '.', '/',
            '0', '1', '2', '3', '4', '5', '6', '7',
            '8', '9', ':', ';', '<', '=', '>', '?',
            '@', 'A', 'B', 'C', 'D', 'E', 'F', 'G',
            'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',
            'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W',
            'X', 'Y', 'Z', '[', '\\', ']', '^', '_',
            0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07,
            0x08, 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F,
            0x10, 0x11, 0x12, 0x13, 0x14, 0x15, 0x16, 0x17,
            0x18, 0x19, 0x1A, 0x1B, 0x1C, 0x1D, 0x1E, 0x1F,
            'FNC3', 'FNC2', 'SHIFT', 'Code C', 'Code B', 'FNC4', 'FNC1',
            'START A', 'START B', 'START C', 'STOP'),
        'B' => array(
            ' ', '!', '"', '#', '$', '%', '&', "'",
            '(', ')', '*', '+', ',', '-', '.', '/',
            '0', '1', '2', '3', '4', '5', '6', '7',
            '8', '9', ':', ';', '<', '=', '>', '?',
            '@', 'A', 'B', 'C', 'D', 'E', 'F', 'G',
            'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O',
            'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W',
            'X', 'Y', 'Z', '[', '\\', ']', '^', '_',
            '`', 'a', 'b', 'c', 'd', 'e', 'f', 'g',
            'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',
            'p', 'q', 'r', 's', 't', 'u', 'v', 'w',
            'x', 'y', 'z', '{', '|', '}', '~', 0x7F,
            'FNC3', 'FNC2', 'SHIFT', 'Code C', 'FNC4', 'Code A', 'FNC1',
            'START A', 'START B', 'START C', 'STOP',),
        'C' => array(
            '00', '01', '02', '03', '04', '05', '06', '07', '08', '09',
            '10', '11', '12', '13', '14', '15', '16', '17', '18', '19',
            '20', '21', '22', '23', '24', '25', '26', '27', '28', '29',
            '30', '31', '32', '33', '34', '35', '36', '37', '38', '39',
            '40', '41', '42', '43', '44', '45', '46', '47', '48', '49',
            '50', '51', '52', '53', '54', '55', '56', '57', '58', '59',
            '60', '61', '62', '63', '64', '65', '66', '67', '68', '69',
            '70', '71', '72', '73', '74', '75', '76', '77', '78', '79',
            '80', '81', '82', '83', '84', '85', '86', '87', '88', '89',
            '90', '91', '92', '93', '94', '95', '96', '97', '98', '99',
            'Code B', 'Code A', 'FNC1', 'START A', 'START B', 'START C', 'STOP'))]]></default>
        <docblock line="94">
          <description><![CDATA[Character sets ABC]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="94" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="188" package="Default">
        <name>_calculateBarcodeWidth</name>
        <type>function</type>
        <docblock line="184">
          <description><![CDATA[Width of the barcode (in pixels)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="184" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="208" package="Default">
        <name>_checkParams</name>
        <type>function</type>
        <docblock line="204">
          <description><![CDATA[Partial check of code128 barcode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="204" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="216" package="Default">
        <name>_prepareBarcode</name>
        <type>function</type>
        <docblock line="212">
          <description><![CDATA[Prepare array to draw barcode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="212" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="protected" namespace="default" line="246" package="Default">
        <name>_isDigit</name>
        <type>function</type>
        <docblock line="238">
          <description><![CDATA[Checks if the next $length chars of $string starting at $pos are numeric.]]></description>
          <long-description><![CDATA[<p>Returns false if the end of the string is reached.</p>]]></long-description>
          <tag line="238" name="param" description="String to search" type="string" variable="$string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="238" name="param" description="Starting position" type="int" variable="$pos">
            <type by_reference="false">int</type>
          </tag>
          <tag line="238" name="param" description="Length to search" type="int" variable="$length">
            <type by_reference="false">int</type>
          </tag>
          <tag line="238" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="246">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="246">
          <name>$pos</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="246">
          <name>$length</name>
          <default><![CDATA[2]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="264" package="Default">
        <name>_convertToBarcodeChars</name>
        <type>function</type>
        <docblock line="260">
          <description><![CDATA[Convert string to barcode string]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="260" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="264">
          <name>$string</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="343" package="Default">
        <name>setText</name>
        <type>function</type>
        <docblock line="338">
          <description><![CDATA[Set text to encode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="338" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="338" name="return" description="" type="\Zend_Barcode_Object">
            <type by_reference="false">\Zend_Barcode_Object</type>
          </tag>
        </docblock>
        <argument line="343">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="353" package="Default">
        <name>getText</name>
        <type>function</type>
        <docblock line="349">
          <description><![CDATA[Retrieve text to encode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="349" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="364" package="Default">
        <name>getChecksum</name>
        <type>function</type>
        <docblock line="358">
          <description><![CDATA[Get barcode checksum]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="358" name="param" description="" type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="358" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="364">
          <name>$text</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="386" package="Default">
        <name>_validateText</name>
        <type>function</type>
        <docblock line="381">
          <description><![CDATA[Standard validation for most of barcode objects]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="381" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="381" name="param" description="" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="386">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="386">
          <name>$options</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Barcode/Object/Planet.php" hash="9571b586de0ca4992d200490c8a9d9fb" package="Zend\Barcode\Object">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Barcode"/>
      <tag line="2" name="subpackage" description="Object"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Planet.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Barcode/Object/Postnet.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Barcode_Object_Postnet" refers="\Zend_Barcode_Object_Postnet"/>
      </docblock>
    </include>
    <include line="31" type="Require Once" package="Default">
      <name>Zend/Validate/Barcode.php</name>
      <docblock line="28">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="28" name="see" description="\Zend_Validate_Barcode" refers="\Zend_Validate_Barcode"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="41" package="Zend\Barcode">
      <name>Zend_Barcode_Object_Planet</name>
      <full_name>\Zend_Barcode_Object_Planet</full_name>
      <extends>\Zend_Barcode_Object_Postnet</extends>
      <docblock line="33">
        <description><![CDATA[Class for generate Planet barcode]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="33" name="category" description="Zend"/>
        <tag line="33" name="package" description="Zend_Barcode"/>
        <tag line="33" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="33" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="50" package="Default">
        <name>$_codingMap</name>
        <default><![CDATA[array(
        0 => "00111",
        1 => "11100",
        2 => "11010",
        3 => "11001",
        4 => "10110",
        5 => "10101",
        6 => "10011",
        7 => "01110",
        8 => "01101",
        9 => "01011"
    )]]></default>
        <docblock line="44">
          <description><![CDATA[Coding map
- 0 = half bar
- 1 = complete bar]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="44" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
    </class>
  </file>
  <file path="Zend/Barcode/Object/Leitcode.php" hash="fa26ea19bba89fc80b5ee43b80c6e8b0" package="Zend\Barcode\Object">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Barcode"/>
      <tag line="2" name="subpackage" description="Object"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Leitcode.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Barcode/Object/Identcode.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Barcode_Object_Identcode" refers="\Zend_Barcode_Object_Identcode"/>
      </docblock>
    </include>
    <include line="31" type="Require Once" package="Default">
      <name>Zend/Validate/Barcode.php</name>
      <docblock line="28">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="28" name="see" description="\Zend_Validate_Barcode" refers="\Zend_Validate_Barcode"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="41" package="Zend\Barcode">
      <name>Zend_Barcode_Object_Leitcode</name>
      <full_name>\Zend_Barcode_Object_Leitcode</full_name>
      <extends>\Zend_Barcode_Object_Identcode</extends>
      <docblock line="33">
        <description><![CDATA[Class for generate Identcode barcode]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="33" name="category" description="Zend"/>
        <tag line="33" name="package" description="Zend_Barcode"/>
        <tag line="33" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="33" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="48" package="Default">
        <name>_getDefaultOptions</name>
        <type>function</type>
        <docblock line="44">
          <description><![CDATA[Default options for Leitcode barcode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="44" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="58" package="Default">
        <name>getTextToDisplay</name>
        <type>function</type>
        <docblock line="54">
          <description><![CDATA[Retrieve text to display]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="54" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Barcode/Object/Ean13.php" hash="2d278674027d57e5b1545e8f265f6cb6" package="Zend\Barcode\Object">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Barcode"/>
      <tag line="2" name="subpackage" description="Object"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Ean13.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <error line="64" code="50018">No DocBlock was found for property $_parities</error>
      <error line="191" code="50010">No DocBlock was found for method _drawEan13Text()</error>
    </parse_markers>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Barcode/Object/ObjectAbstract.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Barcode_Object_ObjectAbstract" refers="\Zend_Barcode_Object_ObjectAbstract"/>
      </docblock>
    </include>
    <include line="31" type="Require Once" package="Default">
      <name>Zend/Validate/Barcode.php</name>
      <docblock line="28">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="28" name="see" description="\Zend_Validate_Barcode" refers="\Zend_Validate_Barcode"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="41" package="Zend\Barcode">
      <name>Zend_Barcode_Object_Ean13</name>
      <full_name>\Zend_Barcode_Object_Ean13</full_name>
      <extends>\Zend_Barcode_Object_ObjectAbstract</extends>
      <docblock line="33">
        <description><![CDATA[Class for generate Ean13 barcode]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="33" name="category" description="Zend"/>
        <tag line="33" name="package" description="Zend_Barcode"/>
        <tag line="33" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="33" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="50" package="Default">
        <name>$_codingMap</name>
        <default><![CDATA[array(
        'A' => array(
            0 => "0001101", 1 => "0011001", 2 => "0010011", 3 => "0111101", 4 => "0100011",
            5 => "0110001", 6 => "0101111", 7 => "0111011", 8 => "0110111", 9 => "0001011"
        ),
        'B' => array(
            0 => "0100111", 1 => "0110011", 2 => "0011011", 3 => "0100001", 4 => "0011101",
            5 => "0111001", 6 => "0000101", 7 => "0010001", 8 => "0001001", 9 => "0010111"
        ),
        'C' => array(
            0 => "1110010", 1 => "1100110", 2 => "1101100", 3 => "1000010", 4 => "1011100",
            5 => "1001110", 6 => "1010000", 7 => "1000100", 8 => "1001000", 9 => "1110100"
        ))]]></default>
        <docblock line="44">
          <description><![CDATA[Coding map
- 0 = narrow bar
- 1 = wide bar]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="44" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="64">
        <name>$_parities</name>
        <default><![CDATA[array(
        0 => array('A','A','A','A','A','A'),
        1 => array('A','A','B','A','B','B'),
        2 => array('A','A','B','B','A','B'),
        3 => array('A','A','B','B','B','A'),
        4 => array('A','B','A','A','B','B'),
        5 => array('A','B','B','A','A','B'),
        6 => array('A','B','B','B','A','A'),
        7 => array('A','B','A','B','A','B'),
        8 => array('A','B','A','B','B','A'),
        9 => array('A','B','B','A','B','A')
    )]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="81" package="Default">
        <name>_getDefaultOptions</name>
        <type>function</type>
        <docblock line="77">
          <description><![CDATA[Default options for Postnet barcode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="77" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="92" package="Default">
        <name>_calculateBarcodeWidth</name>
        <type>function</type>
        <docblock line="88">
          <description><![CDATA[Width of the barcode (in pixels)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="88" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="106" package="Default">
        <name>_checkParams</name>
        <type>function</type>
        <docblock line="102">
          <description><![CDATA[Partial check of interleaved EAN/UPC barcode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="102" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="113" package="Default">
        <name>_prepareBarcode</name>
        <type>function</type>
        <docblock line="109">
          <description><![CDATA[Prepare array to draw barcode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="109" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="162" package="Default">
        <name>getChecksum</name>
        <type>function</type>
        <docblock line="156">
          <description><![CDATA[Get barcode checksum]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="156" name="param" description="" type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="156" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="162">
          <name>$text</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="182" package="Default">
        <name>_drawText</name>
        <type>function</type>
        <docblock line="178">
          <description><![CDATA[Partial function to draw text]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="178" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="191">
        <name>_drawEan13Text</name>
        <type>function</type>
      </method>
    </class>
  </file>
  <file path="Zend/Barcode/Object/Postnet.php" hash="528f81650814ee2d3186871e510133f3" package="Zend\Barcode\Object">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Barcode"/>
      <tag line="2" name="subpackage" description="Object"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Postnet.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Barcode/Object/ObjectAbstract.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Barcode_Object_ObjectAbstract" refers="\Zend_Barcode_Object_ObjectAbstract"/>
      </docblock>
    </include>
    <include line="31" type="Require Once" package="Default">
      <name>Zend/Validate/Barcode.php</name>
      <docblock line="28">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="28" name="see" description="\Zend_Validate_Barcode" refers="\Zend_Validate_Barcode"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="41" package="Zend\Barcode">
      <name>Zend_Barcode_Object_Postnet</name>
      <full_name>\Zend_Barcode_Object_Postnet</full_name>
      <extends>\Zend_Barcode_Object_ObjectAbstract</extends>
      <docblock line="33">
        <description><![CDATA[Class for generate Postnet barcode]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="33" name="category" description="Zend"/>
        <tag line="33" name="package" description="Zend_Barcode"/>
        <tag line="33" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="33" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="50" package="Default">
        <name>$_codingMap</name>
        <default><![CDATA[array(
        0 => "11000",
        1 => "00011",
        2 => "00101",
        3 => "00110",
        4 => "01001",
        5 => "01010",
        6 => "01100",
        7 => "10001",
        8 => "10010",
        9 => "10100"
    )]]></default>
        <docblock line="44">
          <description><![CDATA[Coding map
- 0 = half bar
- 1 = complete bar]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="44" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="67" package="Default">
        <name>_getDefaultOptions</name>
        <type>function</type>
        <docblock line="63">
          <description><![CDATA[Default options for Postnet barcode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="63" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="80" package="Default">
        <name>_calculateBarcodeWidth</name>
        <type>function</type>
        <docblock line="76">
          <description><![CDATA[Width of the barcode (in pixels)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="76" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="93" package="Default">
        <name>_checkParams</name>
        <type>function</type>
        <docblock line="89">
          <description><![CDATA[Partial check of interleaved Postnet barcode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="89" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="100" package="Default">
        <name>_prepareBarcode</name>
        <type>function</type>
        <docblock line="96">
          <description><![CDATA[Prepare array to draw barcode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="96" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="129" package="Default">
        <name>getChecksum</name>
        <type>function</type>
        <docblock line="123">
          <description><![CDATA[Get barcode checksum]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="123" name="param" description="" type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="123" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="129">
          <name>$text</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Barcode/Object/Identcode.php" hash="4289b3a40ffca21b464f03d811edb431" package="Zend\Barcode\Object">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Barcode"/>
      <tag line="2" name="subpackage" description="Object"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Identcode.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Barcode/Object/Code25interleaved.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Barcode_Object_Code25interleaved" refers="\Zend_Barcode_Object_Code25interleaved"/>
      </docblock>
    </include>
    <include line="31" type="Require Once" package="Default">
      <name>Zend/Validate/Barcode.php</name>
      <docblock line="28">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="28" name="see" description="\Zend_Validate_Barcode" refers="\Zend_Validate_Barcode"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="41" package="Zend\Barcode">
      <name>Zend_Barcode_Object_Identcode</name>
      <full_name>\Zend_Barcode_Object_Identcode</full_name>
      <extends>\Zend_Barcode_Object_Code25interleaved</extends>
      <docblock line="33">
        <description><![CDATA[Class for generate Identcode barcode]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="33" name="category" description="Zend"/>
        <tag line="33" name="package" description="Zend_Barcode"/>
        <tag line="33" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="33" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="48" package="Default">
        <name>_getDefaultOptions</name>
        <type>function</type>
        <docblock line="44">
          <description><![CDATA[Default options for Identcode barcode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="44" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="58" package="Default">
        <name>getTextToDisplay</name>
        <type>function</type>
        <docblock line="54">
          <description><![CDATA[Retrieve text to display]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="54" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="71" package="Default">
        <name>validateText</name>
        <type>function</type>
        <docblock line="65">
          <description><![CDATA[Check allowed characters]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="65" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="65" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
          <tag line="65" name="throws" description="" type="\Zend_Barcode_Object_Exception">
            <type by_reference="false">\Zend_Barcode_Object_Exception</type>
          </tag>
        </docblock>
        <argument line="71">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="82" package="Default">
        <name>getChecksum</name>
        <type>function</type>
        <docblock line="76">
          <description><![CDATA[Get barcode checksum]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="76" name="param" description="" type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="76" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
        <argument line="82">
          <name>$text</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Barcode/Object/Code25interleaved.php" hash="f9f1a8b97b5c9ee42cfb94c4453be003" package="Zend\Barcode\Object">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Barcode"/>
      <tag line="2" name="subpackage" description="Object"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Code25interleaved.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <include line="24" type="Require Once" package="Default">
      <name>Zend/Barcode/Object/Code25.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Barcode_Object_Code25" refers="\Zend_Barcode_Object_Code25"/>
      </docblock>
    </include>
    <include line="27" type="Require Once" package="Default">
      <name>Zend/Validate/Barcode.php</name>
      <docblock line="26">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="26" name="see" description="\Zend_Validate_Barcode" refers="\Zend_Validate_Barcode"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="37" package="Zend\Barcode">
      <name>Zend_Barcode_Object_Code25interleaved</name>
      <full_name>\Zend_Barcode_Object_Code25interleaved</full_name>
      <extends>\Zend_Barcode_Object_Code25</extends>
      <docblock line="29">
        <description><![CDATA[Class for generate Interleaved 2 of 5 barcode]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="29" name="category" description="Zend"/>
        <tag line="29" name="package" description="Zend_Barcode"/>
        <tag line="29" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="29" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="43" package="Default">
        <name>$_withBearerBars</name>
        <default><![CDATA[false]]></default>
        <docblock line="39">
          <description><![CDATA[Drawing of bearer bars]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="39" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="49" package="Default">
        <name>_getDefaultOptions</name>
        <type>function</type>
        <docblock line="45">
          <description><![CDATA[Default options for Code25interleaved barcode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="45" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="59" package="Default">
        <name>setWithBearerBars</name>
        <type>function</type>
        <docblock line="54">
          <description><![CDATA[Activate/deactivate drawing of bearer bars]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="54" name="param" description="" type="boolean" variable="$value">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="54" name="return" description="" type="\Zend_Barcode_Object_Int25">
            <type by_reference="false">\Zend_Barcode_Object_Int25</type>
          </tag>
        </docblock>
        <argument line="59">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="69" package="Default">
        <name>getWithBearerBars</name>
        <type>function</type>
        <docblock line="65">
          <description><![CDATA[Retrieve if bearer bars are enabled]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="65" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="78" package="Default">
        <name>_calculateBarcodeWidth</name>
        <type>function</type>
        <docblock line="74">
          <description><![CDATA[Width of the barcode (in pixels)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="74" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="92" package="Default">
        <name>_prepareBarcode</name>
        <type>function</type>
        <docblock line="88">
          <description><![CDATA[Prepare array to draw barcode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="88" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="139" package="Default">
        <name>_postDrawBarcode</name>
        <type>function</type>
        <docblock line="134">
          <description><![CDATA[Drawing of bearer bars (if enabled)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="134" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Barcode/Object/ObjectAbstract.php" hash="f202d0d183a7ef3628a507c1a10772cc" package="Zend\Barcode\Object">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Barcode"/>
      <tag line="2" name="subpackage" description="Object"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: ObjectAbstract.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <error line="895" code="50015">Argument $value is missing from the Docblock of _checkText()</error>
      <error line="994" code="50015">Argument $recalculate is missing from the Docblock of getHeight()</error>
      <error line="1008" code="50015">Argument $recalculate is missing from the Docblock of getWidth()</error>
    </parse_markers>
    <class final="false" abstract="true" namespace="default" line="31" package="Zend\Barcode">
      <name>Zend_Barcode_Object_ObjectAbstract</name>
      <full_name>\Zend_Barcode_Object_ObjectAbstract</full_name>
      <extends/>
      <docblock line="23">
        <description><![CDATA[Class for generate Barcode]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="category" description="Zend"/>
        <tag line="23" name="package" description="Zend_Barcode"/>
        <tag line="23" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="23" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="37" package="Default">
        <name>$_barcodeNamespace</name>
        <default><![CDATA['Zend_Barcode_Object']]></default>
        <docblock line="33">
          <description><![CDATA[Namespace of the barcode for autoloading]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="33" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="43" package="Default">
        <name>$_instructions</name>
        <default><![CDATA[array()]]></default>
        <docblock line="39">
          <description><![CDATA[Set of drawing instructions]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="39" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="49" package="Default">
        <name>$_type</name>
        <default><![CDATA[null]]></default>
        <docblock line="45">
          <description><![CDATA[Barcode type]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="45" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="55" package="Default">
        <name>$_height</name>
        <default><![CDATA[null]]></default>
        <docblock line="51">
          <description><![CDATA[Height of the object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="51" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="61" package="Default">
        <name>$_width</name>
        <default><![CDATA[null]]></default>
        <docblock line="57">
          <description><![CDATA[Width of the object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="57" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="67" package="Default">
        <name>$_barHeight</name>
        <default><![CDATA[50]]></default>
        <docblock line="63">
          <description><![CDATA[Height of the bar]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="63" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="73" package="Default">
        <name>$_barThinWidth</name>
        <default><![CDATA[1]]></default>
        <docblock line="69">
          <description><![CDATA[Width of a thin bar]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="69" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="79" package="Default">
        <name>$_barThickWidth</name>
        <default><![CDATA[3]]></default>
        <docblock line="75">
          <description><![CDATA[Width of a thick bar]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="75" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="86" package="Default">
        <name>$_factor</name>
        <default><![CDATA[1]]></default>
        <docblock line="81">
          <description><![CDATA[Factor to multiply bar and font measure
(barHeight, barThinWidth, barThickWidth & fontSize)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="81" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="92" package="Default">
        <name>$_foreColor</name>
        <default><![CDATA[0x000000]]></default>
        <docblock line="88">
          <description><![CDATA[Font and bars color of the object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="88" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="98" package="Default">
        <name>$_backgroundColor</name>
        <default><![CDATA[0xFFFFFF]]></default>
        <docblock line="94">
          <description><![CDATA[Background color of the object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="94" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="104" package="Default">
        <name>$_withBorder</name>
        <default><![CDATA[false]]></default>
        <docblock line="100">
          <description><![CDATA[Activate/deactivate border of the object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="100" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="110" package="Default">
        <name>$_withQuietZones</name>
        <default><![CDATA[true]]></default>
        <docblock line="106">
          <description><![CDATA[Activate/deactivate drawing of quiet zones]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="106" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="116" package="Default">
        <name>$_mandatoryQuietZones</name>
        <default><![CDATA[false]]></default>
        <docblock line="112">
          <description><![CDATA[Force quiet zones even if]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="112" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="122" package="Default">
        <name>$_orientation</name>
        <default><![CDATA[0]]></default>
        <docblock line="118">
          <description><![CDATA[Orientation of the barcode in degrees]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="118" name="var" description="" type="float">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="129" package="Default">
        <name>$_offsetTop</name>
        <default><![CDATA[null]]></default>
        <docblock line="124">
          <description><![CDATA[Offset from the top the object
(calculated from the orientation)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="124" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="136" package="Default">
        <name>$_offsetLeft</name>
        <default><![CDATA[null]]></default>
        <docblock line="131">
          <description><![CDATA[Offset from the left the object
(calculated from the orientation)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="131" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="142" package="Default">
        <name>$_text</name>
        <default><![CDATA[null]]></default>
        <docblock line="138">
          <description><![CDATA[Text to display]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="138" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="148" package="Default">
        <name>$_drawText</name>
        <default><![CDATA[true]]></default>
        <docblock line="144">
          <description><![CDATA[Display (or not) human readable text]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="144" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="154" package="Default">
        <name>$_stretchText</name>
        <default><![CDATA[false]]></default>
        <docblock line="150">
          <description><![CDATA[Adjust (or not) position of human readable characters with barcode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="150" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="162" package="Default">
        <name>$_font</name>
        <default><![CDATA[null]]></default>
        <docblock line="156">
          <description><![CDATA[Font resource
 - integer (1 to 5): corresponds to GD included fonts
 - string: corresponds to path of a TTF font]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="156" name="var" description="" type="integer|string">
            <type by_reference="false">integer</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="168" package="Default">
        <name>$_fontSize</name>
        <default><![CDATA[10]]></default>
        <docblock line="164">
          <description><![CDATA[Font size]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="164" name="var" description="" type="float">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="174" package="Default">
        <name>$_withChecksum</name>
        <default><![CDATA[false]]></default>
        <docblock line="170">
          <description><![CDATA[Drawing of checksum]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="170" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="180" package="Default">
        <name>$_withChecksumInText</name>
        <default><![CDATA[false]]></default>
        <docblock line="176">
          <description><![CDATA[Drawing of checksum inside text]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="176" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="186" package="Default">
        <name>$_barcodeLength</name>
        <default><![CDATA[null]]></default>
        <docblock line="182">
          <description><![CDATA[Fix barcode length (numeric or string like 'even')]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="182" name="var" description="integer | string" type="\$_barcodeLength">
            <type by_reference="false">\$_barcodeLength</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="193" package="Default">
        <name>$_addLeadingZeros</name>
        <default><![CDATA[true]]></default>
        <docblock line="188">
          <description><![CDATA[Activate automatic addition of leading zeros
if barcode length is fixed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="188" name="var" description="boolean" type="\$_addLeadingZeros">
            <type by_reference="false">\$_addLeadingZeros</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="200" package="Default">
        <name>$_mandatoryChecksum</name>
        <default><![CDATA[false]]></default>
        <docblock line="195">
          <description><![CDATA[Activation of mandatory checksum
to deactivate unauthorized modification]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="195" name="var" description="boolean" type="\$_mandatoryChecksum">
            <type by_reference="false">\$_mandatoryChecksum</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="206" package="Default">
        <name>$_substituteChecksumCharacter</name>
        <default><![CDATA[0]]></default>
        <docblock line="202">
          <description><![CDATA[Character used to substitute checksum character for validation]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="202" name="var" description="mixed" type="\$_substituteChecksumCharacter">
            <type by_reference="false">\$_substituteChecksumCharacter</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="true" visibility="protected" line="212" package="Default">
        <name>$_staticFont</name>
        <default><![CDATA[null]]></default>
        <docblock line="208">
          <description><![CDATA[TTF font name: can be set before instanciation of the object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="208" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="219" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="214">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="214" name="param" description="" type="array|\Zend_Config" variable="$options">
            <type by_reference="false">array</type>
            <type by_reference="false">\Zend_Config</type>
          </tag>
          <tag line="214" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="219">
          <name>$options</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="242" package="Default">
        <name>_getDefaultOptions</name>
        <type>function</type>
        <docblock line="238">
          <description><![CDATA[Set default options for particular object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="238" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="251" package="Default">
        <name>setOptions</name>
        <type>function</type>
        <docblock line="246">
          <description><![CDATA[Set barcode state from options array]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="246" name="param" description="" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="246" name="return" description="" type="\Zend_Barcode_Object">
            <type by_reference="false">\Zend_Barcode_Object</type>
          </tag>
        </docblock>
        <argument line="251">
          <name>$options</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="267" package="Default">
        <name>setConfig</name>
        <type>function</type>
        <docblock line="262">
          <description><![CDATA[Set barcode state from config object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="262" name="param" description="" type="\Zend_Config" variable="$config">
            <type by_reference="false">\Zend_Config</type>
          </tag>
          <tag line="262" name="return" description="" type="\Zend_Barcode_Object">
            <type by_reference="false">\Zend_Barcode_Object</type>
          </tag>
        </docblock>
        <argument line="267">
          <name>$config</name>
          <default><![CDATA[]]></default>
          <type>Zend_Config</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="278" package="Default">
        <name>setBarcodeNamespace</name>
        <type>function</type>
        <docblock line="272">
          <description><![CDATA[Set barcode namespace for autoloading]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="272" name="param" description="" type="string" variable="$namespace">
            <type by_reference="false">string</type>
          </tag>
          <tag line="272" name="return" description="" type="\Zend_Barcode_Object">
            <type by_reference="false">\Zend_Barcode_Object</type>
          </tag>
        </docblock>
        <argument line="278">
          <name>$namespace</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="289" package="Default">
        <name>getBarcodeNamespace</name>
        <type>function</type>
        <docblock line="284">
          <description><![CDATA[Retrieve barcode namespace]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="284" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="298" package="Default">
        <name>getType</name>
        <type>function</type>
        <docblock line="294">
          <description><![CDATA[Retrieve type of barcode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="294" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="309" package="Default">
        <name>setBarHeight</name>
        <type>function</type>
        <docblock line="303">
          <description><![CDATA[Set height of the barcode bar]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="303" name="param" description="" type="integer" variable="$value">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="303" name="return" description="" type="\Zend_Barcode_Object">
            <type by_reference="false">\Zend_Barcode_Object</type>
          </tag>
          <tag line="303" name="throws" description="" type="\Zend_Barcode_Object_Exception">
            <type by_reference="false">\Zend_Barcode_Object_Exception</type>
          </tag>
        </docblock>
        <argument line="309">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="325" package="Default">
        <name>getBarHeight</name>
        <type>function</type>
        <docblock line="321">
          <description><![CDATA[Get height of the barcode bar]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="321" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="336" package="Default">
        <name>setBarThinWidth</name>
        <type>function</type>
        <docblock line="330">
          <description><![CDATA[Set thickness of thin bar]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="330" name="param" description="" type="integer" variable="$value">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="330" name="return" description="" type="\Zend_Barcode_Object">
            <type by_reference="false">\Zend_Barcode_Object</type>
          </tag>
          <tag line="330" name="throws" description="" type="\Zend_Barcode_Object_Exception">
            <type by_reference="false">\Zend_Barcode_Object_Exception</type>
          </tag>
        </docblock>
        <argument line="336">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="352" package="Default">
        <name>getBarThinWidth</name>
        <type>function</type>
        <docblock line="348">
          <description><![CDATA[Get thickness of thin bar]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="348" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="363" package="Default">
        <name>setBarThickWidth</name>
        <type>function</type>
        <docblock line="357">
          <description><![CDATA[Set thickness of thick bar]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="357" name="param" description="" type="integer" variable="$value">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="357" name="return" description="" type="\Zend_Barcode_Object">
            <type by_reference="false">\Zend_Barcode_Object</type>
          </tag>
          <tag line="357" name="throws" description="" type="\Zend_Barcode_Object_Exception">
            <type by_reference="false">\Zend_Barcode_Object_Exception</type>
          </tag>
        </docblock>
        <argument line="363">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="379" package="Default">
        <name>getBarThickWidth</name>
        <type>function</type>
        <docblock line="375">
          <description><![CDATA[Get thickness of thick bar]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="375" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="391" package="Default">
        <name>setFactor</name>
        <type>function</type>
        <docblock line="384">
          <description><![CDATA[Set factor applying to
thinBarWidth - thickBarWidth - barHeight - fontSize]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="384" name="param" description="" type="float" variable="$value">
            <type by_reference="false">float</type>
          </tag>
          <tag line="384" name="return" description="" type="\Zend_Barcode_Object">
            <type by_reference="false">\Zend_Barcode_Object</type>
          </tag>
          <tag line="384" name="throws" description="" type="\Zend_Barcode_Object_Exception">
            <type by_reference="false">\Zend_Barcode_Object_Exception</type>
          </tag>
        </docblock>
        <argument line="391">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="408" package="Default">
        <name>getFactor</name>
        <type>function</type>
        <docblock line="403">
          <description><![CDATA[Get factor applying to
thinBarWidth - thickBarWidth - barHeight - fontSize]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="403" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="419" package="Default">
        <name>setForeColor</name>
        <type>function</type>
        <docblock line="413">
          <description><![CDATA[Set color of the barcode and text]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="413" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="413" name="return" description="" type="\Zend_Barcode_Object">
            <type by_reference="false">\Zend_Barcode_Object</type>
          </tag>
          <tag line="413" name="throws" description="" type="\Zend_Barcode_Object_Exception">
            <type by_reference="false">\Zend_Barcode_Object_Exception</type>
          </tag>
        </docblock>
        <argument line="419">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="438" package="Default">
        <name>getForeColor</name>
        <type>function</type>
        <docblock line="434">
          <description><![CDATA[Retrieve color of the barcode and text]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="434" name="return" description="" type="\unknown">
            <type by_reference="false">\unknown</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="449" package="Default">
        <name>setBackgroundColor</name>
        <type>function</type>
        <docblock line="443">
          <description><![CDATA[Set the color of the background]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="443" name="param" description="" type="integer" variable="$value">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="443" name="return" description="" type="\Zend_Barcode_Object">
            <type by_reference="false">\Zend_Barcode_Object</type>
          </tag>
          <tag line="443" name="throws" description="" type="\Zend_Barcode_Object_Exception">
            <type by_reference="false">\Zend_Barcode_Object_Exception</type>
          </tag>
        </docblock>
        <argument line="449">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="468" package="Default">
        <name>getBackgroundColor</name>
        <type>function</type>
        <docblock line="464">
          <description><![CDATA[Retrieve background color of the image]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="464" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="478" package="Default">
        <name>setWithBorder</name>
        <type>function</type>
        <docblock line="473">
          <description><![CDATA[Activate/deactivate drawing of the bar]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="473" name="param" description="" type="boolean" variable="$value">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="473" name="return" description="" type="\Zend_Barcode_Object">
            <type by_reference="false">\Zend_Barcode_Object</type>
          </tag>
        </docblock>
        <argument line="478">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="488" package="Default">
        <name>getWithBorder</name>
        <type>function</type>
        <docblock line="484">
          <description><![CDATA[Retrieve if border are draw or not]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="484" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="498" package="Default">
        <name>setWithQuietZones</name>
        <type>function</type>
        <docblock line="493">
          <description><![CDATA[Activate/deactivate drawing of the quiet zones]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="493" name="param" description="" type="boolean" variable="$value">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="493" name="return" description="" type="\Zend_Barcode_Object">
            <type by_reference="false">\Zend_Barcode_Object</type>
          </tag>
        </docblock>
        <argument line="498">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="508" package="Default">
        <name>getWithQuietZones</name>
        <type>function</type>
        <docblock line="504">
          <description><![CDATA[Retrieve if quiet zones are draw or not]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="504" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="517" package="Default">
        <name>setReverseColor</name>
        <type>function</type>
        <docblock line="513">
          <description><![CDATA[Allow fast inversion of font/bars color and background color]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="513" name="return" description="" type="\Zend_Barcode_Object">
            <type by_reference="false">\Zend_Barcode_Object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="531" package="Default">
        <name>setOrientation</name>
        <type>function</type>
        <docblock line="525">
          <description><![CDATA[Set orientation of barcode and text]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="525" name="param" description="" type="float" variable="$value">
            <type by_reference="false">float</type>
          </tag>
          <tag line="525" name="return" description="" type="\Zend_Barcode_Object">
            <type by_reference="false">\Zend_Barcode_Object</type>
          </tag>
          <tag line="525" name="throws" description="" type="\Zend_Barcode_Object_Exception">
            <type by_reference="false">\Zend_Barcode_Object_Exception</type>
          </tag>
        </docblock>
        <argument line="531">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="541" package="Default">
        <name>getOrientation</name>
        <type>function</type>
        <docblock line="537">
          <description><![CDATA[Retrieve orientation of barcode and text]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="537" name="return" description="" type="float">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="551" package="Default">
        <name>setText</name>
        <type>function</type>
        <docblock line="546">
          <description><![CDATA[Set text to encode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="546" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="546" name="return" description="" type="\Zend_Barcode_Object">
            <type by_reference="false">\Zend_Barcode_Object</type>
          </tag>
        </docblock>
        <argument line="551">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="561" package="Default">
        <name>getText</name>
        <type>function</type>
        <docblock line="557">
          <description><![CDATA[Retrieve text to encode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="557" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="575" package="Default">
        <name>_addLeadingZeros</name>
        <type>function</type>
        <docblock line="570">
          <description><![CDATA[Automatically add leading zeros if barcode length is fixed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="570" name="param" description="" type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="570" name="param" description="" type="boolean" variable="$withoutChecksum">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="575">
          <name>$text</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="575">
          <name>$withoutChecksum</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="597" package="Default">
        <name>getRawText</name>
        <type>function</type>
        <docblock line="593">
          <description><![CDATA[Retrieve text to encode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="593" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="606" package="Default">
        <name>getTextToDisplay</name>
        <type>function</type>
        <docblock line="602">
          <description><![CDATA[Retrieve text to display]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="602" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="620" package="Default">
        <name>setDrawText</name>
        <type>function</type>
        <docblock line="615">
          <description><![CDATA[Activate/deactivate drawing of text to encode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="615" name="param" description="" type="boolean" variable="$value">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="615" name="return" description="" type="\Zend_Barcode_Object">
            <type by_reference="false">\Zend_Barcode_Object</type>
          </tag>
        </docblock>
        <argument line="620">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="630" package="Default">
        <name>getDrawText</name>
        <type>function</type>
        <docblock line="626">
          <description><![CDATA[Retrieve if drawing of text to encode is enabled]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="626" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="642" package="Default">
        <name>setStretchText</name>
        <type>function</type>
        <docblock line="635">
          <description><![CDATA[Activate/deactivate the adjustment of the position
of the characters to the position of the bars]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="635" name="param" description="" type="boolean" variable="$value">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="635" name="return" description="" type="\Zend_Barcode_Object">
            <type by_reference="false">\Zend_Barcode_Object</type>
          </tag>
          <tag line="635" name="throws" description="" type="\Zend_Barcode_Object_Exception">
            <type by_reference="false">\Zend_Barcode_Object_Exception</type>
          </tag>
        </docblock>
        <argument line="642">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="653" package="Default">
        <name>getStretchText</name>
        <type>function</type>
        <docblock line="648">
          <description><![CDATA[Retrieve if the adjustment of the position of the characters
to the position of the bars is enabled]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="648" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="665" package="Default">
        <name>setWithChecksum</name>
        <type>function</type>
        <docblock line="658">
          <description><![CDATA[Activate/deactivate the automatic generation
of the checksum character
added to the barcode text]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="658" name="param" description="" type="boolean" variable="$value">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="658" name="return" description="" type="\Zend_Barcode_Object">
            <type by_reference="false">\Zend_Barcode_Object</type>
          </tag>
        </docblock>
        <argument line="665">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="678" package="Default">
        <name>getWithChecksum</name>
        <type>function</type>
        <docblock line="673">
          <description><![CDATA[Retrieve if the checksum character is automatically
added to the barcode text]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="673" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="691" package="Default">
        <name>setWithChecksumInText</name>
        <type>function</type>
        <docblock line="683">
          <description><![CDATA[Activate/deactivate the automatic generation
of the checksum character
added to the barcode text]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="683" name="param" description="" type="boolean" variable="$value">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="683" name="return" description="" type="\Zend_Barcode_Object">
            <type by_reference="false">\Zend_Barcode_Object</type>
          </tag>
          <tag line="683" name="throws" description="" type="\Zend_Barcode_Object_Exception">
            <type by_reference="false">\Zend_Barcode_Object_Exception</type>
          </tag>
        </docblock>
        <argument line="691">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="704" package="Default">
        <name>getWithChecksumInText</name>
        <type>function</type>
        <docblock line="699">
          <description><![CDATA[Retrieve if the checksum character is automatically
added to the barcode text]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="699" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="714" package="Default">
        <name>setBarcodeFont</name>
        <type>function</type>
        <docblock line="709">
          <description><![CDATA[Set the font for all instances of barcode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="709" name="param" description="" type="string" variable="$font">
            <type by_reference="false">string</type>
          </tag>
          <tag line="709" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="714">
          <name>$font</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="729" package="Default">
        <name>setFont</name>
        <type>function</type>
        <docblock line="721">
          <description><![CDATA[Set the font:
 - if integer between 1 and 5, use gd built-in fonts
 - if string, $value is assumed to be the path to a TTF font]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="721" name="param" description="" type="integer|string" variable="$value">
            <type by_reference="false">integer</type>
            <type by_reference="false">string</type>
          </tag>
          <tag line="721" name="return" description="" type="\Zend_Barcode_Object">
            <type by_reference="false">\Zend_Barcode_Object</type>
          </tag>
          <tag line="721" name="throws" description="" type="\Zend_Barcode_Object_Exception">
            <type by_reference="false">\Zend_Barcode_Object_Exception</type>
          </tag>
        </docblock>
        <argument line="729">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="760" package="Default">
        <name>getFont</name>
        <type>function</type>
        <docblock line="756">
          <description><![CDATA[Retrieve the font]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="756" name="return" description="" type="integer|string">
            <type by_reference="false">integer</type>
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="771" package="Default">
        <name>setFontSize</name>
        <type>function</type>
        <docblock line="765">
          <description><![CDATA[Set the size of the font in case of TTF]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="765" name="param" description="" type="float" variable="$value">
            <type by_reference="false">float</type>
          </tag>
          <tag line="765" name="return" description="" type="\Zend_Barcode_Object">
            <type by_reference="false">\Zend_Barcode_Object</type>
          </tag>
          <tag line="765" name="throws" description="" type="\Zend_Barcode_Object_Exception">
            <type by_reference="false">\Zend_Barcode_Object_Exception</type>
          </tag>
        </docblock>
        <argument line="771">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="793" package="Default">
        <name>getFontSize</name>
        <type>function</type>
        <docblock line="789">
          <description><![CDATA[Retrieve the size of the font in case of TTF]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="789" name="return" description="" type="float">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="803" package="Default">
        <name>getQuietZone</name>
        <type>function</type>
        <docblock line="798">
          <description><![CDATA[Quiet zone before first bar
and after the last bar]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="798" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="816" package="Default">
        <name>_addInstruction</name>
        <type>function</type>
        <docblock line="812">
          <description><![CDATA[Add an instruction in the array of instructions]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="812" name="param" description="" type="array" variable="$instruction">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="816">
          <name>$instruction</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="825" package="Default">
        <name>getInstructions</name>
        <type>function</type>
        <docblock line="821">
          <description><![CDATA[Retrieve the set of drawing instructions]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="821" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="836" package="Default">
        <name>_addPolygon</name>
        <type>function</type>
        <docblock line="830">
          <description><![CDATA[Add a polygon drawing instruction in the set of instructions]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="830" name="param" description="" type="array" variable="$points">
            <type by_reference="false">array</type>
          </tag>
          <tag line="830" name="param" description="" type="integer" variable="$color">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="830" name="param" description="" type="boolean" variable="$filled">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="836">
          <name>$points</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
        <argument line="836">
          <name>$color</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="836">
          <name>$filled</name>
          <default><![CDATA[true]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="859" package="Default">
        <name>_addText</name>
        <type>function</type>
        <docblock line="849">
          <description><![CDATA[Add a text drawing instruction in the set of instructions]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="849" name="param" description="" type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="849" name="param" description="" type="float" variable="$size">
            <type by_reference="false">float</type>
          </tag>
          <tag line="849" name="param" description="" type="array" variable="$position">
            <type by_reference="false">array</type>
          </tag>
          <tag line="849" name="param" description="" type="string" variable="$font">
            <type by_reference="false">string</type>
          </tag>
          <tag line="849" name="param" description="" type="integer" variable="$color">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="849" name="param" description="" type="string" variable="$alignment">
            <type by_reference="false">string</type>
          </tag>
          <tag line="849" name="param" description="" type="float" variable="$orientation">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
        <argument line="860">
          <name>$text</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="861">
          <name>$size</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="862">
          <name>$position</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="863">
          <name>$font</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="864">
          <name>$color</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="865">
          <name>$alignment</name>
          <default><![CDATA['center']]></default>
          <type/>
        </argument>
        <argument line="866">
          <name>$orientation</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="887" package="Default">
        <name>checkParams</name>
        <type>function</type>
        <docblock line="883">
          <description><![CDATA[Checking of parameters after all settings]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="883" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="900" package="Default">
        <name>_checkText</name>
        <type>function</type>
        <docblock line="895">
          <description><![CDATA[Check if a text is really provided to barcode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="895" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="895" name="throws" description="" type="\Zend_Barcode_Object_Exception">
            <type by_reference="false">\Zend_Barcode_Object_Exception</type>
          </tag>
        </docblock>
        <argument line="900">
          <name>$value</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="921" package="Default">
        <name>_checkRatio</name>
        <type>function</type>
        <docblock line="914">
          <description><![CDATA[Check the ratio between the thick and the thin bar]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="914" name="param" description="" type="integer" variable="$min">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="914" name="param" description="" type="integer" variable="$max">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="914" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="914" name="throws" description="" type="\Zend_Barcode_Object_Exception">
            <type by_reference="false">\Zend_Barcode_Object_Exception</type>
          </tag>
        </docblock>
        <argument line="921">
          <name>$min</name>
          <default><![CDATA[2]]></default>
          <type/>
        </argument>
        <argument line="921">
          <name>$max</name>
          <default><![CDATA[3]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="940" package="Default">
        <name>_checkFontAndOrientation</name>
        <type>function</type>
        <docblock line="935">
          <description><![CDATA[Drawing with an angle is just allow TTF font]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="935" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="935" name="throws" description="" type="\Zend_Barcode_Object_Exception">
            <type by_reference="false">\Zend_Barcode_Object_Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="955" package="Default">
        <name>_calculateWidth</name>
        <type>function</type>
        <docblock line="950">
          <description><![CDATA[Width of the result image
(before any rotation)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="950" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="default" line="966" package="Default">
        <name>_calculateBarcodeWidth</name>
        <type>function</type>
        <docblock line="962">
          <description><![CDATA[Calculate the width of the barcode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="962" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="972" package="Default">
        <name>_calculateHeight</name>
        <type>function</type>
        <docblock line="968">
          <description><![CDATA[Height of the result object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="968" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="983" package="Default">
        <name>_calculateBarcodeHeight</name>
        <type>function</type>
        <docblock line="979">
          <description><![CDATA[Height of the barcode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="979" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="998" package="Default">
        <name>getHeight</name>
        <type>function</type>
        <docblock line="994">
          <description><![CDATA[Get height of the result object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="994" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="998">
          <name>$recalculate</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="1012" package="Default">
        <name>getWidth</name>
        <type>function</type>
        <docblock line="1008">
          <description><![CDATA[Get width of the result object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1008" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="1012">
          <name>$recalculate</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="1028" package="Default">
        <name>getOffsetLeft</name>
        <type>function</type>
        <docblock line="1022">
          <description><![CDATA[Calculate the offset from the left of the object
if an orientation is activated]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1022" name="param" description="" type="boolean" variable="$recalculate">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1022" name="return" description="" type="float">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
        <argument line="1028">
          <name>$recalculate</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="1055" package="Default">
        <name>getOffsetTop</name>
        <type>function</type>
        <docblock line="1049">
          <description><![CDATA[Calculate the offset from the top of the object
if an orientation is activated]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1049" name="param" description="" type="boolean" variable="$recalculate">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="1049" name="return" description="" type="float">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
        <argument line="1055">
          <name>$recalculate</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="1082" package="Default">
        <name>_rotate</name>
        <type>function</type>
        <docblock line="1076">
          <description><![CDATA[Apply rotation on a point in X/Y dimensions]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1076" name="param" description="x-position before rotation" type="float" variable="$x1">
            <type by_reference="false">float</type>
          </tag>
          <tag line="1076" name="param" description="y-position before rotation" type="float" variable="$y1">
            <type by_reference="false">float</type>
          </tag>
          <tag line="1076" name="return" description="Array of two elements corresponding to the new XY point" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1082">
          <name>$x1</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1082">
          <name>$y1</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="1097" package="Default">
        <name>draw</name>
        <type>function</type>
        <docblock line="1093">
          <description><![CDATA[Complete drawing of the barcode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1093" name="return" description="Table of instructions" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="1110" package="Default">
        <name>_drawBarcode</name>
        <type>function</type>
        <docblock line="1106">
          <description><![CDATA[Draw the barcode]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1106" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="1167" package="Default">
        <name>_drawBorder</name>
        <type>function</type>
        <docblock line="1163">
          <description><![CDATA[Partial function to draw border]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1163" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="1191" package="Default">
        <name>_drawText</name>
        <type>function</type>
        <docblock line="1187">
          <description><![CDATA[Partial function to draw text]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1187" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="1237" package="Default">
        <name>validateText</name>
        <type>function</type>
        <docblock line="1232">
          <description><![CDATA[Check for invalid characters]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1232" name="param" description="Text to be ckecked" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1232" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="1237">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="1247" package="Default">
        <name>_validateText</name>
        <type>function</type>
        <docblock line="1242">
          <description><![CDATA[Standard validation for most of barcode objects]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1242" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="1242" name="param" description="" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="1247">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="1247">
          <name>$options</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="default" line="1290" package="Default">
        <name>_prepareBarcode</name>
        <type>function</type>
        <docblock line="1276">
          <description><![CDATA[Each child must prepare the barcode and return
a table like array(
    0 => array(
        0 => int (visible(black) or not(white))
        1 => int (width of the bar)
        2 => float (0->1 position from the top of the beginning of the bar in %)
        3 => float (0->1 position from the top of the end of the bar in %)
    ),
    1 => ...]]></description>
          <long-description><![CDATA[<p>)</p>]]></long-description>
          <tag line="1276" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="default" line="1297" package="Default">
        <name>_checkParams</name>
        <type>function</type>
        <docblock line="1292">
          <description><![CDATA[Checking of parameters after all settings]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1292" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="1304" package="Default">
        <name>_preDrawBarcode</name>
        <type>function</type>
        <docblock line="1299">
          <description><![CDATA[Allow each child to draw something else]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1299" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="1314" package="Default">
        <name>_postDrawBarcode</name>
        <type>function</type>
        <docblock line="1308">
          <description><![CDATA[Allow each child to draw something else
(ex: bearer bars in interleaved 2 of 5 code)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="1308" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Barcode/Renderer/Pdf.php" hash="c79e314f734437f7dbb1ce5243a3e21f" package="Zend\Barcode\Renderer">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Barcode"/>
      <tag line="2" name="subpackage" description="Renderer"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Pdf.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <error line="63" code="50014">Name of argument $pdf does not match with the DocBlock's name $value in setResource()</error>
      <error line="63" code="50015">Argument $page is missing from the Docblock of setResource()</error>
      <notice line="63" code="50013">Parameter $value could not be found in setResource()</notice>
    </parse_markers>
    <include line="24" type="Require Once" package="Default">
      <name>Zend/Barcode/Renderer/RendererAbstract.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Barcode_Renderer_RendererAbstract" refers="\Zend_Barcode_Renderer_RendererAbstract"/>
      </docblock>
    </include>
    <include line="27" type="Require Once" package="Default">
      <name>Zend/Pdf.php</name>
      <docblock line="26">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="26" name="see" description="\Zend_Pdf" refers="\Zend_Pdf"/>
      </docblock>
    </include>
    <include line="30" type="Require Once" package="Default">
      <name>Zend/Pdf/Page.php</name>
      <docblock line="29">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="29" name="see" description="\Zend_Pdf_Page" refers="\Zend_Pdf_Page"/>
      </docblock>
    </include>
    <include line="33" type="Require Once" package="Default">
      <name>Zend/Pdf/Color/Rgb.php</name>
      <docblock line="32">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="32" name="see" description="\Zend_Pdf_Color_Rgb" refers="\Zend_Pdf_Color_Rgb"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="43" package="Zend\Barcode">
      <name>Zend_Barcode_Renderer_Pdf</name>
      <full_name>\Zend_Barcode_Renderer_Pdf</full_name>
      <extends>\Zend_Barcode_Renderer_RendererAbstract</extends>
      <docblock line="35">
        <description><![CDATA[Class for rendering the barcode in PDF resource]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="35" name="category" description="Zend"/>
        <tag line="35" name="package" description="Zend_Barcode"/>
        <tag line="35" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="35" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="49" package="Default">
        <name>$_resource</name>
        <default><![CDATA[null]]></default>
        <docblock line="45">
          <description><![CDATA[PDF resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="45" name="var" description="" type="\Zend_Pdf">
            <type by_reference="false">\Zend_Pdf</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="55" package="Default">
        <name>$_page</name>
        <default><![CDATA[0]]></default>
        <docblock line="51">
          <description><![CDATA[Page number in PDF resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="51" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="61" package="Default">
        <name>$_moduleSize</name>
        <default><![CDATA[0.5]]></default>
        <docblock line="57">
          <description><![CDATA[Module size rendering]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="57" name="var" description="" type="float">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="69" package="Default">
        <name>setResource</name>
        <type>function</type>
        <docblock line="63">
          <description><![CDATA[Set an image resource to draw the barcode inside]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="63" name="param" description="" type="resource" variable="$value">
            <type by_reference="false">resource</type>
          </tag>
          <tag line="63" name="return" description="" type="\Zend_Barcode_Renderer">
            <type by_reference="false">\Zend_Barcode_Renderer</type>
          </tag>
          <tag line="63" name="throws" description="" type="\Zend_Barcode_Renderer_Exception">
            <type by_reference="false">\Zend_Barcode_Renderer_Exception</type>
          </tag>
        </docblock>
        <argument line="69">
          <name>$pdf</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="69">
          <name>$page</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="95" package="Default">
        <name>_checkParams</name>
        <type>function</type>
        <docblock line="90">
          <description><![CDATA[Check renderer parameters]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="90" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="103" package="Default">
        <name>render</name>
        <type>function</type>
        <docblock line="99">
          <description><![CDATA[Draw the barcode in the PDF, send headers and the PDF]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="99" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="114" package="Default">
        <name>_initRenderer</name>
        <type>function</type>
        <docblock line="110">
          <description><![CDATA[Initialize the PDF resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="110" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="133" package="Default">
        <name>_drawPolygon</name>
        <type>function</type>
        <docblock line="127">
          <description><![CDATA[Draw a polygon in the rendering resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="127" name="param" description="" type="array" variable="$points">
            <type by_reference="false">array</type>
          </tag>
          <tag line="127" name="param" description="" type="integer" variable="$color">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="127" name="param" description="" type="boolean" variable="$filled">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="133">
          <name>$points</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="133">
          <name>$color</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="133">
          <name>$filled</name>
          <default><![CDATA[true]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="178" package="Default">
        <name>_drawText</name>
        <type>function</type>
        <docblock line="168">
          <description><![CDATA[Draw a text in the rendering resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="168" name="param" description="" type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="168" name="param" description="" type="float" variable="$size">
            <type by_reference="false">float</type>
          </tag>
          <tag line="168" name="param" description="" type="array" variable="$position">
            <type by_reference="false">array</type>
          </tag>
          <tag line="168" name="param" description="" type="string" variable="$font">
            <type by_reference="false">string</type>
          </tag>
          <tag line="168" name="param" description="" type="integer" variable="$color">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="168" name="param" description="" type="string" variable="$alignment">
            <type by_reference="false">string</type>
          </tag>
          <tag line="168" name="param" description="" type="float" variable="$orientation">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
        <argument line="179">
          <name>$text</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="180">
          <name>$size</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="181">
          <name>$position</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="182">
          <name>$font</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="183">
          <name>$color</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="184">
          <name>$alignment</name>
          <default><![CDATA['center']]></default>
          <type/>
        </argument>
        <argument line="185">
          <name>$orientation</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="230" package="Default">
        <name>widthForStringUsingFontSize</name>
        <type>function</type>
        <docblock line="222">
          <description><![CDATA[Calculate the width of a string:
in case of using alignment parameter in drawText]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="222" name="param" description="" type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="222" name="param" description="" type="\Zend_Pdf_Font" variable="$font">
            <type by_reference="false">\Zend_Pdf_Font</type>
          </tag>
          <tag line="222" name="param" description="" type="float" variable="$fontSize">
            <type by_reference="false">float</type>
          </tag>
          <tag line="222" name="return" description="" type="float">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
        <argument line="230">
          <name>$text</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="230">
          <name>$font</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="230">
          <name>$fontSize</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Barcode/Renderer/Exception.php" hash="5aacc1878a6b4838c6f1221daeed4c6c" package="Zend\Barcode">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to version 1.0 of the Zend Framework
license, that is bundled with this package in the file LICENSE.txt, and
is available through the world-wide-web at the following URL:
http://framework.zend.com/license/new-bsd. If you did not receive
a copy of the Zend Framework license and are unable to obtain it
through the world-wide-web, please send a note to license@zend.com
so we can mail you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Barcode"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Exception.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <include line="23" type="Require Once" package="Default">
      <name>Zend/Barcode/Exception.php</name>
      <docblock line="22">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="22" name="see" description="\Zend_Barcode_Exception" refers="\Zend_Barcode_Exception"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="33" package="Zend\Barcode">
      <name>Zend_Barcode_Renderer_Exception</name>
      <full_name>\Zend_Barcode_Renderer_Exception</full_name>
      <extends>\Zend_Barcode_Exception</extends>
      <docblock line="25">
        <description><![CDATA[Zend_Barcode_Renderer_Exception]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="25" name="category" description="Zend"/>
        <tag line="25" name="package" description="Zend_Barcode"/>
        <tag line="25" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="25" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
    </class>
  </file>
  <file path="Zend/Barcode/Renderer/RendererAbstract.php" hash="fce2d2344a8884189b3197b10e4c4c68" package="Zend\Barcode\Renderer">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Barcode"/>
      <tag line="2" name="subpackage" description="Renderer"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: RendererAbstract.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <class final="false" abstract="true" namespace="default" line="31" package="Zend\Barcode">
      <name>Zend_Barcode_Renderer_RendererAbstract</name>
      <full_name>\Zend_Barcode_Renderer_RendererAbstract</full_name>
      <extends/>
      <docblock line="23">
        <description><![CDATA[Class for rendering the barcode]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="category" description="Zend"/>
        <tag line="23" name="package" description="Zend_Barcode"/>
        <tag line="23" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="23" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="37" package="Default">
        <name>$_rendererNamespace</name>
        <default><![CDATA['Zend_Barcode_Renderer']]></default>
        <docblock line="33">
          <description><![CDATA[Namespace of the renderer for autoloading]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="33" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="43" package="Default">
        <name>$_type</name>
        <default><![CDATA[null]]></default>
        <docblock line="39">
          <description><![CDATA[Renderer type]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="39" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="49" package="Default">
        <name>$_automaticRenderError</name>
        <default><![CDATA[false]]></default>
        <docblock line="45">
          <description><![CDATA[Activate/Deactivate the automatic rendering of exception]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="45" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="55" package="Default">
        <name>$_topOffset</name>
        <default><![CDATA[0]]></default>
        <docblock line="51">
          <description><![CDATA[Offset of the barcode from the top of the rendering resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="51" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="61" package="Default">
        <name>$_leftOffset</name>
        <default><![CDATA[0]]></default>
        <docblock line="57">
          <description><![CDATA[Offset of the barcode from the left of the rendering resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="57" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="67" package="Default">
        <name>$_horizontalPosition</name>
        <default><![CDATA['left']]></default>
        <docblock line="63">
          <description><![CDATA[Horizontal position of the barcode in the rendering resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="63" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="73" package="Default">
        <name>$_verticalPosition</name>
        <default><![CDATA['top']]></default>
        <docblock line="69">
          <description><![CDATA[Vertical position of the barcode in the rendering resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="69" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="79" package="Default">
        <name>$_moduleSize</name>
        <default><![CDATA[1]]></default>
        <docblock line="75">
          <description><![CDATA[Module size rendering]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="75" name="var" description="" type="float">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="85" package="Default">
        <name>$_barcode</name>
        <default><![CDATA[]]></default>
        <docblock line="81">
          <description><![CDATA[Barcode object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="81" name="var" description="" type="\Zend_Barcode_Object_ObjectAbstract">
            <type by_reference="false">\Zend_Barcode_Object_ObjectAbstract</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="90" package="Default">
        <name>$_resource</name>
        <default><![CDATA[]]></default>
        <docblock line="87">
          <description><![CDATA[Drawing resource]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="97" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="92">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="92" name="param" description="" type="array|\Zend_Config" variable="$options">
            <type by_reference="false">array</type>
            <type by_reference="false">\Zend_Config</type>
          </tag>
          <tag line="92" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="97">
          <name>$options</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="116" package="Default">
        <name>setOptions</name>
        <type>function</type>
        <docblock line="111">
          <description><![CDATA[Set renderer state from options array]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="111" name="param" description="" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="111" name="return" description="" type="\Zend_Renderer_Object">
            <type by_reference="false">\Zend_Renderer_Object</type>
          </tag>
        </docblock>
        <argument line="116">
          <name>$options</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="132" package="Default">
        <name>setConfig</name>
        <type>function</type>
        <docblock line="127">
          <description><![CDATA[Set renderer state from config object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="127" name="param" description="" type="\Zend_Config" variable="$config">
            <type by_reference="false">\Zend_Config</type>
          </tag>
          <tag line="127" name="return" description="" type="\Zend_Renderer_Object">
            <type by_reference="false">\Zend_Renderer_Object</type>
          </tag>
        </docblock>
        <argument line="132">
          <name>$config</name>
          <default><![CDATA[]]></default>
          <type>Zend_Config</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="143" package="Default">
        <name>setRendererNamespace</name>
        <type>function</type>
        <docblock line="137">
          <description><![CDATA[Set renderer namespace for autoloading]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="137" name="param" description="" type="string" variable="$namespace">
            <type by_reference="false">string</type>
          </tag>
          <tag line="137" name="return" description="" type="\Zend_Renderer_Object">
            <type by_reference="false">\Zend_Renderer_Object</type>
          </tag>
        </docblock>
        <argument line="143">
          <name>$namespace</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="154" package="Default">
        <name>getRendererNamespace</name>
        <type>function</type>
        <docblock line="149">
          <description><![CDATA[Retrieve renderer namespace]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="149" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="163" package="Default">
        <name>getType</name>
        <type>function</type>
        <docblock line="159">
          <description><![CDATA[Retrieve renderer type]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="159" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="174" package="Default">
        <name>setTopOffset</name>
        <type>function</type>
        <docblock line="168">
          <description><![CDATA[Manually adjust top position]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="168" name="param" description="" type="integer" variable="$value">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="168" name="return" description="" type="\Zend_Barcode_Renderer">
            <type by_reference="false">\Zend_Barcode_Renderer</type>
          </tag>
          <tag line="168" name="throws" description="" type="\Zend_Barcode_Renderer_Exception">
            <type by_reference="false">\Zend_Barcode_Renderer_Exception</type>
          </tag>
        </docblock>
        <argument line="174">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="190" package="Default">
        <name>getTopOffset</name>
        <type>function</type>
        <docblock line="186">
          <description><![CDATA[Retrieve vertical adjustment]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="186" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="201" package="Default">
        <name>setLeftOffset</name>
        <type>function</type>
        <docblock line="195">
          <description><![CDATA[Manually adjust left position]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="195" name="param" description="" type="integer" variable="$value">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="195" name="return" description="" type="\Zend_Barcode_Renderer">
            <type by_reference="false">\Zend_Barcode_Renderer</type>
          </tag>
          <tag line="195" name="throws" description="" type="\Zend_Barcode_Renderer_Exception">
            <type by_reference="false">\Zend_Barcode_Renderer_Exception</type>
          </tag>
        </docblock>
        <argument line="201">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="217" package="Default">
        <name>getLeftOffset</name>
        <type>function</type>
        <docblock line="213">
          <description><![CDATA[Retrieve vertical adjustment]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="213" name="return" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="226" package="Default">
        <name>setAutomaticRenderError</name>
        <type>function</type>
        <docblock line="222">
          <description><![CDATA[Activate/Deactivate the automatic rendering of exception]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="222" name="param" description="" type="boolean" variable="$value">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="226">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="238" package="Default">
        <name>setHorizontalPosition</name>
        <type>function</type>
        <docblock line="232">
          <description><![CDATA[Horizontal position of the barcode in the rendering resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="232" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="232" name="return" description="" type="\Zend_Barcode_Renderer">
            <type by_reference="false">\Zend_Barcode_Renderer</type>
          </tag>
          <tag line="232" name="throws" description="" type="\Zend_Barcode_Renderer_Exception">
            <type by_reference="false">\Zend_Barcode_Renderer_Exception</type>
          </tag>
        </docblock>
        <argument line="238">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="254" package="Default">
        <name>getHorizontalPosition</name>
        <type>function</type>
        <docblock line="250">
          <description><![CDATA[Horizontal position of the barcode in the rendering resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="250" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="265" package="Default">
        <name>setVerticalPosition</name>
        <type>function</type>
        <docblock line="259">
          <description><![CDATA[Vertical position of the barcode in the rendering resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="259" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="259" name="return" description="" type="\Zend_Barcode_Renderer">
            <type by_reference="false">\Zend_Barcode_Renderer</type>
          </tag>
          <tag line="259" name="throws" description="" type="\Zend_Barcode_Renderer_Exception">
            <type by_reference="false">\Zend_Barcode_Renderer_Exception</type>
          </tag>
        </docblock>
        <argument line="265">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="281" package="Default">
        <name>getVerticalPosition</name>
        <type>function</type>
        <docblock line="277">
          <description><![CDATA[Vertical position of the barcode in the rendering resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="277" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="292" package="Default">
        <name>setModuleSize</name>
        <type>function</type>
        <docblock line="286">
          <description><![CDATA[Set the size of a module]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="286" name="param" description="" type="float" variable="$value">
            <type by_reference="false">float</type>
          </tag>
          <tag line="286" name="return" description="" type="\Zend_Barcode_Renderer">
            <type by_reference="false">\Zend_Barcode_Renderer</type>
          </tag>
          <tag line="286" name="throws" description="" type="\Zend_Barcode_Renderer_Exception">
            <type by_reference="false">\Zend_Barcode_Renderer_Exception</type>
          </tag>
        </docblock>
        <argument line="292">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="309" package="Default">
        <name>getModuleSize</name>
        <type>function</type>
        <docblock line="305">
          <description><![CDATA[Set the size of a module]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="305" name="return" description="" type="float">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="318" package="Default">
        <name>getAutomaticRenderError</name>
        <type>function</type>
        <docblock line="314">
          <description><![CDATA[Retrieve the automatic rendering of exception]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="314" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="328" package="Default">
        <name>setBarcode</name>
        <type>function</type>
        <docblock line="323">
          <description><![CDATA[Set the barcode object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="323" name="param" description="" type="\Zend_Barcode_Object" variable="$barcode">
            <type by_reference="false">\Zend_Barcode_Object</type>
          </tag>
          <tag line="323" name="return" description="" type="\Zend_Barcode_Renderer">
            <type by_reference="false">\Zend_Barcode_Renderer</type>
          </tag>
        </docblock>
        <argument line="328">
          <name>$barcode</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="344" package="Default">
        <name>getBarcode</name>
        <type>function</type>
        <docblock line="340">
          <description><![CDATA[Retrieve the barcode object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="340" name="return" description="" type="\Zend_Barcode_Object">
            <type by_reference="false">\Zend_Barcode_Object</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="353" package="Default">
        <name>checkParams</name>
        <type>function</type>
        <docblock line="349">
          <description><![CDATA[Checking of parameters after all settings]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="349" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="365" package="Default">
        <name>_checkBarcodeObject</name>
        <type>function</type>
        <docblock line="360">
          <description><![CDATA[Check if a barcode object is correctly provided]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="360" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
          <tag line="360" name="throws" description="" type="\Zend_Barcode_Renderer_Exception">
            <type by_reference="false">\Zend_Barcode_Renderer_Exception</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="386" package="Default">
        <name>_adjustPosition</name>
        <type>function</type>
        <docblock line="378">
          <description><![CDATA[Calculate the left and top offset of the barcode in the
rendering support]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="378" name="param" description="" type="float" variable="$supportHeight">
            <type by_reference="false">float</type>
          </tag>
          <tag line="378" name="param" description="" type="float" variable="$supportWidth">
            <type by_reference="false">float</type>
          </tag>
          <tag line="378" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="386">
          <name>$supportHeight</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="386">
          <name>$supportWidth</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="426" package="Default">
        <name>draw</name>
        <type>function</type>
        <docblock line="422">
          <description><![CDATA[Draw the barcode in the rendering resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="422" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="460" package="Default">
        <name>_drawInstructionList</name>
        <type>function</type>
        <docblock line="456">
          <description><![CDATA[Sub process to draw the barcode instructions
Needed by the automatic error rendering]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="default" line="499" package="Default">
        <name>_checkParams</name>
        <type>function</type>
        <docblock line="495">
          <description><![CDATA[Checking of parameters after all settings]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="495" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="public" namespace="default" line="505" package="Default">
        <name>render</name>
        <type>function</type>
        <docblock line="501">
          <description><![CDATA[Render the resource by sending headers and drawed resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="501" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="default" line="511" package="Default">
        <name>_initRenderer</name>
        <type>function</type>
        <docblock line="507">
          <description><![CDATA[Initialize the rendering resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="507" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="default" line="519" package="Default">
        <name>_drawPolygon</name>
        <type>function</type>
        <docblock line="513">
          <description><![CDATA[Draw a polygon in the rendering resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="513" name="param" description="" type="array" variable="$points">
            <type by_reference="false">array</type>
          </tag>
          <tag line="513" name="param" description="" type="integer" variable="$color">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="513" name="param" description="" type="boolean" variable="$filled">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="519">
          <name>$points</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="519">
          <name>$color</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="519">
          <name>$filled</name>
          <default><![CDATA[true]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="default" line="531" package="Default">
        <name>_drawText</name>
        <type>function</type>
        <docblock line="521">
          <description><![CDATA[Draw a polygon in the rendering resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="521" name="param" description="" type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="521" name="param" description="" type="float" variable="$size">
            <type by_reference="false">float</type>
          </tag>
          <tag line="521" name="param" description="" type="array" variable="$position">
            <type by_reference="false">array</type>
          </tag>
          <tag line="521" name="param" description="" type="string" variable="$font">
            <type by_reference="false">string</type>
          </tag>
          <tag line="521" name="param" description="" type="integer" variable="$color">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="521" name="param" description="" type="string" variable="$alignment">
            <type by_reference="false">string</type>
          </tag>
          <tag line="521" name="param" description="" type="float" variable="$orientation">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
        <argument line="532">
          <name>$text</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="533">
          <name>$size</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="534">
          <name>$position</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="535">
          <name>$font</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="536">
          <name>$color</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="537">
          <name>$alignment</name>
          <default><![CDATA['center']]></default>
          <type/>
        </argument>
        <argument line="538">
          <name>$orientation</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Barcode/Renderer/Image.php" hash="bbc01d32aadd492928932e7a29bbc201" package="Zend\Barcode\Renderer">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Barcode"/>
      <tag line="2" name="subpackage" description="Renderer"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Image.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <error line="82" code="50010">No DocBlock was found for method __construct()</error>
      <error line="148" code="50014">Name of argument $image does not match with the DocBlock's name $value in setResource()</error>
      <notice line="148" code="50013">Parameter $value could not be found in setResource()</notice>
    </parse_markers>
    <include line="24" type="Require Once" package="Default">
      <name>Zend/Barcode/Renderer/RendererAbstract.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Barcode_Renderer_RendererAbstract" refers="\Zend_Barcode_Renderer_RendererAbstract"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="34" package="Zend\Barcode">
      <name>Zend_Barcode_Renderer_Image</name>
      <full_name>\Zend_Barcode_Renderer_Image</full_name>
      <extends>\Zend_Barcode_Renderer_RendererAbstract</extends>
      <docblock line="26">
        <description><![CDATA[Class for rendering the barcode as image]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="26" name="category" description="Zend"/>
        <tag line="26" name="package" description="Zend_Barcode"/>
        <tag line="26" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="26" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="40" package="Default">
        <name>$_allowedImageType</name>
        <default><![CDATA[array(
        'png',
        'jpeg',
        'gif',
    )]]></default>
        <docblock line="36">
          <description><![CDATA[List of authorized output format]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="36" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="50" package="Default">
        <name>$_imageType</name>
        <default><![CDATA['png']]></default>
        <docblock line="46">
          <description><![CDATA[Image format]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="46" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="56" package="Default">
        <name>$_resource</name>
        <default><![CDATA[null]]></default>
        <docblock line="52">
          <description><![CDATA[Resource for the image]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="52" name="var" description="" type="resource">
            <type by_reference="false">resource</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="62" package="Default">
        <name>$_imageForeColor</name>
        <default><![CDATA[null]]></default>
        <docblock line="58">
          <description><![CDATA[Resource for the font and bars color of the image]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="58" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="68" package="Default">
        <name>$_imageBackgroundColor</name>
        <default><![CDATA[null]]></default>
        <docblock line="64">
          <description><![CDATA[Resource for the background color of the image]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="64" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="74" package="Default">
        <name>$_userHeight</name>
        <default><![CDATA[0]]></default>
        <docblock line="70">
          <description><![CDATA[Height of the rendered image wanted by user]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="70" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="80" package="Default">
        <name>$_userWidth</name>
        <default><![CDATA[0]]></default>
        <docblock line="76">
          <description><![CDATA[Width of the rendered image wanted by user]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="76" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="82">
        <name>__construct</name>
        <type>function</type>
        <argument line="82">
          <name>$options</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="98" package="Default">
        <name>setHeight</name>
        <type>function</type>
        <docblock line="92">
          <description><![CDATA[Set height of the result image]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="92" name="param" description="" type="null|integer" variable="$value">
            <type by_reference="false">null</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="92" name="return" description="" type="\Zend_Image_Barcode_Abstract">
            <type by_reference="false">\Zend_Image_Barcode_Abstract</type>
          </tag>
          <tag line="92" name="throws" description="" type="\Zend_Image_Barcode_Exception">
            <type by_reference="false">\Zend_Image_Barcode_Exception</type>
          </tag>
        </docblock>
        <argument line="98">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="115" package="Default">
        <name>getHeight</name>
        <type>function</type>
        <docblock line="110">
          <description><![CDATA[Get barcode height]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="110" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="126" package="Default">
        <name>setWidth</name>
        <type>function</type>
        <docblock line="120">
          <description><![CDATA[Set barcode width]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="120" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="120" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="126">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="143" package="Default">
        <name>getWidth</name>
        <type>function</type>
        <docblock line="138">
          <description><![CDATA[Get barcode width]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="138" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="155" package="Default">
        <name>setResource</name>
        <type>function</type>
        <docblock line="148">
          <description><![CDATA[Set an image resource to draw the barcode inside]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="148" name="param" description="" type="resource" variable="$value">
            <type by_reference="false">resource</type>
          </tag>
          <tag line="148" name="return" description="" type="\Zend_Barcode_Renderer">
            <type by_reference="false">\Zend_Barcode_Renderer</type>
          </tag>
          <tag line="148" name="throws" description="" type="\Zend_Barcode_Renderer_Exception">
            <type by_reference="false">\Zend_Barcode_Renderer_Exception</type>
          </tag>
        </docblock>
        <argument line="155">
          <name>$image</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="174" package="Default">
        <name>setImageType</name>
        <type>function</type>
        <docblock line="167">
          <description><![CDATA[Set the image type to produce (png, jpeg, gif)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="167" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="167" name="return" description="" type="\Zend_Barcode_RendererAbstract">
            <type by_reference="false">\Zend_Barcode_RendererAbstract</type>
          </tag>
          <tag line="167" name="throws" description="" type="\Zend_Barcode_Renderer_Exception">
            <type by_reference="false">\Zend_Barcode_Renderer_Exception</type>
          </tag>
        </docblock>
        <argument line="174">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="197" package="Default">
        <name>getImageType</name>
        <type>function</type>
        <docblock line="192">
          <description><![CDATA[Retrieve the image type to produce]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="192" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="207" package="Default">
        <name>_initRenderer</name>
        <type>function</type>
        <docblock line="202">
          <description><![CDATA[Initialize the image resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="202" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="281" package="Default">
        <name>_checkParams</name>
        <type>function</type>
        <docblock line="276">
          <description><![CDATA[Check barcode parameters]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="276" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="291" package="Default">
        <name>_checkDimensions</name>
        <type>function</type>
        <docblock line="286">
          <description><![CDATA[Check barcode dimensions]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="286" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="340" package="Default">
        <name>render</name>
        <type>function</type>
        <docblock line="335">
          <description><![CDATA[Draw and render the barcode with correct headers]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="335" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="356" package="Default">
        <name>_drawPolygon</name>
        <type>function</type>
        <docblock line="349">
          <description><![CDATA[Draw a polygon in the image resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="349" name="param" description="" type="array" variable="$points">
            <type by_reference="false">array</type>
          </tag>
          <tag line="349" name="param" description="" type="integer" variable="$color">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="349" name="param" description="" type="boolean" variable="$filled">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="356">
          <name>$points</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="356">
          <name>$color</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="356">
          <name>$filled</name>
          <default><![CDATA[true]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="394" package="Default">
        <name>_drawText</name>
        <type>function</type>
        <docblock line="383">
          <description><![CDATA[Draw a polygon in the image resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="383" name="param" description="" type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="383" name="param" description="" type="float" variable="$size">
            <type by_reference="false">float</type>
          </tag>
          <tag line="383" name="param" description="" type="array" variable="$position">
            <type by_reference="false">array</type>
          </tag>
          <tag line="383" name="param" description="" type="string" variable="$font">
            <type by_reference="false">string</type>
          </tag>
          <tag line="383" name="param" description="" type="integer" variable="$color">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="383" name="param" description="" type="string" variable="$alignment">
            <type by_reference="false">string</type>
          </tag>
          <tag line="383" name="param" description="" type="float" variable="$orientation">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
        <argument line="394">
          <name>$text</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="394">
          <name>$size</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="394">
          <name>$position</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="394">
          <name>$font</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="394">
          <name>$color</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="394">
          <name>$alignment</name>
          <default><![CDATA['center']]></default>
          <type/>
        </argument>
        <argument line="394">
          <name>$orientation</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Barcode/Renderer/Svg.php" hash="983698c6f221d78b646b24198845a8f6" package="Zend\Barcode\Renderer">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Barcode"/>
      <tag line="2" name="subpackage" description="Renderer"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Image.php 20366 2010-01-18 03:56:52Z ralph $"/>
    </docblock>
    <parse_markers>
      <error line="117" code="50014">Name of argument $svg does not match with the DocBlock's name $value in setResource()</error>
      <notice line="117" code="50013">Parameter $value could not be found in setResource()</notice>
      <error line="186" code="50010">No DocBlock was found for method _readRootElement()</error>
    </parse_markers>
    <include line="24" type="Require Once" package="Default">
      <name>Zend/Barcode/Renderer/RendererAbstract.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Barcode_Renderer_RendererAbstract" refers="\Zend_Barcode_Renderer_RendererAbstract"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="34" package="Zend\Barcode">
      <name>Zend_Barcode_Renderer_Svg</name>
      <full_name>\Zend_Barcode_Renderer_Svg</full_name>
      <extends>\Zend_Barcode_Renderer_RendererAbstract</extends>
      <docblock line="26">
        <description><![CDATA[Class for rendering the barcode as svg]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="26" name="category" description="Zend"/>
        <tag line="26" name="package" description="Zend_Barcode"/>
        <tag line="26" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="26" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="41" package="Default">
        <name>$_resource</name>
        <default><![CDATA[null]]></default>
        <docblock line="37">
          <description><![CDATA[Resource for the image]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="37" name="var" description="" type="\DOMDocument">
            <type by_reference="false">\DOMDocument</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="47" package="Default">
        <name>$_rootElement</name>
        <default><![CDATA[null]]></default>
        <docblock line="43">
          <description><![CDATA[Root element of the XML structure]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="43" name="var" description="" type="\DOMElement">
            <type by_reference="false">\DOMElement</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="53" package="Default">
        <name>$_userHeight</name>
        <default><![CDATA[0]]></default>
        <docblock line="49">
          <description><![CDATA[Height of the rendered image wanted by user]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="49" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="59" package="Default">
        <name>$_userWidth</name>
        <default><![CDATA[0]]></default>
        <docblock line="55">
          <description><![CDATA[Width of the rendered image wanted by user]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="55" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="67" package="Default">
        <name>setHeight</name>
        <type>function</type>
        <docblock line="61">
          <description><![CDATA[Set height of the result image]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="61" name="param" description="" type="null|integer" variable="$value">
            <type by_reference="false">null</type>
            <type by_reference="false">integer</type>
          </tag>
          <tag line="61" name="return" description="" type="\Zend_Image_Barcode_Abstract">
            <type by_reference="false">\Zend_Image_Barcode_Abstract</type>
          </tag>
          <tag line="61" name="throws" description="" type="\Zend_Image_Barcode_Exception">
            <type by_reference="false">\Zend_Image_Barcode_Exception</type>
          </tag>
        </docblock>
        <argument line="67">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="84" package="Default">
        <name>getHeight</name>
        <type>function</type>
        <docblock line="79">
          <description><![CDATA[Get barcode height]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="79" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="95" package="Default">
        <name>setWidth</name>
        <type>function</type>
        <docblock line="89">
          <description><![CDATA[Set barcode width]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="89" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="89" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="95">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="112" package="Default">
        <name>getWidth</name>
        <type>function</type>
        <docblock line="107">
          <description><![CDATA[Get barcode width]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="107" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="124" package="Default">
        <name>setResource</name>
        <type>function</type>
        <docblock line="117">
          <description><![CDATA[Set an image resource to draw the barcode inside]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="117" name="param" description="" type="\DOMDocument" variable="$value">
            <type by_reference="false">\DOMDocument</type>
          </tag>
          <tag line="117" name="return" description="" type="\Zend_Barcode_Renderer">
            <type by_reference="false">\Zend_Barcode_Renderer</type>
          </tag>
          <tag line="117" name="throws" description="" type="\Zend_Barcode_Renderer_Exception">
            <type by_reference="false">\Zend_Barcode_Renderer_Exception</type>
          </tag>
        </docblock>
        <argument line="124">
          <name>$svg</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="141" package="Default">
        <name>_initRenderer</name>
        <type>function</type>
        <docblock line="136">
          <description><![CDATA[Initialize the image resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="136" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="186">
        <name>_readRootElement</name>
        <type>function</type>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="200" package="Default">
        <name>_appendRootElement</name>
        <type>function</type>
        <docblock line="193">
          <description><![CDATA[Append a new DOMElement to the root element]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="193" name="param" description="" type="string" variable="$tagName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="193" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="193" name="param" description="" type="string" variable="$textContent">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="200">
          <name>$tagName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="200">
          <name>$attributes</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
        <argument line="200">
          <name>$textContent</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="214" package="Default">
        <name>_createElement</name>
        <type>function</type>
        <docblock line="206">
          <description><![CDATA[Create DOMElement]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="206" name="param" description="" type="string" variable="$tagName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="206" name="param" description="" type="array" variable="$attributes">
            <type by_reference="false">array</type>
          </tag>
          <tag line="206" name="param" description="" type="string" variable="$textContent">
            <type by_reference="false">string</type>
          </tag>
          <tag line="206" name="return" description="" type="\DOMElement">
            <type by_reference="false">\DOMElement</type>
          </tag>
        </docblock>
        <argument line="214">
          <name>$tagName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="214">
          <name>$attributes</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
        <argument line="214">
          <name>$textContent</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="231" package="Default">
        <name>_checkParams</name>
        <type>function</type>
        <docblock line="226">
          <description><![CDATA[Check barcode parameters]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="226" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="241" package="Default">
        <name>_checkDimensions</name>
        <type>function</type>
        <docblock line="236">
          <description><![CDATA[Check barcode dimensions]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="236" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="293" package="Default">
        <name>draw</name>
        <type>function</type>
        <docblock line="289">
          <description><![CDATA[Draw the barcode in the rendering resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="289" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="305" package="Default">
        <name>render</name>
        <type>function</type>
        <docblock line="300">
          <description><![CDATA[Draw and render the barcode with correct headers]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="300" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="319" package="Default">
        <name>_drawPolygon</name>
        <type>function</type>
        <docblock line="312">
          <description><![CDATA[Draw a polygon in the svg resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="312" name="param" description="" type="array" variable="$points">
            <type by_reference="false">array</type>
          </tag>
          <tag line="312" name="param" description="" type="integer" variable="$color">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="312" name="param" description="" type="boolean" variable="$filled">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="319">
          <name>$points</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="319">
          <name>$color</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="319">
          <name>$filled</name>
          <default><![CDATA[true]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="352" package="Default">
        <name>_drawText</name>
        <type>function</type>
        <docblock line="341">
          <description><![CDATA[Draw a polygon in the svg resource]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="341" name="param" description="" type="string" variable="$text">
            <type by_reference="false">string</type>
          </tag>
          <tag line="341" name="param" description="" type="float" variable="$size">
            <type by_reference="false">float</type>
          </tag>
          <tag line="341" name="param" description="" type="array" variable="$position">
            <type by_reference="false">array</type>
          </tag>
          <tag line="341" name="param" description="" type="string" variable="$font">
            <type by_reference="false">string</type>
          </tag>
          <tag line="341" name="param" description="" type="integer" variable="$color">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="341" name="param" description="" type="string" variable="$alignment">
            <type by_reference="false">string</type>
          </tag>
          <tag line="341" name="param" description="" type="float" variable="$orientation">
            <type by_reference="false">float</type>
          </tag>
        </docblock>
        <argument line="352">
          <name>$text</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="352">
          <name>$size</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="352">
          <name>$position</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="352">
          <name>$font</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="352">
          <name>$color</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="352">
          <name>$alignment</name>
          <default><![CDATA['center']]></default>
          <type/>
        </argument>
        <argument line="352">
          <name>$orientation</name>
          <default><![CDATA[0]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Auth.php" hash="6a30099950afdc13a5183aa826d0a878" package="Zend\Auth">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Auth"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Auth.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="23" code="50005">No short description for class Zend_Auth</critical>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="29" package="Zend\Auth">
      <name>Zend_Auth</name>
      <full_name>\Zend_Auth</full_name>
      <extends/>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="category" description="Zend"/>
        <tag line="23" name="package" description="Zend_Auth"/>
        <tag line="23" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="23" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="true" visibility="protected" line="36" package="Default">
        <name>$_instance</name>
        <default><![CDATA[null]]></default>
        <docblock line="31">
          <description><![CDATA[Singleton instance]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="31" name="var" description="" type="\Zend_Auth">
            <type by_reference="false">\Zend_Auth</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="43" package="Default">
        <name>$_storage</name>
        <default><![CDATA[null]]></default>
        <docblock line="38">
          <description><![CDATA[Persistent storage handler]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="38" name="var" description="" type="\Zend_Auth_Storage_Interface">
            <type by_reference="false">\Zend_Auth_Storage_Interface</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="50" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="45">
          <description><![CDATA[Singleton pattern implementation makes "new" unavailable]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="45" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="58" package="Default">
        <name>__clone</name>
        <type>function</type>
        <docblock line="53">
          <description><![CDATA[Singleton pattern implementation makes "clone" unavailable]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="53" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="68" package="Default">
        <name>getInstance</name>
        <type>function</type>
        <docblock line="61">
          <description><![CDATA[Returns an instance of Zend_Auth]]></description>
          <long-description><![CDATA[<p>Singleton pattern implementation</p>]]></long-description>
          <tag line="61" name="return" description="Provides a fluent interface" type="\Zend_Auth">
            <type by_reference="false">\Zend_Auth</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="84" package="Default">
        <name>getStorage</name>
        <type>function</type>
        <docblock line="77">
          <description><![CDATA[Returns the persistent storage handler]]></description>
          <long-description><![CDATA[<p>Session storage is used by default unless a different storage adapter has been set.</p>]]></long-description>
          <tag line="77" name="return" description="" type="\Zend_Auth_Storage_Interface">
            <type by_reference="false">\Zend_Auth_Storage_Interface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="103" package="Default">
        <name>setStorage</name>
        <type>function</type>
        <docblock line="97">
          <description><![CDATA[Sets the persistent storage handler]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="97" name="param" description="" type="\Zend_Auth_Storage_Interface" variable="$storage">
            <type by_reference="false">\Zend_Auth_Storage_Interface</type>
          </tag>
          <tag line="97" name="return" description="Provides a fluent interface" type="\Zend_Auth">
            <type by_reference="false">\Zend_Auth</type>
          </tag>
        </docblock>
        <argument line="103">
          <name>$storage</name>
          <default><![CDATA[]]></default>
          <type>Zend_Auth_Storage_Interface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="115" package="Default">
        <name>authenticate</name>
        <type>function</type>
        <docblock line="109">
          <description><![CDATA[Authenticates against the supplied adapter]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="109" name="param" description="" type="\Zend_Auth_Adapter_Interface" variable="$adapter">
            <type by_reference="false">\Zend_Auth_Adapter_Interface</type>
          </tag>
          <tag line="109" name="return" description="" type="\Zend_Auth_Result">
            <type by_reference="false">\Zend_Auth_Result</type>
          </tag>
        </docblock>
        <argument line="115">
          <name>$adapter</name>
          <default><![CDATA[]]></default>
          <type>Zend_Auth_Adapter_Interface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="139" package="Default">
        <name>hasIdentity</name>
        <type>function</type>
        <docblock line="134">
          <description><![CDATA[Returns true if and only if an identity is available from storage]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="134" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="149" package="Default">
        <name>getIdentity</name>
        <type>function</type>
        <docblock line="144">
          <description><![CDATA[Returns the identity from storage or null if no identity is available]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="144" name="return" description="" type="mixed|null">
            <type by_reference="false">mixed</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="165" package="Default">
        <name>clearIdentity</name>
        <type>function</type>
        <docblock line="160">
          <description><![CDATA[Clears the identity from persistent storage]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="160" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Config.php" hash="cef5f4bfd365f1afe470a7d49ae36e7c" package="Zend\Config">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Config"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Config.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="23" code="50005">No short description for class Zend_Config</critical>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="29" package="Zend\Config">
      <name>Zend_Config</name>
      <full_name>\Zend_Config</full_name>
      <extends/>
      <extends>\Countable</extends>
      <extends>\Iterator</extends>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="category" description="Zend"/>
        <tag line="23" name="package" description="Zend_Config"/>
        <tag line="23" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="23" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="36" package="Default">
        <name>$_allowModifications</name>
        <default><![CDATA[]]></default>
        <docblock line="31">
          <description><![CDATA[Whether in-memory modifications to configuration data are allowed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="31" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="43" package="Default">
        <name>$_index</name>
        <default><![CDATA[]]></default>
        <docblock line="38">
          <description><![CDATA[Iteration index]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="38" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="50" package="Default">
        <name>$_count</name>
        <default><![CDATA[]]></default>
        <docblock line="45">
          <description><![CDATA[Number of elements in configuration data]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="45" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="57" package="Default">
        <name>$_data</name>
        <default><![CDATA[]]></default>
        <docblock line="52">
          <description><![CDATA[Contains array of configuration data]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="52" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="65" package="Default">
        <name>$_skipNextIteration</name>
        <default><![CDATA[]]></default>
        <docblock line="59">
          <description><![CDATA[Used when unsetting values during iteration to ensure we do not skip
the next element]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="59" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="74" package="Default">
        <name>$_loadedSection</name>
        <default><![CDATA[]]></default>
        <docblock line="67">
          <description><![CDATA[Contains which config file sections were loaded. This is null
if all sections were loaded, a string name if one section is loaded
and an array of string names if multiple sections were loaded.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="67" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="82" package="Default">
        <name>$_extends</name>
        <default><![CDATA[array()]]></default>
        <docblock line="76">
          <description><![CDATA[This is used to track section inheritance. The keys are names of sections that
extend other sections, and the values are the extended sections.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="76" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="91" package="Default">
        <name>$_loadFileErrorStr</name>
        <default><![CDATA[null]]></default>
        <docblock line="84">
          <description><![CDATA[Load file error string.]]></description>
          <long-description><![CDATA[<p>Is null if there was no error while file loading</p>]]></long-description>
          <tag line="84" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="105" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="93">
          <description><![CDATA[Zend_Config provides a property based interface to
an array. The data are read-only unless $allowModifications
is set to true on construction.]]></description>
          <long-description><![CDATA[<p>Zend_Config also implements Countable and Iterator to
facilitate easy access to the data.</p>]]></long-description>
          <tag line="93" name="param" description="" type="array" variable="$array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="93" name="param" description="" type="boolean" variable="$allowModifications">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="93" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="105">
          <name>$array</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
        <argument line="105">
          <name>$allowModifications</name>
          <default><![CDATA[false]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="128" package="Default">
        <name>get</name>
        <type>function</type>
        <docblock line="121">
          <description><![CDATA[Retrieve a value and return $default if there is no element set.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="121" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="121" name="param" description="" type="mixed" variable="$default">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="121" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="128">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="128">
          <name>$default</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="143" package="Default">
        <name>__get</name>
        <type>function</type>
        <docblock line="137">
          <description><![CDATA[Magic function so that $obj->value will work.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="137" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="137" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="143">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="157" package="Default">
        <name>__set</name>
        <type>function</type>
        <docblock line="148">
          <description><![CDATA[Only allow setting of a property if $allowModifications
was set to true on construction. Otherwise, throw an exception.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="148" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="148" name="param" description="" type="mixed" variable="$value">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="148" name="throws" description="" type="\Zend_Config_Exception">
            <type by_reference="false">\Zend_Config_Exception</type>
          </tag>
          <tag line="148" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="157">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="157">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="179" package="Default">
        <name>__clone</name>
        <type>function</type>
        <docblock line="173">
          <description><![CDATA[Deep clone of this instance to ensure that nested Zend_Configs
are also cloned.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="173" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="197" package="Default">
        <name>toArray</name>
        <type>function</type>
        <docblock line="192">
          <description><![CDATA[Return an associative array of the stored data.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="192" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="217" package="Default">
        <name>__isset</name>
        <type>function</type>
        <docblock line="211">
          <description><![CDATA[Support isset() overloading on PHP 5.1]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="211" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="211" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="217">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="229" package="Default">
        <name>__unset</name>
        <type>function</type>
        <docblock line="222">
          <description><![CDATA[Support unset() overloading on PHP 5.1]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="222" name="param" description="" type="string" variable="$name">
            <type by_reference="false">string</type>
          </tag>
          <tag line="222" name="throws" description="" type="\Zend_Config_Exception">
            <type by_reference="false">\Zend_Config_Exception</type>
          </tag>
          <tag line="222" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="229">
          <name>$name</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="248" package="Default">
        <name>count</name>
        <type>function</type>
        <docblock line="243">
          <description><![CDATA[Defined by Countable interface]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="243" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="258" package="Default">
        <name>current</name>
        <type>function</type>
        <docblock line="253">
          <description><![CDATA[Defined by Iterator interface]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="253" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="269" package="Default">
        <name>key</name>
        <type>function</type>
        <docblock line="264">
          <description><![CDATA[Defined by Iterator interface]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="264" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="278" package="Default">
        <name>next</name>
        <type>function</type>
        <docblock line="274">
          <description><![CDATA[Defined by Iterator interface]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="292" package="Default">
        <name>rewind</name>
        <type>function</type>
        <docblock line="288">
          <description><![CDATA[Defined by Iterator interface]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="304" package="Default">
        <name>valid</name>
        <type>function</type>
        <docblock line="299">
          <description><![CDATA[Defined by Iterator interface]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="299" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="314" package="Default">
        <name>getSectionName</name>
        <type>function</type>
        <docblock line="309">
          <description><![CDATA[Returns the section name(s) loaded.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="309" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="327" package="Default">
        <name>areAllSectionsLoaded</name>
        <type>function</type>
        <docblock line="322">
          <description><![CDATA[Returns true if all sections were loaded]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="322" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="341" package="Default">
        <name>merge</name>
        <type>function</type>
        <docblock line="333">
          <description><![CDATA[Merge another Zend_Config with this one. The items
in $merge will override the same named items in
the current config.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="333" name="param" description="" type="\Zend_Config" variable="$merge">
            <type by_reference="false">\Zend_Config</type>
          </tag>
          <tag line="333" name="return" description="" type="\Zend_Config">
            <type by_reference="false">\Zend_Config</type>
          </tag>
        </docblock>
        <argument line="341">
          <name>$merge</name>
          <default><![CDATA[]]></default>
          <type>Zend_Config</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="368" package="Default">
        <name>setReadOnly</name>
        <type>function</type>
        <docblock line="362">
          <description><![CDATA[Prevent any more modifications being made to this instance. Useful
after merge() has been used to merge multiple Zend_Config objects
into one object which should then not be modified again.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="383" package="Default">
        <name>readOnly</name>
        <type>function</type>
        <docblock line="378">
          <description><![CDATA[Returns if this Zend_Config object is read only or not.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="378" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="393" package="Default">
        <name>getExtends</name>
        <type>function</type>
        <docblock line="388">
          <description><![CDATA[Get the current extends]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="388" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="405" package="Default">
        <name>setExtend</name>
        <type>function</type>
        <docblock line="398">
          <description><![CDATA[Set an extend for Zend_Config_Writer]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="398" name="param" description="" type="string" variable="$extendingSection">
            <type by_reference="false">string</type>
          </tag>
          <tag line="398" name="param" description="" type="string" variable="$extendedSection">
            <type by_reference="false">string</type>
          </tag>
          <tag line="398" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="405">
          <name>$extendingSection</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="405">
          <name>$extendedSection</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="423" package="Default">
        <name>_assertValidExtend</name>
        <type>function</type>
        <docblock line="414">
          <description><![CDATA[Throws an exception if $extendingSection may not extend $extendedSection,
and tracks the section extension if it is valid.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="414" name="param" description="" type="string" variable="$extendingSection">
            <type by_reference="false">string</type>
          </tag>
          <tag line="414" name="param" description="" type="string" variable="$extendedSection">
            <type by_reference="false">string</type>
          </tag>
          <tag line="414" name="throws" description="" type="\Zend_Config_Exception">
            <type by_reference="false">\Zend_Config_Exception</type>
          </tag>
          <tag line="414" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="423">
          <name>$extendingSection</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="423">
          <name>$extendedSection</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="447" package="Default">
        <name>_loadFileErrorHandler</name>
        <type>function</type>
        <docblock line="439">
          <description><![CDATA[Handle any errors from simplexml_load_file or parse_ini_file]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="439" name="param" description="" type="integer" variable="$errno">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="439" name="param" description="" type="string" variable="$errstr">
            <type by_reference="false">string</type>
          </tag>
          <tag line="439" name="param" description="" type="string" variable="$errfile">
            <type by_reference="false">string</type>
          </tag>
          <tag line="439" name="param" description="" type="integer" variable="$errline">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
        <argument line="447">
          <name>$errno</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="447">
          <name>$errstr</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="447">
          <name>$errfile</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="447">
          <name>$errline</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="464" package="Default">
        <name>_arrayMergeRecursive</name>
        <type>function</type>
        <docblock line="456">
          <description><![CDATA[Merge two arrays recursively, overwriting keys of the same name
in $firstArray with the value in $secondArray.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="456" name="param" description="First array" type="mixed" variable="$firstArray">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="456" name="param" description="Second array to merge into first array" type="mixed" variable="$secondArray">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="456" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="464">
          <name>$firstArray</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="464">
          <name>$secondArray</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Auth/Result.php" hash="ae99e12d4b9baeec6946c25f68762ef4" package="Zend\Auth">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Auth"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Result.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="23" code="50005">No short description for class Zend_Auth_Result</critical>
    </parse_markers>
    <class final="false" abstract="false" namespace="default" line="29" package="Zend\Auth">
      <name>Zend_Auth_Result</name>
      <full_name>\Zend_Auth_Result</full_name>
      <extends/>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="category" description="Zend"/>
        <tag line="23" name="package" description="Zend_Auth"/>
        <tag line="23" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="23" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <constant namespace="default" line="34" package="Default">
        <name>FAILURE</name>
        <value><![CDATA[0]]></value>
        <docblock line="31">
          <description><![CDATA[General Failure]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="default" line="39" package="Default">
        <name>FAILURE_IDENTITY_NOT_FOUND</name>
        <value><![CDATA[-1]]></value>
        <docblock line="36">
          <description><![CDATA[Failure due to identity not being found.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="default" line="44" package="Default">
        <name>FAILURE_IDENTITY_AMBIGUOUS</name>
        <value><![CDATA[-2]]></value>
        <docblock line="41">
          <description><![CDATA[Failure due to identity being ambiguous.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="default" line="49" package="Default">
        <name>FAILURE_CREDENTIAL_INVALID</name>
        <value><![CDATA[-3]]></value>
        <docblock line="46">
          <description><![CDATA[Failure due to invalid credential being supplied.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="default" line="54" package="Default">
        <name>FAILURE_UNCATEGORIZED</name>
        <value><![CDATA[-4]]></value>
        <docblock line="51">
          <description><![CDATA[Failure due to uncategorized reasons.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="default" line="59" package="Default">
        <name>SUCCESS</name>
        <value><![CDATA[1]]></value>
        <docblock line="56">
          <description><![CDATA[Authentication success.]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="protected" line="66" package="Default">
        <name>$_code</name>
        <default><![CDATA[]]></default>
        <docblock line="61">
          <description><![CDATA[Authentication result code]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="61" name="var" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="73" package="Default">
        <name>$_identity</name>
        <default><![CDATA[]]></default>
        <docblock line="68">
          <description><![CDATA[The identity used in the authentication attempt]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="68" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="82" package="Default">
        <name>$_messages</name>
        <default><![CDATA[]]></default>
        <docblock line="75">
          <description><![CDATA[An array of string reasons why the authentication attempt was unsuccessful]]></description>
          <long-description><![CDATA[<p>If authentication was successful, this should be an empty array.</p>]]></long-description>
          <tag line="75" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="92" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="84">
          <description><![CDATA[Sets the result code, identity, and failure messages]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="84" name="param" description="" type="int" variable="$code">
            <type by_reference="false">int</type>
          </tag>
          <tag line="84" name="param" description="" type="mixed" variable="$identity">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="84" name="param" description="" type="array" variable="$messages">
            <type by_reference="false">array</type>
          </tag>
          <tag line="84" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="92">
          <name>$code</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="92">
          <name>$identity</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="92">
          <name>$messages</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="112" package="Default">
        <name>isValid</name>
        <type>function</type>
        <docblock line="107">
          <description><![CDATA[Returns whether the result represents a successful authentication attempt]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="107" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="122" package="Default">
        <name>getCode</name>
        <type>function</type>
        <docblock line="117">
          <description><![CDATA[getCode() - Get the result code for this authentication attempt]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="117" name="return" description="" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="132" package="Default">
        <name>getIdentity</name>
        <type>function</type>
        <docblock line="127">
          <description><![CDATA[Returns the identity used in the authentication attempt]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="127" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="144" package="Default">
        <name>getMessages</name>
        <type>function</type>
        <docblock line="137">
          <description><![CDATA[Returns an array of string reasons why the authentication attempt was unsuccessful]]></description>
          <long-description><![CDATA[<p>If authentication was successful, this method returns an empty array.</p>]]></long-description>
          <tag line="137" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Auth/Exception.php" hash="2063635716b20a6cf485e031942e42fc" package="Zend\Auth">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Auth"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Exception.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="29" code="50005">No short description for class Zend_Auth_Exception</critical>
    </parse_markers>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Exception.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Exception" refers="\Zend_Exception"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="35" package="Zend\Auth">
      <name>Zend_Auth_Exception</name>
      <full_name>\Zend_Auth_Exception</full_name>
      <extends>\Zend_Exception</extends>
      <docblock line="29">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="29" name="category" description="Zend"/>
        <tag line="29" name="package" description="Zend_Auth"/>
        <tag line="29" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="29" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
    </class>
  </file>
  <file path="Zend/Auth/Storage/Exception.php" hash="5f5907546721030cdba5b903b4d92a40" package="Zend\Auth\Storage">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Auth"/>
      <tag line="2" name="subpackage" description="Storage"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Exception.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="30" code="50005">No short description for class Zend_Auth_Storage_Exception</critical>
    </parse_markers>
    <include line="27" type="Require Once" package="Default">
      <name>Zend/Auth/Exception.php</name>
      <docblock line="24">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="24" name="see" description="\Zend_Auth_Exception" refers="\Zend_Auth_Exception"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="37" package="Zend\Auth\Storage">
      <name>Zend_Auth_Storage_Exception</name>
      <full_name>\Zend_Auth_Storage_Exception</full_name>
      <extends>\Zend_Auth_Exception</extends>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="category" description="Zend"/>
        <tag line="30" name="package" description="Zend_Auth"/>
        <tag line="30" name="subpackage" description="Storage"/>
        <tag line="30" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="30" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
    </class>
  </file>
  <file path="Zend/Auth/Storage/NonPersistent.php" hash="c5dfc968cd1c15c207bac78f19da1ddd" package="Zend\Auth\Storage">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Auth"/>
      <tag line="2" name="subpackage" description="Storage"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: NonPersistent.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <include line="27" type="Require Once" package="Default">
      <name>Zend/Auth/Storage/Interface.php</name>
      <docblock line="24">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="24" name="see" description="\Zend_Auth_Storage_Interface" refers="\Zend_Auth_Storage_Interface"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="43" package="Zend\Auth\Storage">
      <name>Zend_Auth_Storage_NonPersistent</name>
      <full_name>\Zend_Auth_Storage_NonPersistent</full_name>
      <extends/>
      <extends>\Zend_Auth_Storage_Interface</extends>
      <docblock line="30">
        <description><![CDATA[Non-Persistent Auth Storage]]></description>
        <long-description><![CDATA[<p>Since HTTP Authentication happens again on each request, this will always be
re-populated. So there's no need to use sessions, this simple value class
will hold the data for rest of the current request.</p>]]></long-description>
        <tag line="30" name="category" description="Zend"/>
        <tag line="30" name="package" description="Zend_Auth"/>
        <tag line="30" name="subpackage" description="Storage"/>
        <tag line="30" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="30" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="48" package="Default">
        <name>$_data</name>
        <default><![CDATA[]]></default>
        <docblock line="45">
          <description><![CDATA[Holds the actual auth data]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="56" package="Default">
        <name>isEmpty</name>
        <type>function</type>
        <docblock line="50">
          <description><![CDATA[Returns true if and only if storage is empty]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="50" name="throws" description="If it is impossible to determine whether storage is empty" type="\Zend_Auth_Storage_Exception">
            <type by_reference="false">\Zend_Auth_Storage_Exception</type>
          </tag>
          <tag line="50" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="68" package="Default">
        <name>read</name>
        <type>function</type>
        <docblock line="61">
          <description><![CDATA[Returns the contents of storage
Behavior is undefined when storage is empty.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="61" name="throws" description="If reading contents from storage is impossible" type="\Zend_Auth_Storage_Exception">
            <type by_reference="false">\Zend_Auth_Storage_Exception</type>
          </tag>
          <tag line="61" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="80" package="Default">
        <name>write</name>
        <type>function</type>
        <docblock line="73">
          <description><![CDATA[Writes $contents to storage]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="73" name="param" description="" type="mixed" variable="$contents">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="73" name="throws" description="If writing $contents to storage is impossible" type="\Zend_Auth_Storage_Exception">
            <type by_reference="false">\Zend_Auth_Storage_Exception</type>
          </tag>
          <tag line="73" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="80">
          <name>$contents</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="91" package="Default">
        <name>clear</name>
        <type>function</type>
        <docblock line="85">
          <description><![CDATA[Clears contents from storage]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="85" name="throws" description="If clearing contents from storage is impossible" type="\Zend_Auth_Storage_Exception">
            <type by_reference="false">\Zend_Auth_Storage_Exception</type>
          </tag>
          <tag line="85" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Auth/Storage/Session.php" hash="4fed4cab4e7d0974194c540cf3f4029f" package="Zend\Auth\Storage">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Auth"/>
      <tag line="2" name="subpackage" description="Storage"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Session.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="36" code="50005">No short description for class Zend_Auth_Storage_Session</critical>
    </parse_markers>
    <include line="27" type="Require Once" package="Default">
      <name>Zend/Auth/Storage/Interface.php</name>
      <docblock line="24">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="24" name="see" description="\Zend_Auth_Storage_Interface" refers="\Zend_Auth_Storage_Interface"/>
      </docblock>
    </include>
    <include line="33" type="Require Once" package="Default">
      <name>Zend/Session.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\Zend_Session" refers="\Zend_Session"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="43" package="Zend\Auth\Storage">
      <name>Zend_Auth_Storage_Session</name>
      <full_name>\Zend_Auth_Storage_Session</full_name>
      <extends/>
      <extends>\Zend_Auth_Storage_Interface</extends>
      <docblock line="36">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="36" name="category" description="Zend"/>
        <tag line="36" name="package" description="Zend_Auth"/>
        <tag line="36" name="subpackage" description="Storage"/>
        <tag line="36" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="36" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <constant namespace="default" line="48" package="Default">
        <name>NAMESPACE_DEFAULT</name>
        <value><![CDATA['Zend_Auth']]></value>
        <docblock line="45">
          <description><![CDATA[Default session namespace]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <constant namespace="default" line="53" package="Default">
        <name>MEMBER_DEFAULT</name>
        <value><![CDATA['storage']]></value>
        <docblock line="50">
          <description><![CDATA[Default session object member name]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </constant>
      <property final="false" static="false" visibility="protected" line="60" package="Default">
        <name>$_session</name>
        <default><![CDATA[]]></default>
        <docblock line="55">
          <description><![CDATA[Object to proxy $_SESSION storage]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="55" name="var" description="" type="\Zend_Session_Namespace">
            <type by_reference="false">\Zend_Session_Namespace</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="67" package="Default">
        <name>$_namespace</name>
        <default><![CDATA[]]></default>
        <docblock line="62">
          <description><![CDATA[Session namespace]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="62" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="74" package="Default">
        <name>$_member</name>
        <default><![CDATA[]]></default>
        <docblock line="69">
          <description><![CDATA[Session object member]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="69" name="var" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="83" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="76">
          <description><![CDATA[Sets session storage options and initializes session namespace object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="76" name="param" description="" type="mixed" variable="$namespace">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="76" name="param" description="" type="mixed" variable="$member">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="76" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="83">
          <name>$namespace</name>
          <default><![CDATA[self::NAMESPACE_DEFAULT]]></default>
          <type/>
        </argument>
        <argument line="83">
          <name>$member</name>
          <default><![CDATA[self::MEMBER_DEFAULT]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="95" package="Default">
        <name>getNamespace</name>
        <type>function</type>
        <docblock line="90">
          <description><![CDATA[Returns the session namespace]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="90" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="105" package="Default">
        <name>getMember</name>
        <type>function</type>
        <docblock line="100">
          <description><![CDATA[Returns the name of the session object member]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="100" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="115" package="Default">
        <name>isEmpty</name>
        <type>function</type>
        <docblock line="110">
          <description><![CDATA[Defined by Zend_Auth_Storage_Interface]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="110" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="125" package="Default">
        <name>read</name>
        <type>function</type>
        <docblock line="120">
          <description><![CDATA[Defined by Zend_Auth_Storage_Interface]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="120" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="136" package="Default">
        <name>write</name>
        <type>function</type>
        <docblock line="130">
          <description><![CDATA[Defined by Zend_Auth_Storage_Interface]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="130" name="param" description="" type="mixed" variable="$contents">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="130" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="136">
          <name>$contents</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="146" package="Default">
        <name>clear</name>
        <type>function</type>
        <docblock line="141">
          <description><![CDATA[Defined by Zend_Auth_Storage_Interface]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="141" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Auth/Storage/Interface.php" hash="b0e1ab626efe6d2ee1eb9df73b83cf99" package="Zend\Auth\Storage">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Auth"/>
      <tag line="2" name="subpackage" description="Storage"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Interface.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <interface namespace="default" line="30" package="Zend\Auth\Storage">
      <name>Zend_Auth_Storage_Interface</name>
      <full_name>\Zend_Auth_Storage_Interface</full_name>
      <extends/>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="category" description="Zend"/>
        <tag line="23" name="package" description="Zend_Auth"/>
        <tag line="23" name="subpackage" description="Storage"/>
        <tag line="23" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="23" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="38" package="Default">
        <name>isEmpty</name>
        <type>function</type>
        <docblock line="32">
          <description><![CDATA[Returns true if and only if storage is empty]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="32" name="throws" description="If it is impossible to determine whether storage is empty" type="\Zend_Auth_Storage_Exception">
            <type by_reference="false">\Zend_Auth_Storage_Exception</type>
          </tag>
          <tag line="32" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="48" package="Default">
        <name>read</name>
        <type>function</type>
        <docblock line="40">
          <description><![CDATA[Returns the contents of storage]]></description>
          <long-description><![CDATA[<p>Behavior is undefined when storage is empty.</p>]]></long-description>
          <tag line="40" name="throws" description="If reading contents from storage is impossible" type="\Zend_Auth_Storage_Exception">
            <type by_reference="false">\Zend_Auth_Storage_Exception</type>
          </tag>
          <tag line="40" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="57" package="Default">
        <name>write</name>
        <type>function</type>
        <docblock line="50">
          <description><![CDATA[Writes $contents to storage]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="50" name="param" description="" type="mixed" variable="$contents">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="50" name="throws" description="If writing $contents to storage is impossible" type="\Zend_Auth_Storage_Exception">
            <type by_reference="false">\Zend_Auth_Storage_Exception</type>
          </tag>
          <tag line="50" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="57">
          <name>$contents</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="65" package="Default">
        <name>clear</name>
        <type>function</type>
        <docblock line="59">
          <description><![CDATA[Clears contents from storage]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="59" name="throws" description="If clearing contents from storage is impossible" type="\Zend_Auth_Storage_Exception">
            <type by_reference="false">\Zend_Auth_Storage_Exception</type>
          </tag>
          <tag line="59" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
      </method>
    </interface>
  </file>
  <file path="Zend/Auth/Adapter/Exception.php" hash="f703f1d2acb1515cb427651e83bd1fd0" package="Zend\Auth\Adapter">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Auth"/>
      <tag line="2" name="subpackage" description="Adapter"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Exception.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="30" code="50005">No short description for class Zend_Auth_Adapter_Exception</critical>
    </parse_markers>
    <include line="27" type="Require Once" package="Default">
      <name>Zend/Auth/Exception.php</name>
      <docblock line="24">
        <description><![CDATA[Zend_Auth_Exception]]></description>
        <long-description><![CDATA[]]></long-description>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="37" package="Zend\Auth\Adapter">
      <name>Zend_Auth_Adapter_Exception</name>
      <full_name>\Zend_Auth_Adapter_Exception</full_name>
      <extends>\Zend_Auth_Exception</extends>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="category" description="Zend"/>
        <tag line="30" name="package" description="Zend_Auth"/>
        <tag line="30" name="subpackage" description="Adapter"/>
        <tag line="30" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="30" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
    </class>
  </file>
  <file path="Zend/Auth/Adapter/OpenId.php" hash="f2734b44c56fb9891e1051137763954d" package="Zend\Auth\Zend\Auth\Adapter">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Auth"/>
      <tag line="2" name="subpackage" description="Zend_Auth_Adapter"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: OpenId.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <error line="192" code="50014">Name of argument $response does not match with the DocBlock's name $root in setResponse()</error>
      <notice line="192" code="50013">Parameter $root could not be found in setResponse()</notice>
    </parse_markers>
    <include line="27" type="Require Once" package="Default">
      <name>Zend/Auth/Adapter/Interface.php</name>
      <docblock line="24">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="24" name="see" description="\Zend_Auth_Adapter_Interface" refers="\Zend_Auth_Adapter_Interface"/>
      </docblock>
    </include>
    <include line="33" type="Require Once" package="Default">
      <name>Zend/OpenId/Consumer.php</name>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="see" description="\Zend_OpenId_Consumer" refers="\Zend_OpenId_Consumer"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="46" package="Zend\Auth\Zend\Auth\Adapter">
      <name>Zend_Auth_Adapter_OpenId</name>
      <full_name>\Zend_Auth_Adapter_OpenId</full_name>
      <extends/>
      <extends>\Zend_Auth_Adapter_Interface</extends>
      <docblock line="36">
        <description><![CDATA[A Zend_Auth Authentication Adapter allowing the use of OpenID protocol as an
authentication mechanism]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="36" name="category" description="Zend"/>
        <tag line="36" name="package" description="Zend_Auth"/>
        <tag line="36" name="subpackage" description="Zend_Auth_Adapter"/>
        <tag line="36" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="36" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="53" package="Default">
        <name>$_id</name>
        <default><![CDATA[null]]></default>
        <docblock line="48">
          <description><![CDATA[The identity value being authenticated]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="48" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="60" package="Default">
        <name>$_storage</name>
        <default><![CDATA[null]]></default>
        <docblock line="55">
          <description><![CDATA[Reference to an implementation of a storage object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="55" name="var" description="" type="\Zend_OpenId_Consumer_Storage">
            <type by_reference="false">\Zend_OpenId_Consumer_Storage</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="67" package="Default">
        <name>$_returnTo</name>
        <default><![CDATA[null]]></default>
        <docblock line="62">
          <description><![CDATA[The URL to redirect response from server to]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="62" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="74" package="Default">
        <name>$_root</name>
        <default><![CDATA[null]]></default>
        <docblock line="69">
          <description><![CDATA[The HTTP URL to identify consumer on server]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="69" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="81" package="Default">
        <name>$_extensions</name>
        <default><![CDATA[null]]></default>
        <docblock line="76">
          <description><![CDATA[Extension object or array of extensions objects]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="76" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="88" package="Default">
        <name>$_response</name>
        <default><![CDATA[null]]></default>
        <docblock line="83">
          <description><![CDATA[The response object to perform HTTP or HTML form redirection]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="83" name="var" description="" type="\Zend_Controller_Response_Abstract">
            <type by_reference="false">\Zend_Controller_Response_Abstract</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="96" package="Default">
        <name>$_check_immediate</name>
        <default><![CDATA[false]]></default>
        <docblock line="90">
          <description><![CDATA[Enables or disables interaction with user during authentication on
OpenID provider.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="90" name="var" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="private" line="103" package="Default">
        <name>$_httpClient</name>
        <default><![CDATA[null]]></default>
        <docblock line="98">
          <description><![CDATA[HTTP client to make HTTP requests]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="98" name="var" description="" type="\Zend_Http_Client">
            <type by_reference="false">\Zend_Http_Client</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="118" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="105">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="105" name="param" description="the identity value" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="105" name="param" description="an optional implementation of a storage object" type="\Zend_OpenId_Consumer_Storage" variable="$storage">
            <type by_reference="false">\Zend_OpenId_Consumer_Storage</type>
          </tag>
          <tag line="105" name="param" description="HTTP URL to redirect response from server to" type="string" variable="$returnTo">
            <type by_reference="false">string</type>
          </tag>
          <tag line="105" name="param" description="HTTP URL to identify consumer on server" type="string" variable="$root">
            <type by_reference="false">string</type>
          </tag>
          <tag line="105" name="param" description="extension object or array of extensions objects" type="mixed" variable="$extensions">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="105" name="param" description="an optional response object to perform HTTP or HTML form redirection" type="\Zend_Controller_Response_Abstract" variable="$response">
            <type by_reference="false">\Zend_Controller_Response_Abstract</type>
          </tag>
          <tag line="105" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="118">
          <name>$id</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="119">
          <name>$storage</name>
          <default><![CDATA[null]]></default>
          <type>Zend_OpenId_Consumer_Storage</type>
        </argument>
        <argument line="120">
          <name>$returnTo</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="121">
          <name>$root</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="122">
          <name>$extensions</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="123">
          <name>$response</name>
          <default><![CDATA[null]]></default>
          <type>Zend_Controller_Response_Abstract</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="138" package="Default">
        <name>setIdentity</name>
        <type>function</type>
        <docblock line="132">
          <description><![CDATA[Sets the value to be used as the identity]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="132" name="param" description="the identity value" type="string" variable="$id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="132" name="return" description="Provides a fluent interface" type="\Zend_Auth_Adapter_OpenId">
            <type by_reference="false">\Zend_Auth_Adapter_OpenId</type>
          </tag>
        </docblock>
        <argument line="138">
          <name>$id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="150" package="Default">
        <name>setStorage</name>
        <type>function</type>
        <docblock line="144">
          <description><![CDATA[Sets the storage implementation which will be use by OpenId]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="144" name="param" description="" type="\Zend_OpenId_Consumer_Storage" variable="$storage">
            <type by_reference="false">\Zend_OpenId_Consumer_Storage</type>
          </tag>
          <tag line="144" name="return" description="Provides a fluent interface" type="\Zend_Auth_Adapter_OpenId">
            <type by_reference="false">\Zend_Auth_Adapter_OpenId</type>
          </tag>
        </docblock>
        <argument line="150">
          <name>$storage</name>
          <default><![CDATA[]]></default>
          <type>Zend_OpenId_Consumer_Storage</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="162" package="Default">
        <name>setReturnTo</name>
        <type>function</type>
        <docblock line="156">
          <description><![CDATA[Sets the HTTP URL to redirect response from server to]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="156" name="param" description="" type="string" variable="$returnTo">
            <type by_reference="false">string</type>
          </tag>
          <tag line="156" name="return" description="Provides a fluent interface" type="\Zend_Auth_Adapter_OpenId">
            <type by_reference="false">\Zend_Auth_Adapter_OpenId</type>
          </tag>
        </docblock>
        <argument line="162">
          <name>$returnTo</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="174" package="Default">
        <name>setRoot</name>
        <type>function</type>
        <docblock line="168">
          <description><![CDATA[Sets HTTP URL to identify consumer on server]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="168" name="param" description="" type="string" variable="$root">
            <type by_reference="false">string</type>
          </tag>
          <tag line="168" name="return" description="Provides a fluent interface" type="\Zend_Auth_Adapter_OpenId">
            <type by_reference="false">\Zend_Auth_Adapter_OpenId</type>
          </tag>
        </docblock>
        <argument line="174">
          <name>$root</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="186" package="Default">
        <name>setExtensions</name>
        <type>function</type>
        <docblock line="180">
          <description><![CDATA[Sets OpenID extension(s)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="180" name="param" description="" type="mixed" variable="$extensions">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="180" name="return" description="Provides a fluent interface" type="\Zend_Auth_Adapter_OpenId">
            <type by_reference="false">\Zend_Auth_Adapter_OpenId</type>
          </tag>
        </docblock>
        <argument line="186">
          <name>$extensions</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="198" package="Default">
        <name>setResponse</name>
        <type>function</type>
        <docblock line="192">
          <description><![CDATA[Sets an optional response object to perform HTTP or HTML form redirection]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="192" name="param" description="" type="string" variable="$root">
            <type by_reference="false">string</type>
          </tag>
          <tag line="192" name="return" description="Provides a fluent interface" type="\Zend_Auth_Adapter_OpenId">
            <type by_reference="false">\Zend_Auth_Adapter_OpenId</type>
          </tag>
        </docblock>
        <argument line="198">
          <name>$response</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="211" package="Default">
        <name>setCheckImmediate</name>
        <type>function</type>
        <docblock line="204">
          <description><![CDATA[Enables or disables interaction with user during authentication on
OpenID provider.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="204" name="param" description="" type="bool" variable="$check_immediate">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="204" name="return" description="Provides a fluent interface" type="\Zend_Auth_Adapter_OpenId">
            <type by_reference="false">\Zend_Auth_Adapter_OpenId</type>
          </tag>
        </docblock>
        <argument line="211">
          <name>$check_immediate</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="222" package="Default">
        <name>setHttpClient</name>
        <type>function</type>
        <docblock line="217">
          <description><![CDATA[Sets HTTP client object to make HTTP requests]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="217" name="param" description="HTTP client object to be used" type="\Zend_Http_Client" variable="$client">
            <type by_reference="false">\Zend_Http_Client</type>
          </tag>
        </docblock>
        <argument line="222">
          <name>$client</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="233" package="Default">
        <name>authenticate</name>
        <type>function</type>
        <docblock line="226">
          <description><![CDATA[Authenticates the given OpenId identity.]]></description>
          <long-description><![CDATA[<p>Defined by Zend_Auth_Adapter_Interface.</p>]]></long-description>
          <tag line="226" name="throws" description="If answering the authentication query is impossible" type="\Zend_Auth_Adapter_Exception">
            <type by_reference="false">\Zend_Auth_Adapter_Exception</type>
          </tag>
          <tag line="226" name="return" description="" type="\Zend_Auth_Result">
            <type by_reference="false">\Zend_Auth_Result</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Auth/Adapter/Digest.php" hash="ed24998a8768f9730711f94a62737b2e" package="Zend\Auth\Adapter">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Auth"/>
      <tag line="2" name="subpackage" description="Adapter"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Digest.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="30" code="50005">No short description for class Zend_Auth_Adapter_Digest</critical>
    </parse_markers>
    <include line="27" type="Require Once" package="Default">
      <name>Zend/Auth/Adapter/Interface.php</name>
      <docblock line="24">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="24" name="see" description="\Zend_Auth_Adapter_Interface" refers="\Zend_Auth_Adapter_Interface"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="37" package="Zend\Auth\Adapter">
      <name>Zend_Auth_Adapter_Digest</name>
      <full_name>\Zend_Auth_Adapter_Digest</full_name>
      <extends/>
      <extends>\Zend_Auth_Adapter_Interface</extends>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="category" description="Zend"/>
        <tag line="30" name="package" description="Zend_Auth"/>
        <tag line="30" name="subpackage" description="Adapter"/>
        <tag line="30" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="30" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="44" package="Default">
        <name>$_filename</name>
        <default><![CDATA[]]></default>
        <docblock line="39">
          <description><![CDATA[Filename against which authentication queries are performed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="39" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="51" package="Default">
        <name>$_realm</name>
        <default><![CDATA[]]></default>
        <docblock line="46">
          <description><![CDATA[Digest authentication realm]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="46" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="58" package="Default">
        <name>$_username</name>
        <default><![CDATA[]]></default>
        <docblock line="53">
          <description><![CDATA[Digest authentication user]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="53" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="65" package="Default">
        <name>$_password</name>
        <default><![CDATA[]]></default>
        <docblock line="60">
          <description><![CDATA[Password for the user of the realm]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="60" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="76" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="67">
          <description><![CDATA[Sets adapter options]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="67" name="param" description="" type="mixed" variable="$filename">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="67" name="param" description="" type="mixed" variable="$realm">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="67" name="param" description="" type="mixed" variable="$username">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="67" name="param" description="" type="mixed" variable="$password">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="67" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="76">
          <name>$filename</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="76">
          <name>$realm</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="76">
          <name>$username</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="76">
          <name>$password</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="92" package="Default">
        <name>getFilename</name>
        <type>function</type>
        <docblock line="87">
          <description><![CDATA[Returns the filename option value or null if it has not yet been set]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="87" name="return" description="" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="103" package="Default">
        <name>setFilename</name>
        <type>function</type>
        <docblock line="97">
          <description><![CDATA[Sets the filename option value]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="97" name="param" description="" type="mixed" variable="$filename">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="97" name="return" description="Provides a fluent interface" type="\Zend_Auth_Adapter_Digest">
            <type by_reference="false">\Zend_Auth_Adapter_Digest</type>
          </tag>
        </docblock>
        <argument line="103">
          <name>$filename</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="114" package="Default">
        <name>getRealm</name>
        <type>function</type>
        <docblock line="109">
          <description><![CDATA[Returns the realm option value or null if it has not yet been set]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="109" name="return" description="" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="125" package="Default">
        <name>setRealm</name>
        <type>function</type>
        <docblock line="119">
          <description><![CDATA[Sets the realm option value]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="119" name="param" description="" type="mixed" variable="$realm">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="119" name="return" description="Provides a fluent interface" type="\Zend_Auth_Adapter_Digest">
            <type by_reference="false">\Zend_Auth_Adapter_Digest</type>
          </tag>
        </docblock>
        <argument line="125">
          <name>$realm</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="136" package="Default">
        <name>getUsername</name>
        <type>function</type>
        <docblock line="131">
          <description><![CDATA[Returns the username option value or null if it has not yet been set]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="131" name="return" description="" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="147" package="Default">
        <name>setUsername</name>
        <type>function</type>
        <docblock line="141">
          <description><![CDATA[Sets the username option value]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="141" name="param" description="" type="mixed" variable="$username">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="141" name="return" description="Provides a fluent interface" type="\Zend_Auth_Adapter_Digest">
            <type by_reference="false">\Zend_Auth_Adapter_Digest</type>
          </tag>
        </docblock>
        <argument line="147">
          <name>$username</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="158" package="Default">
        <name>getPassword</name>
        <type>function</type>
        <docblock line="153">
          <description><![CDATA[Returns the password option value or null if it has not yet been set]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="153" name="return" description="" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="169" package="Default">
        <name>setPassword</name>
        <type>function</type>
        <docblock line="163">
          <description><![CDATA[Sets the password option value]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="163" name="param" description="" type="mixed" variable="$password">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="163" name="return" description="Provides a fluent interface" type="\Zend_Auth_Adapter_Digest">
            <type by_reference="false">\Zend_Auth_Adapter_Digest</type>
          </tag>
        </docblock>
        <argument line="169">
          <name>$password</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="181" package="Default">
        <name>authenticate</name>
        <type>function</type>
        <docblock line="175">
          <description><![CDATA[Defined by Zend_Auth_Adapter_Interface]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="175" name="throws" description="" type="\Zend_Auth_Adapter_Exception">
            <type by_reference="false">\Zend_Auth_Adapter_Exception</type>
          </tag>
          <tag line="175" name="return" description="" type="\Zend_Auth_Result">
            <type by_reference="false">\Zend_Auth_Result</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="241" package="Default">
        <name>_secureStringCompare</name>
        <type>function</type>
        <docblock line="231">
          <description><![CDATA[Securely compare two strings for equality while avoided C level memcmp()
optimisations capable of leaking timing information useful to an attacker
attempting to iteratively guess the unknown string (e.g. password) being
compared against.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="231" name="param" description="" type="string" variable="$a">
            <type by_reference="false">string</type>
          </tag>
          <tag line="231" name="param" description="" type="string" variable="$b">
            <type by_reference="false">string</type>
          </tag>
          <tag line="231" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="241">
          <name>$a</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="241">
          <name>$b</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Auth/Adapter/DbTable.php" hash="6f8c66b497364f387e95d01f71db5236" package="Zend\Auth\Adapter">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Auth"/>
      <tag line="2" name="subpackage" description="Adapter"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: DbTable.php 24185 2011-07-05 13:10:05Z adamlundrigan $"/>
    </docblock>
    <parse_markers>
      <critical line="57" code="50019">No short description for property $_dbSelect</critical>
      <error line="159" code="50016">The type hint of the argument is incorrect for the type definition of the @param tag with argument $zendDb in _setDbAdapter()</error>
      <critical line="40" code="50005">No short description for class Zend_Auth_Adapter_DbTable</critical>
    </parse_markers>
    <include line="27" type="Require Once" package="Default">
      <name>Zend/Auth/Adapter/Interface.php</name>
      <docblock line="24">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="24" name="see" description="\Zend_Auth_Adapter_Interface" refers="\Zend_Auth_Adapter_Interface"/>
      </docblock>
    </include>
    <include line="32" type="Require Once" package="Default">
      <name>Zend/Db/Adapter/Abstract.php</name>
      <docblock line="29">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="29" name="see" description="\Zend_Db_Adapter_Abstract" refers="\Zend_Db_Adapter_Abstract"/>
      </docblock>
    </include>
    <include line="37" type="Require Once" package="Default">
      <name>Zend/Auth/Result.php</name>
      <docblock line="34">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="34" name="see" description="\Zend_Auth_Result" refers="\Zend_Auth_Result"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="47" package="Zend\Auth\Adapter">
      <name>Zend_Auth_Adapter_DbTable</name>
      <full_name>\Zend_Auth_Adapter_DbTable</full_name>
      <extends/>
      <extends>\Zend_Auth_Adapter_Interface</extends>
      <docblock line="40">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="40" name="category" description="Zend"/>
        <tag line="40" name="package" description="Zend_Auth"/>
        <tag line="40" name="subpackage" description="Adapter"/>
        <tag line="40" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="40" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="55" package="Default">
        <name>$_zendDb</name>
        <default><![CDATA[null]]></default>
        <docblock line="50">
          <description><![CDATA[Database Connection]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="50" name="var" description="" type="\Zend_Db_Adapter_Abstract">
            <type by_reference="false">\Zend_Db_Adapter_Abstract</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="60" package="Default">
        <name>$_dbSelect</name>
        <default><![CDATA[null]]></default>
        <docblock line="57">
          <description><![CDATA[]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="57" name="var" description="" type="\Zend_Db_Select">
            <type by_reference="false">\Zend_Db_Select</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="67" package="Default">
        <name>$_tableName</name>
        <default><![CDATA[null]]></default>
        <docblock line="62">
          <description><![CDATA[$_tableName - the table name to check]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="62" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="74" package="Default">
        <name>$_identityColumn</name>
        <default><![CDATA[null]]></default>
        <docblock line="69">
          <description><![CDATA[$_identityColumn - the column to use as the identity]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="69" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="81" package="Default">
        <name>$_credentialColumn</name>
        <default><![CDATA[null]]></default>
        <docblock line="76">
          <description><![CDATA[$_credentialColumns - columns to be used as the credentials]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="76" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="88" package="Default">
        <name>$_identity</name>
        <default><![CDATA[null]]></default>
        <docblock line="83">
          <description><![CDATA[$_identity - Identity value]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="83" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="95" package="Default">
        <name>$_credential</name>
        <default><![CDATA[null]]></default>
        <docblock line="90">
          <description><![CDATA[$_credential - Credential values]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="90" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="102" package="Default">
        <name>$_credentialTreatment</name>
        <default><![CDATA[null]]></default>
        <docblock line="97">
          <description><![CDATA[$_credentialTreatment - Treatment applied to the credential, such as MD5() or PASSWORD()]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="97" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="109" package="Default">
        <name>$_authenticateResultInfo</name>
        <default><![CDATA[null]]></default>
        <docblock line="104">
          <description><![CDATA[$_authenticateResultInfo]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="104" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="116" package="Default">
        <name>$_resultRow</name>
        <default><![CDATA[null]]></default>
        <docblock line="111">
          <description><![CDATA[$_resultRow - Results of database authentication query]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="111" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="125" package="Default">
        <name>$_ambiguityIdentity</name>
        <default><![CDATA[false]]></default>
        <docblock line="118">
          <description><![CDATA[$_ambiguityIdentity - Flag to indicate same Identity can be used with
different credentials. Default is FALSE and need to be set to true to
allow ambiguity usage.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="118" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="137" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="127">
          <description><![CDATA[__construct() - Sets configuration options]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="127" name="param" description="If null, default database adapter assumed" type="\Zend_Db_Adapter_Abstract" variable="$zendDb">
            <type by_reference="false">\Zend_Db_Adapter_Abstract</type>
          </tag>
          <tag line="127" name="param" description="" type="string" variable="$tableName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="127" name="param" description="" type="string" variable="$identityColumn">
            <type by_reference="false">string</type>
          </tag>
          <tag line="127" name="param" description="" type="string" variable="$credentialColumn">
            <type by_reference="false">string</type>
          </tag>
          <tag line="127" name="param" description="" type="string" variable="$credentialTreatment">
            <type by_reference="false">string</type>
          </tag>
          <tag line="127" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="137">
          <name>$zendDb</name>
          <default><![CDATA[null]]></default>
          <type>Zend_Db_Adapter_Abstract</type>
        </argument>
        <argument line="137">
          <name>$tableName</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="137">
          <name>$identityColumn</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="138">
          <name>$credentialColumn</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="138">
          <name>$credentialTreatment</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="166" package="Default">
        <name>_setDbAdapter</name>
        <type>function</type>
        <docblock line="159">
          <description><![CDATA[_setDbAdapter() - set the database adapter to be used for quering]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="159" name="param" description="Zend_Db_Adapter_Abstract" type="" variable="$zendDb"/>
          <tag line="159" name="throws" description="" type="\Zend_Auth_Adapter_Exception">
            <type by_reference="false">\Zend_Auth_Adapter_Exception</type>
          </tag>
          <tag line="159" name="return" description="" type="\Zend_Auth_Adapter_DbTable">
            <type by_reference="false">\Zend_Auth_Adapter_DbTable</type>
          </tag>
        </docblock>
        <argument line="166">
          <name>$zendDb</name>
          <default><![CDATA[null]]></default>
          <type>Zend_Db_Adapter_Abstract</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="191" package="Default">
        <name>setTableName</name>
        <type>function</type>
        <docblock line="185">
          <description><![CDATA[setTableName() - set the table name to be used in the select query]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="185" name="param" description="" type="string" variable="$tableName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="185" name="return" description="Provides a fluent interface" type="\Zend_Auth_Adapter_DbTable">
            <type by_reference="false">\Zend_Auth_Adapter_DbTable</type>
          </tag>
        </docblock>
        <argument line="191">
          <name>$tableName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="203" package="Default">
        <name>setIdentityColumn</name>
        <type>function</type>
        <docblock line="197">
          <description><![CDATA[setIdentityColumn() - set the column name to be used as the identity column]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="197" name="param" description="" type="string" variable="$identityColumn">
            <type by_reference="false">string</type>
          </tag>
          <tag line="197" name="return" description="Provides a fluent interface" type="\Zend_Auth_Adapter_DbTable">
            <type by_reference="false">\Zend_Auth_Adapter_DbTable</type>
          </tag>
        </docblock>
        <argument line="203">
          <name>$identityColumn</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="215" package="Default">
        <name>setCredentialColumn</name>
        <type>function</type>
        <docblock line="209">
          <description><![CDATA[setCredentialColumn() - set the column name to be used as the credential column]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="209" name="param" description="" type="string" variable="$credentialColumn">
            <type by_reference="false">string</type>
          </tag>
          <tag line="209" name="return" description="Provides a fluent interface" type="\Zend_Auth_Adapter_DbTable">
            <type by_reference="false">\Zend_Auth_Adapter_DbTable</type>
          </tag>
        </docblock>
        <argument line="215">
          <name>$credentialColumn</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="238" package="Default">
        <name>setCredentialTreatment</name>
        <type>function</type>
        <docblock line="221">
          <description><![CDATA[setCredentialTreatment() - allows the developer to pass a parameterized string that is
used to transform or treat the input credential data.]]></description>
          <long-description><![CDATA[<p>In many cases, passwords and other sensitive data are encrypted, hashed, encoded,
obscured, or otherwise treated through some function or algorithm. By specifying a
parameterized treatment string with this method, a developer may apply arbitrary SQL
upon input credential data.</p>

<p>Examples:</p>

<p>'PASSWORD(?)'
 'MD5(?)'</p>]]></long-description>
          <tag line="221" name="param" description="" type="string" variable="$treatment">
            <type by_reference="false">string</type>
          </tag>
          <tag line="221" name="return" description="Provides a fluent interface" type="\Zend_Auth_Adapter_DbTable">
            <type by_reference="false">\Zend_Auth_Adapter_DbTable</type>
          </tag>
        </docblock>
        <argument line="238">
          <name>$treatment</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="250" package="Default">
        <name>setIdentity</name>
        <type>function</type>
        <docblock line="244">
          <description><![CDATA[setIdentity() - set the value to be used as the identity]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="244" name="param" description="" type="string" variable="$value">
            <type by_reference="false">string</type>
          </tag>
          <tag line="244" name="return" description="Provides a fluent interface" type="\Zend_Auth_Adapter_DbTable">
            <type by_reference="false">\Zend_Auth_Adapter_DbTable</type>
          </tag>
        </docblock>
        <argument line="250">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="263" package="Default">
        <name>setCredential</name>
        <type>function</type>
        <docblock line="256">
          <description><![CDATA[setCredential() - set the credential value to be used, optionally can specify a treatment
to be used, should be supplied in parameterized form, such as 'MD5(?)' or 'PASSWORD(?)']]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="256" name="param" description="" type="string" variable="$credential">
            <type by_reference="false">string</type>
          </tag>
          <tag line="256" name="return" description="Provides a fluent interface" type="\Zend_Auth_Adapter_DbTable">
            <type by_reference="false">\Zend_Auth_Adapter_DbTable</type>
          </tag>
        </docblock>
        <argument line="263">
          <name>$credential</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="277" package="Default">
        <name>setAmbiguityIdentity</name>
        <type>function</type>
        <docblock line="269">
          <description><![CDATA[setAmbiguityIdentity() - sets a flag for usage of identical identities
with unique credentials. It accepts integers (0, 1) or boolean (true,
false) parameters. Default is false.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="269" name="param" description="" type="int|bool" variable="$flag">
            <type by_reference="false">int</type>
            <type by_reference="false">bool</type>
          </tag>
          <tag line="269" name="return" description="" type="\Zend_Auth_Adapter_DbTable">
            <type by_reference="false">\Zend_Auth_Adapter_DbTable</type>
          </tag>
        </docblock>
        <argument line="277">
          <name>$flag</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="292" package="Default">
        <name>getAmbiguityIdentity</name>
        <type>function</type>
        <docblock line="286">
          <description><![CDATA[getAmbiguityIdentity() - returns TRUE for usage of multiple identical
identies with different credentials, FALSE if not used.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="286" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="302" package="Default">
        <name>getDbSelect</name>
        <type>function</type>
        <docblock line="297">
          <description><![CDATA[getDbSelect() - Return the preauthentication Db Select object for userland select query modification]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="297" name="return" description="" type="\Zend_Db_Select">
            <type by_reference="false">\Zend_Db_Select</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="318" package="Default">
        <name>getResultRowObject</name>
        <type>function</type>
        <docblock line="311">
          <description><![CDATA[getResultRowObject() - Returns the result row as a stdClass object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="311" name="param" description="" type="string|array" variable="$returnColumns">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="311" name="param" description="" type="string|array" variable="$omitColumns">
            <type by_reference="false">string</type>
            <type by_reference="false">array</type>
          </tag>
          <tag line="311" name="return" description="" type="\stdClass|boolean">
            <type by_reference="false">\stdClass</type>
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="318">
          <name>$returnColumns</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="318">
          <name>$omitColumns</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="365" package="Default">
        <name>authenticate</name>
        <type>function</type>
        <docblock line="356">
          <description><![CDATA[authenticate() - defined by Zend_Auth_Adapter_Interface.  This method is called to
attempt an authentication.  Previous to this call, this adapter would have already
been configured with all necessary information to successfully connect to a database
table and attempt to find a record matching the provided identity.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="356" name="throws" description="if answering the authentication query is impossible" type="\Zend_Auth_Adapter_Exception">
            <type by_reference="false">\Zend_Auth_Adapter_Exception</type>
          </tag>
          <tag line="356" name="return" description="" type="\Zend_Auth_Result">
            <type by_reference="false">\Zend_Auth_Result</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="398" package="Default">
        <name>_authenticateSetup</name>
        <type>function</type>
        <docblock line="390">
          <description><![CDATA[_authenticateSetup() - This method abstracts the steps involved with
making sure that this adapter was indeed setup properly with all
required pieces of information.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="390" name="throws" description="- in the event that setup was not done properly" type="\Zend_Auth_Adapter_Exception">
            <type by_reference="false">\Zend_Auth_Adapter_Exception</type>
          </tag>
          <tag line="390" name="return" description="" type="true">
            <type by_reference="false">true</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="437" package="Default">
        <name>_authenticateCreateSelect</name>
        <type>function</type>
        <docblock line="431">
          <description><![CDATA[_authenticateCreateSelect() - This method creates a Zend_Db_Select object that
is completely configured to be queried against the database.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="431" name="return" description="" type="\Zend_Db_Select">
            <type by_reference="false">\Zend_Db_Select</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="473" package="Default">
        <name>_authenticateQuerySelect</name>
        <type>function</type>
        <docblock line="464">
          <description><![CDATA[_authenticateQuerySelect() - This method accepts a Zend_Db_Select object and
performs a query against the database with that object.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="464" name="param" description="" type="\Zend_Db_Select" variable="$dbSelect">
            <type by_reference="false">\Zend_Db_Select</type>
          </tag>
          <tag line="464" name="throws" description="- when an invalid select object is encountered" type="\Zend_Auth_Adapter_Exception">
            <type by_reference="false">\Zend_Auth_Adapter_Exception</type>
          </tag>
          <tag line="464" name="return" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="473">
          <name>$dbSelect</name>
          <default><![CDATA[]]></default>
          <type>Zend_Db_Select</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="504" package="Default">
        <name>_authenticateValidateResultSet</name>
        <type>function</type>
        <docblock line="497">
          <description><![CDATA[_authenticateValidateResultSet() - This method attempts to make
certain that only one record was returned in the resultset]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="497" name="param" description="" type="array" variable="$resultIdentities">
            <type by_reference="false">array</type>
          </tag>
          <tag line="497" name="return" description="" type="true|\Zend_Auth_Result">
            <type by_reference="false">true</type>
            <type by_reference="false">\Zend_Auth_Result</type>
          </tag>
        </docblock>
        <argument line="504">
          <name>$resultIdentities</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="528" package="Default">
        <name>_authenticateValidateResult</name>
        <type>function</type>
        <docblock line="520">
          <description><![CDATA[_authenticateValidateResult() - This method attempts to validate that
the record in the resultset is indeed a record that matched the
identity provided to this adapter.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="520" name="param" description="" type="array" variable="$resultIdentity">
            <type by_reference="false">array</type>
          </tag>
          <tag line="520" name="return" description="" type="\Zend_Auth_Result">
            <type by_reference="false">\Zend_Auth_Result</type>
          </tag>
        </docblock>
        <argument line="528">
          <name>$resultIdentity</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="552" package="Default">
        <name>_authenticateCreateAuthResult</name>
        <type>function</type>
        <docblock line="546">
          <description><![CDATA[_authenticateCreateAuthResult() - Creates a Zend_Auth_Result object from
the information that has been collected during the authenticate() attempt.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="546" name="return" description="" type="\Zend_Auth_Result">
            <type by_reference="false">\Zend_Auth_Result</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Auth/Adapter/Ldap.php" hash="33c58608d52227b2843bb4eb5b82c062" package="Zend\Auth\Zend\Auth\Adapter">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Auth"/>
      <tag line="2" name="subpackage" description="Zend_Auth_Adapter"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Ldap.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <parse_markers>
      <critical line="28" code="50005">No short description for class Zend_Auth_Adapter_Ldap</critical>
    </parse_markers>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Auth/Adapter/Interface.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Auth_Adapter_Interface" refers="\Zend_Auth_Adapter_Interface"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="35" package="Zend\Auth\Zend\Auth\Adapter">
      <name>Zend_Auth_Adapter_Ldap</name>
      <full_name>\Zend_Auth_Adapter_Ldap</full_name>
      <extends/>
      <extends>\Zend_Auth_Adapter_Interface</extends>
      <docblock line="28">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="28" name="category" description="Zend"/>
        <tag line="28" name="package" description="Zend_Auth"/>
        <tag line="28" name="subpackage" description="Zend_Auth_Adapter"/>
        <tag line="28" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="28" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="43" package="Default">
        <name>$_ldap</name>
        <default><![CDATA[null]]></default>
        <docblock line="38">
          <description><![CDATA[The Zend_Ldap context.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="38" name="var" description="" type="\Zend_Ldap">
            <type by_reference="false">\Zend_Ldap</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="50" package="Default">
        <name>$_options</name>
        <default><![CDATA[null]]></default>
        <docblock line="45">
          <description><![CDATA[The array of arrays of Zend_Ldap options passed to the constructor.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="45" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="57" package="Default">
        <name>$_username</name>
        <default><![CDATA[null]]></default>
        <docblock line="52">
          <description><![CDATA[The username of the account being authenticated.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="52" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="64" package="Default">
        <name>$_password</name>
        <default><![CDATA[null]]></default>
        <docblock line="59">
          <description><![CDATA[The password of the account being authenticated.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="59" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="71" package="Default">
        <name>$_authenticatedDn</name>
        <default><![CDATA[null]]></default>
        <docblock line="66">
          <description><![CDATA[The DN of the authenticated account. Used to retrieve the account entry on request.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="66" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="81" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="73">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="73" name="param" description="An array of arrays of Zend_Ldap options" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="73" name="param" description="The username of the account being authenticated" type="string" variable="$username">
            <type by_reference="false">string</type>
          </tag>
          <tag line="73" name="param" description="The password of the account being authenticated" type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="73" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="81">
          <name>$options</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
        <argument line="81">
          <name>$username</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
        <argument line="81">
          <name>$password</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="97" package="Default">
        <name>getOptions</name>
        <type>function</type>
        <docblock line="92">
          <description><![CDATA[Returns the array of arrays of Zend_Ldap options of this adapter.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="92" name="return" description="" type="array|null">
            <type by_reference="false">array</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="109" package="Default">
        <name>setOptions</name>
        <type>function</type>
        <docblock line="102">
          <description><![CDATA[Sets the array of arrays of Zend_Ldap options to be used by
this adapter.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="102" name="param" description="The array of arrays of Zend_Ldap options" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="102" name="return" description="Provides a fluent interface" type="\Zend_Auth_Adapter_Ldap">
            <type by_reference="false">\Zend_Auth_Adapter_Ldap</type>
          </tag>
        </docblock>
        <argument line="109">
          <name>$options</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="121" package="Default">
        <name>getUsername</name>
        <type>function</type>
        <docblock line="115">
          <description><![CDATA[Returns the username of the account being authenticated, or
NULL if none is set.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="115" name="return" description="" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="132" package="Default">
        <name>setUsername</name>
        <type>function</type>
        <docblock line="126">
          <description><![CDATA[Sets the username for binding]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="126" name="param" description="The username for binding" type="string" variable="$username">
            <type by_reference="false">string</type>
          </tag>
          <tag line="126" name="return" description="Provides a fluent interface" type="\Zend_Auth_Adapter_Ldap">
            <type by_reference="false">\Zend_Auth_Adapter_Ldap</type>
          </tag>
        </docblock>
        <argument line="132">
          <name>$username</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="144" package="Default">
        <name>getPassword</name>
        <type>function</type>
        <docblock line="138">
          <description><![CDATA[Returns the password of the account being authenticated, or
NULL if none is set.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="138" name="return" description="" type="string|null">
            <type by_reference="false">string</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="155" package="Default">
        <name>setPassword</name>
        <type>function</type>
        <docblock line="149">
          <description><![CDATA[Sets the passwort for the account]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="149" name="param" description="The password of the account being authenticated" type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="149" name="return" description="Provides a fluent interface" type="\Zend_Auth_Adapter_Ldap">
            <type by_reference="false">\Zend_Auth_Adapter_Ldap</type>
          </tag>
        </docblock>
        <argument line="155">
          <name>$password</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="171" package="Default">
        <name>setIdentity</name>
        <type>function</type>
        <docblock line="161">
          <description><![CDATA[setIdentity() - set the identity (username) to be used]]></description>
          <long-description><![CDATA[<p>Proxies to {@see setUsername()}</p>

<p>Closes ZF-6813</p>]]></long-description>
          <tag line="161" name="param" description="" type="string" variable="$identity">
            <type by_reference="false">string</type>
          </tag>
          <tag line="161" name="return" description="Provides a fluent interface" type="\Zend_Auth_Adapter_Ldap">
            <type by_reference="false">\Zend_Auth_Adapter_Ldap</type>
          </tag>
        </docblock>
        <argument line="171">
          <name>$identity</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="186" package="Default">
        <name>setCredential</name>
        <type>function</type>
        <docblock line="176">
          <description><![CDATA[setCredential() - set the credential (password) value to be used]]></description>
          <long-description><![CDATA[<p>Proxies to {@see setPassword()}</p>

<p>Closes ZF-6813</p>]]></long-description>
          <tag line="176" name="param" description="" type="string" variable="$credential">
            <type by_reference="false">string</type>
          </tag>
          <tag line="176" name="return" description="Provides a fluent interface" type="\Zend_Auth_Adapter_Ldap">
            <type by_reference="false">\Zend_Auth_Adapter_Ldap</type>
          </tag>
        </docblock>
        <argument line="186">
          <name>$credential</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="196" package="Default">
        <name>getLdap</name>
        <type>function</type>
        <docblock line="191">
          <description><![CDATA[Returns the LDAP Object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="191" name="return" description="The Zend_Ldap object used to authenticate the credentials" type="\Zend_Ldap">
            <type by_reference="false">\Zend_Ldap</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="215" package="Default">
        <name>setLdap</name>
        <type>function</type>
        <docblock line="209">
          <description><![CDATA[Set an Ldap connection]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="209" name="param" description="An existing Ldap object" type="\Zend_Ldap" variable="$ldap">
            <type by_reference="false">\Zend_Ldap</type>
          </tag>
          <tag line="209" name="return" description="Provides a fluent interface" type="\Zend_Auth_Adapter_Ldap">
            <type by_reference="false">\Zend_Auth_Adapter_Ldap</type>
          </tag>
        </docblock>
        <argument line="215">
          <name>$ldap</name>
          <default><![CDATA[]]></default>
          <type>Zend_Ldap</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="230" package="Default">
        <name>_getAuthorityName</name>
        <type>function</type>
        <docblock line="224">
          <description><![CDATA[Returns a domain name for the current LDAP options. This is used
for skipping redundant operations (e.g. authentications).]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="224" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="245" package="Default">
        <name>authenticate</name>
        <type>function</type>
        <docblock line="239">
          <description><![CDATA[Authenticate the user]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="239" name="throws" description="" type="\Zend_Auth_Adapter_Exception">
            <type by_reference="false">\Zend_Auth_Adapter_Exception</type>
          </tag>
          <tag line="239" name="return" description="" type="\Zend_Auth_Result">
            <type by_reference="false">\Zend_Auth_Result</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="394" package="Default">
        <name>_prepareOptions</name>
        <type>function</type>
        <docblock line="387">
          <description><![CDATA[Sets the LDAP specific options on the Zend_Ldap instance]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="387" name="param" description="" type="\Zend_Ldap" variable="$ldap">
            <type by_reference="false">\Zend_Ldap</type>
          </tag>
          <tag line="387" name="param" description="" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="387" name="return" description="of auth-adapter specific options" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="394">
          <name>$ldap</name>
          <default><![CDATA[]]></default>
          <type>Zend_Ldap</type>
        </argument>
        <argument line="394">
          <name>$options</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="440" package="Default">
        <name>_checkGroupMembership</name>
        <type>function</type>
        <docblock line="431">
          <description><![CDATA[Checks the group membership of the bound user]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="431" name="param" description="" type="\Zend_Ldap" variable="$ldap">
            <type by_reference="false">\Zend_Ldap</type>
          </tag>
          <tag line="431" name="param" description="" type="string" variable="$canonicalName">
            <type by_reference="false">string</type>
          </tag>
          <tag line="431" name="param" description="" type="string" variable="$dn">
            <type by_reference="false">string</type>
          </tag>
          <tag line="431" name="param" description="" type="array" variable="$adapterOptions">
            <type by_reference="false">array</type>
          </tag>
          <tag line="431" name="return" description="" type="string|true">
            <type by_reference="false">string</type>
            <type by_reference="false">true</type>
          </tag>
        </docblock>
        <argument line="440">
          <name>$ldap</name>
          <default><![CDATA[]]></default>
          <type>Zend_Ldap</type>
        </argument>
        <argument line="440">
          <name>$canonicalName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="440">
          <name>$dn</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="440">
          <name>$adapterOptions</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="483" package="Default">
        <name>getAccountObject</name>
        <type>function</type>
        <docblock line="473">
          <description><![CDATA[getAccountObject() - Returns the result entry as a stdClass object]]></description>
          <long-description><![CDATA[<p>This resembles the feature {@see Zend_Auth_Adapter_DbTable::getResultRowObject()}.
Closes ZF-6813</p>]]></long-description>
          <tag line="473" name="param" description="" type="array" variable="$returnAttribs">
            <type by_reference="false">array</type>
          </tag>
          <tag line="473" name="param" description="" type="array" variable="$omitAttribs">
            <type by_reference="false">array</type>
          </tag>
          <tag line="473" name="return" description="" type="\stdClass|boolean">
            <type by_reference="false">\stdClass</type>
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="483">
          <name>$returnAttribs</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
        <argument line="483">
          <name>$omitAttribs</name>
          <default><![CDATA[array()]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="private" namespace="default" line="516" package="Default">
        <name>_optionsToString</name>
        <type>function</type>
        <docblock line="510">
          <description><![CDATA[Converts options to string]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="510" name="param" description="" type="array" variable="$options">
            <type by_reference="false">array</type>
          </tag>
          <tag line="510" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="516">
          <name>$options</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Auth/Adapter/Interface.php" hash="f32c767b40c00c18921fb8ac55fb6170" package="Zend\Auth\Zend\Auth\Adapter">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Auth"/>
      <tag line="2" name="subpackage" description="Zend_Auth_Adapter"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Interface.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <include line="27" type="Require Once" package="Default">
      <name>Zend/Auth/Result.php</name>
      <docblock line="24">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="24" name="see" description="\Zend_Auth_Result" refers="\Zend_Auth_Result"/>
      </docblock>
    </include>
    <interface namespace="default" line="37" package="Zend\Auth\Zend\Auth\Adapter">
      <name>Zend_Auth_Adapter_Interface</name>
      <full_name>\Zend_Auth_Adapter_Interface</full_name>
      <extends/>
      <docblock line="30">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="category" description="Zend"/>
        <tag line="30" name="package" description="Zend_Auth"/>
        <tag line="30" name="subpackage" description="Zend_Auth_Adapter"/>
        <tag line="30" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="30" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="45" package="Default">
        <name>authenticate</name>
        <type>function</type>
        <docblock line="39">
          <description><![CDATA[Performs an authentication attempt]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="39" name="throws" description="If authentication cannot be performed" type="\Zend_Auth_Adapter_Exception">
            <type by_reference="false">\Zend_Auth_Adapter_Exception</type>
          </tag>
          <tag line="39" name="return" description="" type="\Zend_Auth_Result">
            <type by_reference="false">\Zend_Auth_Result</type>
          </tag>
        </docblock>
      </method>
    </interface>
  </file>
  <file path="Zend/Auth/Adapter/Http/Resolver/Exception.php" hash="e24b871a9e9f200b49e1c4a41834e6c7" package="Zend\Auth\Zend\Auth\Adapter\Http">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Auth"/>
      <tag line="2" name="subpackage" description="Zend_Auth_Adapter_Http"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Exception.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <include line="27" type="Require Once" package="Default">
      <name>Zend/Auth/Exception.php</name>
      <docblock line="24">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="24" name="see" description="\Zend_Auth_Exception" refers="\Zend_Auth_Exception"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="39" package="Zend\Auth\Zend\Auth\Adapter\Http">
      <name>Zend_Auth_Adapter_Http_Resolver_Exception</name>
      <full_name>\Zend_Auth_Adapter_Http_Resolver_Exception</full_name>
      <extends>\Zend_Auth_Exception</extends>
      <docblock line="30">
        <description><![CDATA[HTTP Auth Resolver Exception]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="category" description="Zend"/>
        <tag line="30" name="package" description="Zend_Auth"/>
        <tag line="30" name="subpackage" description="Zend_Auth_Adapter_Http"/>
        <tag line="30" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="30" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
    </class>
  </file>
  <file path="Zend/Auth/Adapter/Http/Resolver/Interface.php" hash="613447e4bee7be36e05c98f5c2ada4ee" package="Zend\Auth\Zend\Auth\Adapter\Http">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Auth"/>
      <tag line="2" name="subpackage" description="Zend_Auth_Adapter_Http"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Interface.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <interface namespace="default" line="36" package="Zend\Auth\Zend\Auth\Adapter\Http">
      <name>Zend_Auth_Adapter_Http_Resolver_Interface</name>
      <full_name>\Zend_Auth_Adapter_Http_Resolver_Interface</full_name>
      <extends/>
      <docblock line="24">
        <description><![CDATA[Auth HTTP Resolver Interface]]></description>
        <long-description><![CDATA[<p>Defines an interace to resolve a username/realm combination into a shared
secret usable by HTTP Authentication.</p>]]></long-description>
        <tag line="24" name="category" description="Zend"/>
        <tag line="24" name="package" description="Zend_Auth"/>
        <tag line="24" name="subpackage" description="Zend_Auth_Adapter_Http"/>
        <tag line="24" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="24" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="46" package="Default">
        <name>resolve</name>
        <type>function</type>
        <docblock line="38">
          <description><![CDATA[Resolve username/realm to password/hash/etc.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="38" name="param" description="Username" type="string" variable="$username">
            <type by_reference="false">string</type>
          </tag>
          <tag line="38" name="param" description="Authentication Realm" type="string" variable="$realm">
            <type by_reference="false">string</type>
          </tag>
          <tag line="38" name="return" description="User's shared secret, if the user is found in the realm, false otherwise." type="string|false">
            <type by_reference="false">string</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="46">
          <name>$username</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="46">
          <name>$realm</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </interface>
  </file>
  <file path="Zend/Auth/Adapter/Http/Resolver/File.php" hash="7b5de85e7954c003f941046bb6f5f1e7" package="Zend\Auth\Zend\Auth\Adapter\Http">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Auth"/>
      <tag line="2" name="subpackage" description="Zend_Auth_Adapter_Http"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: File.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <include line="27" type="Require Once" package="Default">
      <name>Zend/Auth/Adapter/Http/Resolver/Interface.php</name>
      <docblock line="24">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="24" name="see" description="\Zend_Auth_Adapter_Http_Resolver_Interface" refers="\Zend_Auth_Adapter_Http_Resolver_Interface"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="39" package="Zend\Auth\Zend\Auth\Adapter\Http">
      <name>Zend_Auth_Adapter_Http_Resolver_File</name>
      <full_name>\Zend_Auth_Adapter_Http_Resolver_File</full_name>
      <extends/>
      <extends>\Zend_Auth_Adapter_Http_Resolver_Interface</extends>
      <docblock line="30">
        <description><![CDATA[HTTP Authentication File Resolver]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="30" name="category" description="Zend"/>
        <tag line="30" name="package" description="Zend_Auth"/>
        <tag line="30" name="subpackage" description="Zend_Auth_Adapter_Http"/>
        <tag line="30" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="30" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="46" package="Default">
        <name>$_file</name>
        <default><![CDATA[]]></default>
        <docblock line="41">
          <description><![CDATA[Path to credentials file]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="41" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="54" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="48">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="48" name="param" description="Complete filename where the credentials are stored" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="48" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="54">
          <name>$path</name>
          <default><![CDATA['']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="68" package="Default">
        <name>setFile</name>
        <type>function</type>
        <docblock line="61">
          <description><![CDATA[Set the path to the credentials file]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="61" name="param" description="" type="string" variable="$path">
            <type by_reference="false">string</type>
          </tag>
          <tag line="61" name="throws" description="" type="\Zend_Auth_Adapter_Http_Resolver_Exception">
            <type by_reference="false">\Zend_Auth_Adapter_Http_Resolver_Exception</type>
          </tag>
          <tag line="61" name="return" description="Provides a fluent interface" type="\Zend_Auth_Adapter_Http_Resolver_File">
            <type by_reference="false">\Zend_Auth_Adapter_Http_Resolver_File</type>
          </tag>
        </docblock>
        <argument line="68">
          <name>$path</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="87" package="Default">
        <name>getFile</name>
        <type>function</type>
        <docblock line="82">
          <description><![CDATA[Returns the path to the credentials file]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="82" name="return" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="113" package="Default">
        <name>resolve</name>
        <type>function</type>
        <docblock line="92">
          <description><![CDATA[Resolve credentials]]></description>
          <long-description><![CDATA[<p>Only the first matching username/realm combination in the file is
returned. If the file contains credentials for Digest authentication,
the returned string is the password hash, or h(a1) from RFC 2617. The
returned string is the plain-text password for Basic authentication.</p>

<p>The expected format of the file is:
  username:realm:sharedSecret</p>

<p>That is, each line consists of the user's username, the applicable
authentication realm, and the password or hash, each delimited by
colons.</p>]]></long-description>
          <tag line="92" name="param" description="Username" type="string" variable="$username">
            <type by_reference="false">string</type>
          </tag>
          <tag line="92" name="param" description="Authentication Realm" type="string" variable="$realm">
            <type by_reference="false">string</type>
          </tag>
          <tag line="92" name="throws" description="" type="\Zend_Auth_Adapter_Http_Resolver_Exception">
            <type by_reference="false">\Zend_Auth_Adapter_Http_Resolver_Exception</type>
          </tag>
          <tag line="92" name="return" description="User's shared secret, if the user is found in the realm, false otherwise." type="string|false">
            <type by_reference="false">string</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="113">
          <name>$username</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="113">
          <name>$realm</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Auth/Adapter/InfoCard.php" hash="76be6c242498995497da9ce922b9e7ed" package="Zend\Auth\Zend\Auth\Adapter">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Auth"/>
      <tag line="2" name="subpackage" description="Zend_Auth_Adapter"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: InfoCard.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <include line="26" type="Require Once" package="Default">
      <name>Zend/Auth/Adapter/Interface.php</name>
      <docblock line="23">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="23" name="see" description="\Zend_Auth_Adapter_Interface" refers="\Zend_Auth_Adapter_Interface"/>
      </docblock>
    </include>
    <include line="31" type="Require Once" package="Default">
      <name>Zend/Auth/Result.php</name>
      <docblock line="28">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="28" name="see" description="\Zend_Auth_Result" refers="\Zend_Auth_Result"/>
      </docblock>
    </include>
    <include line="36" type="Require Once" package="Default">
      <name>Zend/InfoCard.php</name>
      <docblock line="33">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="33" name="see" description="\Zend_InfoCard" refers="\Zend_InfoCard"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="48" package="Zend\Auth\Zend\Auth\Adapter">
      <name>Zend_Auth_Adapter_InfoCard</name>
      <full_name>\Zend_Auth_Adapter_InfoCard</full_name>
      <extends/>
      <extends>\Zend_Auth_Adapter_Interface</extends>
      <docblock line="38">
        <description><![CDATA[A Zend_Auth Authentication Adapter allowing the use of Information Cards as an
authentication mechanism]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="38" name="category" description="Zend"/>
        <tag line="38" name="package" description="Zend_Auth"/>
        <tag line="38" name="subpackage" description="Zend_Auth_Adapter"/>
        <tag line="38" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="38" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="55" package="Default">
        <name>$_xmlToken</name>
        <default><![CDATA[]]></default>
        <docblock line="50">
          <description><![CDATA[The XML Token being authenticated]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="50" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="62" package="Default">
        <name>$_infoCard</name>
        <default><![CDATA[]]></default>
        <docblock line="57">
          <description><![CDATA[The instance of Zend_InfoCard]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="57" name="var" description="" type="\Zend_InfoCard">
            <type by_reference="false">\Zend_InfoCard</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="70" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="64">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="64" name="param" description="The XML Token provided by the client" type="string" variable="$strXmlDocument">
            <type by_reference="false">string</type>
          </tag>
          <tag line="64" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="70">
          <name>$strXmlDocument</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="82" package="Default">
        <name>setAdapter</name>
        <type>function</type>
        <docblock line="76">
          <description><![CDATA[Sets the InfoCard component Adapter to use]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="76" name="param" description="" type="\Zend_InfoCard_Adapter_Interface" variable="$a">
            <type by_reference="false">\Zend_InfoCard_Adapter_Interface</type>
          </tag>
          <tag line="76" name="return" description="Provides a fluent interface" type="\Zend_Auth_Adapter_InfoCard">
            <type by_reference="false">\Zend_Auth_Adapter_InfoCard</type>
          </tag>
        </docblock>
        <argument line="82">
          <name>$a</name>
          <default><![CDATA[]]></default>
          <type>Zend_InfoCard_Adapter_Interface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="93" package="Default">
        <name>getAdapter</name>
        <type>function</type>
        <docblock line="88">
          <description><![CDATA[Retrieves the InfoCard component adapter being used]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="88" name="return" description="" type="\Zend_InfoCard_Adapter_Interface">
            <type by_reference="false">\Zend_InfoCard_Adapter_Interface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="103" package="Default">
        <name>getPKCipherObject</name>
        <type>function</type>
        <docblock line="98">
          <description><![CDATA[Retrieves the InfoCard public key cipher object being used]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="98" name="return" description="" type="\Zend_InfoCard_Cipher_PKI_Interface">
            <type by_reference="false">\Zend_InfoCard_Cipher_PKI_Interface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="114" package="Default">
        <name>setPKICipherObject</name>
        <type>function</type>
        <docblock line="108">
          <description><![CDATA[Sets the InfoCard public key cipher object to use]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="108" name="param" description="" type="\Zend_InfoCard_Cipher_PKI_Interface" variable="$cipherObj">
            <type by_reference="false">\Zend_InfoCard_Cipher_PKI_Interface</type>
          </tag>
          <tag line="108" name="return" description="Provides a fluent interface" type="\Zend_Auth_Adapter_InfoCard">
            <type by_reference="false">\Zend_Auth_Adapter_InfoCard</type>
          </tag>
        </docblock>
        <argument line="114">
          <name>$cipherObj</name>
          <default><![CDATA[]]></default>
          <type>Zend_InfoCard_Cipher_PKI_Interface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="125" package="Default">
        <name>getSymCipherObject</name>
        <type>function</type>
        <docblock line="120">
          <description><![CDATA[Retrieves the Symmetric cipher object being used]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="120" name="return" description="" type="\Zend_InfoCard_Cipher_Symmetric_Interface">
            <type by_reference="false">\Zend_InfoCard_Cipher_Symmetric_Interface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="136" package="Default">
        <name>setSymCipherObject</name>
        <type>function</type>
        <docblock line="130">
          <description><![CDATA[Sets the InfoCard symmetric cipher object to use]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="130" name="param" description="" type="\Zend_InfoCard_Cipher_Symmetric_Interface" variable="$cipherObj">
            <type by_reference="false">\Zend_InfoCard_Cipher_Symmetric_Interface</type>
          </tag>
          <tag line="130" name="return" description="Provides a fluent interface" type="\Zend_Auth_Adapter_InfoCard">
            <type by_reference="false">\Zend_Auth_Adapter_InfoCard</type>
          </tag>
        </docblock>
        <argument line="136">
          <name>$cipherObj</name>
          <default><![CDATA[]]></default>
          <type>Zend_InfoCard_Cipher_Symmetric_Interface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="149" package="Default">
        <name>removeCertificatePair</name>
        <type>function</type>
        <docblock line="142">
          <description><![CDATA[Remove a Certificate Pair by Key ID from the search list]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="142" name="param" description="The Certificate Key ID returned from adding the certificate pair" type="string" variable="$key_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="142" name="throws" description="" type="\Zend_InfoCard_Exception">
            <type by_reference="false">\Zend_InfoCard_Exception</type>
          </tag>
          <tag line="142" name="return" description="Provides a fluent interface" type="\Zend_Auth_Adapter_InfoCard">
            <type by_reference="false">\Zend_Auth_Adapter_InfoCard</type>
          </tag>
        </docblock>
        <argument line="149">
          <name>$key_id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="165" package="Default">
        <name>addCertificatePair</name>
        <type>function</type>
        <docblock line="155">
          <description><![CDATA[Add a Certificate Pair to the list of certificates searched by the component]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="155" name="param" description="The path to the private key file for the pair" type="string" variable="$private_key_file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="155" name="param" description="The path to the certificate / public key for the pair" type="string" variable="$public_key_file">
            <type by_reference="false">string</type>
          </tag>
          <tag line="155" name="param" description="(optional) The URI for the type of key pair this is (default RSA with OAEP padding)" type="string" variable="$type">
            <type by_reference="false">string</type>
          </tag>
          <tag line="155" name="param" description="(optional) The password for the private key file if necessary" type="string" variable="$password">
            <type by_reference="false">string</type>
          </tag>
          <tag line="155" name="throws" description="" type="\Zend_InfoCard_Exception">
            <type by_reference="false">\Zend_InfoCard_Exception</type>
          </tag>
          <tag line="155" name="return" description="A key ID representing this key pair in the component" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="165">
          <name>$private_key_file</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="165">
          <name>$public_key_file</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="165">
          <name>$type</name>
          <default><![CDATA[Zend_InfoCard_Cipher::ENC_RSA_OAEP_MGF1P]]></default>
          <type/>
        </argument>
        <argument line="165">
          <name>$password</name>
          <default><![CDATA[null]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="178" package="Default">
        <name>getCertificatePair</name>
        <type>function</type>
        <docblock line="170">
          <description><![CDATA[Return a Certificate Pair from a key ID]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="170" name="param" description="The Key ID of the certificate pair in the component" type="string" variable="$key_id">
            <type by_reference="false">string</type>
          </tag>
          <tag line="170" name="throws" description="" type="\Zend_InfoCard_Exception">
            <type by_reference="false">\Zend_InfoCard_Exception</type>
          </tag>
          <tag line="170" name="return" description="An array containing the path to the private/public key files, the type URI and the password if provided" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="178">
          <name>$key_id</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="189" package="Default">
        <name>setXmlToken</name>
        <type>function</type>
        <docblock line="183">
          <description><![CDATA[Set the XML Token to be processed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="183" name="param" description="The XML token to process" type="string" variable="$strXmlToken">
            <type by_reference="false">string</type>
          </tag>
          <tag line="183" name="return" description="Provides a fluent interface" type="\Zend_Auth_Adapter_InfoCard">
            <type by_reference="false">\Zend_Auth_Adapter_InfoCard</type>
          </tag>
        </docblock>
        <argument line="189">
          <name>$strXmlToken</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="200" package="Default">
        <name>getXmlToken</name>
        <type>function</type>
        <docblock line="195">
          <description><![CDATA[Get the XML Token being processed]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="195" name="return" description="The XML token to be processed" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="210" package="Default">
        <name>authenticate</name>
        <type>function</type>
        <docblock line="205">
          <description><![CDATA[Authenticates the XML token]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="205" name="return" description="The result of the authentication" type="\Zend_Auth_Result">
            <type by_reference="false">\Zend_Auth_Result</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="Zend/Auth/Adapter/Http.php" hash="53609506e3bcb5826c9677f3c6b38c73" package="Zend\Auth\Zend\Auth\Adapter\Http">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Auth"/>
      <tag line="2" name="subpackage" description="Zend_Auth_Adapter_Http"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Http.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <include line="27" type="Require Once" package="Default">
      <name>Zend/Auth/Adapter/Interface.php</name>
      <docblock line="24">
        <description><![CDATA[]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="24" name="see" description="\Zend_Auth_Adapter_Interface" refers="\Zend_Auth_Adapter_Interface"/>
      </docblock>
    </include>
    <class final="false" abstract="false" namespace="default" line="44" package="Zend\Auth\Zend\Auth\Adapter\Http">
      <name>Zend_Auth_Adapter_Http</name>
      <full_name>\Zend_Auth_Adapter_Http</full_name>
      <extends/>
      <extends>\Zend_Auth_Adapter_Interface</extends>
      <docblock line="30">
        <description><![CDATA[HTTP Authentication Adapter]]></description>
        <long-description><![CDATA[<p>Implements a pretty good chunk of RFC 2617.</p>]]></long-description>
        <tag line="30" name="category" description="Zend"/>
        <tag line="30" name="package" description="Zend_Auth"/>
        <tag line="30" name="subpackage" description="Zend_Auth_Adapter_Http"/>
        <tag line="30" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="30" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
        <tag line="30" name="todo" description="Support auth-int"/>
        <tag line="30" name="todo" description="Track nonces, nonce-count, opaque for replay protection and stale support"/>
        <tag line="30" name="todo" description="Support Authentication-Info header"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="51" package="Default">
        <name>$_request</name>
        <default><![CDATA[]]></default>
        <docblock line="46">
          <description><![CDATA[Reference to the HTTP Request object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="46" name="var" description="" type="\Zend_Controller_Request_Http">
            <type by_reference="false">\Zend_Controller_Request_Http</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="58" package="Default">
        <name>$_response</name>
        <default><![CDATA[]]></default>
        <docblock line="53">
          <description><![CDATA[Reference to the HTTP Response object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="53" name="var" description="" type="\Zend_Controller_Response_Http">
            <type by_reference="false">\Zend_Controller_Response_Http</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="65" package="Default">
        <name>$_basicResolver</name>
        <default><![CDATA[]]></default>
        <docblock line="60">
          <description><![CDATA[Object that looks up user credentials for the Basic scheme]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="60" name="var" description="" type="\Zend_Auth_Adapter_Http_Resolver_Interface">
            <type by_reference="false">\Zend_Auth_Adapter_Http_Resolver_Interface</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="72" package="Default">
        <name>$_digestResolver</name>
        <default><![CDATA[]]></default>
        <docblock line="67">
          <description><![CDATA[Object that looks up user credentials for the Digest scheme]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="67" name="var" description="" type="\Zend_Auth_Adapter_Http_Resolver_Interface">
            <type by_reference="false">\Zend_Auth_Adapter_Http_Resolver_Interface</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="79" package="Default">
        <name>$_supportedSchemes</name>
        <default><![CDATA[array('basic', 'digest')]]></default>
        <docblock line="74">
          <description><![CDATA[List of authentication schemes supported by this class]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="74" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="86" package="Default">
        <name>$_acceptSchemes</name>
        <default><![CDATA[]]></default>
        <docblock line="81">
          <description><![CDATA[List of schemes this class will accept from the client]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="81" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="93" package="Default">
        <name>$_domains</name>
        <default><![CDATA[]]></default>
        <docblock line="88">
          <description><![CDATA[Space-delimited list of protected domains for Digest Auth]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="88" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="100" package="Default">
        <name>$_realm</name>
        <default><![CDATA[]]></default>
        <docblock line="95">
          <description><![CDATA[The protection realm to use]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="95" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="107" package="Default">
        <name>$_nonceTimeout</name>
        <default><![CDATA[]]></default>
        <docblock line="102">
          <description><![CDATA[Nonce timeout period]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="102" name="var" description="" type="integer">
            <type by_reference="false">integer</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="114" package="Default">
        <name>$_useOpaque</name>
        <default><![CDATA[]]></default>
        <docblock line="109">
          <description><![CDATA[Whether to send the opaque value in the header. True by default]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="109" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="122" package="Default">
        <name>$_supportedAlgos</name>
        <default><![CDATA[array('MD5')]]></default>
        <docblock line="116">
          <description><![CDATA[List of the supported digest algorithms. I want to support both MD5 and
MD5-sess, but MD5-sess won't make it into the first version.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="116" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="129" package="Default">
        <name>$_algo</name>
        <default><![CDATA[]]></default>
        <docblock line="124">
          <description><![CDATA[The actual algorithm to use. Defaults to MD5]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="124" name="var" description="" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="137" package="Default">
        <name>$_supportedQops</name>
        <default><![CDATA[array('auth')]]></default>
        <docblock line="131">
          <description><![CDATA[List of supported qop options. My intetion is to support both 'auth' and
'auth-int', but 'auth-int' won't make it into the first version.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="131" name="var" description="" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="145" package="Default">
        <name>$_imaProxy</name>
        <default><![CDATA[]]></default>
        <docblock line="139">
          <description><![CDATA[Whether or not to do Proxy Authentication instead of origin server
authentication (send 407's instead of 401's). Off by default.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="139" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <property final="false" static="false" visibility="protected" line="152" package="Default">
        <name>$_ieNoOpaque</name>
        <default><![CDATA[]]></default>
        <docblock line="147">
          <description><![CDATA[Flag indicating the client is IE and didn't bother to return the opaque string]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="147" name="var" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="168" package="Default">
        <name>__construct</name>
        <type>function</type>
        <docblock line="154">
          <description><![CDATA[Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="154" name="param" description="Configuration settings: 'accept_schemes' =&gt; 'basic'|'digest'|'basic digest' 'realm' =&gt; &lt;string&gt; 'digest_domains' =&gt; &lt;string&gt; Space-delimited list of URIs 'nonce_timeout' =&gt; &lt;int&gt; 'use_opaque' =&gt; &lt;bool&gt; Whether to send the opaque value in the header 'alogrithm' =&gt; &lt;string&gt; See $_supportedAlgos. Default: MD5 'proxy_auth' =&gt; &lt;bool&gt; Whether to do authentication as a Proxy" type="array" variable="$config">
            <type by_reference="false">array</type>
          </tag>
          <tag line="154" name="throws" description="" type="\Zend_Auth_Adapter_Exception">
            <type by_reference="false">\Zend_Auth_Adapter_Exception</type>
          </tag>
          <tag line="154" name="return" description="" type="void">
            <type by_reference="false">void</type>
          </tag>
        </docblock>
        <argument line="168">
          <name>$config</name>
          <default><![CDATA[]]></default>
          <type>array</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="272" package="Default">
        <name>setBasicResolver</name>
        <type>function</type>
        <docblock line="266">
          <description><![CDATA[Setter for the _basicResolver property]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="266" name="param" description="" type="\Zend_Auth_Adapter_Http_Resolver_Interface" variable="$resolver">
            <type by_reference="false">\Zend_Auth_Adapter_Http_Resolver_Interface</type>
          </tag>
          <tag line="266" name="return" description="Provides a fluent interface" type="\Zend_Auth_Adapter_Http">
            <type by_reference="false">\Zend_Auth_Adapter_Http</type>
          </tag>
        </docblock>
        <argument line="272">
          <name>$resolver</name>
          <default><![CDATA[]]></default>
          <type>Zend_Auth_Adapter_Http_Resolver_Interface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="284" package="Default">
        <name>getBasicResolver</name>
        <type>function</type>
        <docblock line="279">
          <description><![CDATA[Getter for the _basicResolver property]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="279" name="return" description="" type="\Zend_Auth_Adapter_Http_Resolver_Interface">
            <type by_reference="false">\Zend_Auth_Adapter_Http_Resolver_Interface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="295" package="Default">
        <name>setDigestResolver</name>
        <type>function</type>
        <docblock line="289">
          <description><![CDATA[Setter for the _digestResolver property]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="289" name="param" description="" type="\Zend_Auth_Adapter_Http_Resolver_Interface" variable="$resolver">
            <type by_reference="false">\Zend_Auth_Adapter_Http_Resolver_Interface</type>
          </tag>
          <tag line="289" name="return" description="Provides a fluent interface" type="\Zend_Auth_Adapter_Http">
            <type by_reference="false">\Zend_Auth_Adapter_Http</type>
          </tag>
        </docblock>
        <argument line="295">
          <name>$resolver</name>
          <default><![CDATA[]]></default>
          <type>Zend_Auth_Adapter_Http_Resolver_Interface</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="307" package="Default">
        <name>getDigestResolver</name>
        <type>function</type>
        <docblock line="302">
          <description><![CDATA[Getter for the _digestResolver property]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="302" name="return" description="" type="\Zend_Auth_Adapter_Http_Resolver_Interface">
            <type by_reference="false">\Zend_Auth_Adapter_Http_Resolver_Interface</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="318" package="Default">
        <name>setRequest</name>
        <type>function</type>
        <docblock line="312">
          <description><![CDATA[Setter for the Request object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="312" name="param" description="" type="\Zend_Controller_Request_Http" variable="$request">
            <type by_reference="false">\Zend_Controller_Request_Http</type>
          </tag>
          <tag line="312" name="return" description="Provides a fluent interface" type="\Zend_Auth_Adapter_Http">
            <type by_reference="false">\Zend_Auth_Adapter_Http</type>
          </tag>
        </docblock>
        <argument line="318">
          <name>$request</name>
          <default><![CDATA[]]></default>
          <type>Zend_Controller_Request_Http</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="330" package="Default">
        <name>getRequest</name>
        <type>function</type>
        <docblock line="325">
          <description><![CDATA[Getter for the Request object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="325" name="return" description="" type="\Zend_Controller_Request_Http">
            <type by_reference="false">\Zend_Controller_Request_Http</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="341" package="Default">
        <name>setResponse</name>
        <type>function</type>
        <docblock line="335">
          <description><![CDATA[Setter for the Response object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="335" name="param" description="" type="\Zend_Controller_Response_Http" variable="$response">
            <type by_reference="false">\Zend_Controller_Response_Http</type>
          </tag>
          <tag line="335" name="return" description="Provides a fluent interface" type="\Zend_Auth_Adapter_Http">
            <type by_reference="false">\Zend_Auth_Adapter_Http</type>
          </tag>
        </docblock>
        <argument line="341">
          <name>$response</name>
          <default><![CDATA[]]></default>
          <type>Zend_Controller_Response_Http</type>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="353" package="Default">
        <name>getResponse</name>
        <type>function</type>
        <docblock line="348">
          <description><![CDATA[Getter for the Response object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="348" name="return" description="" type="\Zend_Controller_Response_Http">
            <type by_reference="false">\Zend_Controller_Response_Http</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="default" line="364" package="Default">
        <name>authenticate</name>
        <type>function</type>
        <docblock line="358">
          <description><![CDATA[Authenticate]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="358" name="throws" description="" type="\Zend_Auth_Adapter_Exception">
            <type by_reference="false">\Zend_Auth_Adapter_Exception</type>
          </tag>
          <tag line="358" name="return" description="" type="\Zend_Auth_Result">
            <type by_reference="false">\Zend_Auth_Result</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="433" package="Default">
        <name>_challengeClient</name>
        <type>function</type>
        <docblock line="425">
          <description><![CDATA[Challenge Client]]></description>
          <long-description><![CDATA[<p>Sets a 401 or 407 Unauthorized response code, and creates the
appropriate Authenticate header(s) to prompt for credentials.</p>]]></long-description>
          <tag line="425" name="return" description="Always returns a non-identity Auth result" type="\Zend_Auth_Result">
            <type by_reference="false">\Zend_Auth_Result</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="467" package="Default">
        <name>_basicHeader</name>
        <type>function</type>
        <docblock line="459">
          <description><![CDATA[Basic Header]]></description>
          <long-description><![CDATA[<p>Generates a Proxy- or WWW-Authenticate header value in the Basic
authentication scheme.</p>]]></long-description>
          <tag line="459" name="return" description="Authenticate header value" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="480" package="Default">
        <name>_digestHeader</name>
        <type>function</type>
        <docblock line="472">
          <description><![CDATA[Digest Header]]></description>
          <long-description><![CDATA[<p>Generates a Proxy- or WWW-Authenticate header value in the Digest
authentication scheme.</p>]]></long-description>
          <tag line="472" name="return" description="Authenticate header value" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="499" package="Default">
        <name>_basicAuth</name>
        <type>function</type>
        <docblock line="492">
          <description><![CDATA[Basic Authentication]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="492" name="param" description="Client's Authorization header" type="string" variable="$header">
            <type by_reference="false">string</type>
          </tag>
          <tag line="492" name="throws" description="" type="\Zend_Auth_Adapter_Exception">
            <type by_reference="false">\Zend_Auth_Adapter_Exception</type>
          </tag>
          <tag line="492" name="return" description="" type="\Zend_Auth_Result">
            <type by_reference="false">\Zend_Auth_Result</type>
          </tag>
        </docblock>
        <argument line="499">
          <name>$header</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="556" package="Default">
        <name>_digestAuth</name>
        <type>function</type>
        <docblock line="549">
          <description><![CDATA[Digest Authentication]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="549" name="param" description="Client's Authorization header" type="string" variable="$header">
            <type by_reference="false">string</type>
          </tag>
          <tag line="549" name="throws" description="" type="\Zend_Auth_Adapter_Exception">
            <type by_reference="false">\Zend_Auth_Adapter_Exception</type>
          </tag>
          <tag line="549" name="return" description="Valid auth result only on successful auth" type="\Zend_Auth_Result">
            <type by_reference="false">\Zend_Auth_Result</type>
          </tag>
        </docblock>
        <argument line="556">
          <name>$header</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="656" package="Default">
        <name>_calcNonce</name>
        <type>function</type>
        <docblock line="651">
          <description><![CDATA[Calculate Nonce]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="651" name="return" description="The nonce value" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="685" package="Default">
        <name>_calcOpaque</name>
        <type>function</type>
        <docblock line="673">
          <description><![CDATA[Calculate Opaque]]></description>
          <long-description><![CDATA[<p>The opaque string can be anything; the client must return it exactly as
it was sent. It may be useful to store data in this string in some
applications. Ideally, a new value for this would be generated each time
a WWW-Authenticate header is sent (in order to reduce predictability),
but we would have to be able to create the same exact value across at
least two separate requests from the same client.</p>]]></long-description>
          <tag line="673" name="return" description="The opaque value" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="697" package="Default">
        <name>_parseDigestAuth</name>
        <type>function</type>
        <docblock line="690">
          <description><![CDATA[Parse Digest Authorization header]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="690" name="param" description="Client's Authorization: HTTP header" type="string" variable="$header">
            <type by_reference="false">string</type>
          </tag>
          <tag line="690" name="return" description="Data elements from header, or false if any part of the header is invalid" type="array|false">
            <type by_reference="false">array</type>
            <type by_reference="false">false</type>
          </tag>
        </docblock>
        <argument line="697">
          <name>$header</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="protected" namespace="default" line="858" package="Default">
        <name>_secureStringCompare</name>
        <type>function</type>
        <docblock line="848">
          <description><![CDATA[Securely compare two strings for equality while avoided C level memcmp()
optimisations capable of leaking timing information useful to an attacker
attempting to iteratively guess the unknown string (e.g. password) being
compared against.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="848" name="param" description="" type="string" variable="$a">
            <type by_reference="false">string</type>
          </tag>
          <tag line="848" name="param" description="" type="string" variable="$b">
            <type by_reference="false">string</type>
          </tag>
          <tag line="848" name="return" description="" type="bool">
            <type by_reference="false">bool</type>
          </tag>
        </docblock>
        <argument line="858">
          <name>$a</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="858">
          <name>$b</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="Zend/Barcode.php" hash="673ef14b7720b305c9da385ab2ba4771" package="Zend\Barcode">
    <docblock line="2">
      <description><![CDATA[Zend Framework]]></description>
      <long-description><![CDATA[<p>LICENSE</p>

<p>This source file is subject to the new BSD license that is bundled
with this package in the file LICENSE.txt.
It is also available through the world-wide-web at this URL:
http://framework.zend.com/license/new-bsd
If you did not receive a copy of the license and are unable to
obtain it through the world-wide-web, please send an email
to license@zend.com so we can send you a copy immediately.</p>]]></long-description>
      <tag line="2" name="category" description="Zend"/>
      <tag line="2" name="package" description="Zend_Barcode"/>
      <tag line="2" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
      <tag line="2" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      <tag line="2" name="version" description="$Id: Barcode.php 23775 2011-03-01 17:25:24Z ralph $"/>
    </docblock>
    <class final="false" abstract="false" namespace="default" line="30" package="Zend\Barcode">
      <name>Zend_Barcode</name>
      <full_name>\Zend_Barcode</full_name>
      <extends/>
      <docblock line="22">
        <description><![CDATA[Class for generate Barcode]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="22" name="category" description="Zend"/>
        <tag line="22" name="package" description="Zend_Barcode"/>
        <tag line="22" name="copyright" description="Copyright (c) 2005-2011 Zend Technologies USA Inc. (http://www.zend.com)"/>
        <tag line="22" name="license" description="http://framework.zend.com/license/new-bsd     New BSD License"/>
      </docblock>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="57" package="Default">
        <name>factory</name>
        <type>function</type>
        <docblock line="32">
          <description><![CDATA[Factory for Zend_Barcode classes.]]></description>
          <long-description><![CDATA[<p>First argument may be a string containing the base of the adapter class
name, e.g. 'int25' corresponds to class Zend_Barcode_Object_Int25.  This
is case-insensitive.</p>

<p>First argument may alternatively be an object of type Zend_Config.
The barcode class base name is read from the 'barcode' property.
The barcode config parameters are read from the 'params' property.</p>

<p>Second argument is optional and may be an associative array of key-value
pairs.  This is used as the argument to the barcode constructor.</p>

<p>If the first argument is of type Zend_Config, it is assumed to contain
all parameters, and the second argument is ignored.</p>]]></long-description>
          <tag line="32" name="param" description="String name of barcode class, or Zend_Config object." type="mixed" variable="$barcode">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="32" name="param" description="String name of renderer class" type="mixed" variable="$renderer">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="32" name="param" description="OPTIONAL; an array or Zend_Config object with barcode parameters." type="mixed" variable="$barcodeConfig">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="32" name="param" description="OPTIONAL; an array or Zend_Config object with renderer parameters." type="mixed" variable="$rendererConfig">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="32" name="param" description="OPTIONAL; set the automatic rendering of exception" type="boolean" variable="$automaticRenderError">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="32" name="return" description="" type="\Zend_Barcode">
            <type by_reference="false">\Zend_Barcode</type>
          </tag>
          <tag line="32" name="throws" description="" type="\Zend_Barcode_Exception">
            <type by_reference="false">\Zend_Barcode_Exception</type>
          </tag>
        </docblock>
        <argument line="58">
          <name>$barcode</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="59">
          <name>$renderer</name>
          <default><![CDATA['image']]></default>
          <type/>
        </argument>
        <argument line="60">
          <name>$barcodeConfig</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
        <argument line="61">
          <name>$rendererConfig</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
        <argument line="62">
          <name>$automaticRenderError</name>
          <default><![CDATA[true]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="111" package="Default">
        <name>makeBarcode</name>
        <type>function</type>
        <docblock line="104">
          <description><![CDATA[Barcode Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="104" name="param" description="String name of barcode class, or Zend_Config object." type="mixed" variable="$barcode">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="104" name="param" description="OPTIONAL; an array or Zend_Config object with barcode parameters." type="mixed" variable="$barcodeConfig">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="104" name="return" description="" type="\Zend_Barcode_Object">
            <type by_reference="false">\Zend_Barcode_Object</type>
          </tag>
        </docblock>
        <argument line="111">
          <name>$barcode</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="111">
          <name>$barcodeConfig</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="210" package="Default">
        <name>makeRenderer</name>
        <type>function</type>
        <docblock line="203">
          <description><![CDATA[Renderer Constructor]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="203" name="param" description="String name of renderer class, or Zend_Config object." type="mixed" variable="$renderer">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="203" name="param" description="OPTIONAL; an array or Zend_Config object with renderer parameters." type="mixed" variable="$rendererConfig">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="203" name="return" description="" type="\Zend_Barcode_Renderer">
            <type by_reference="false">\Zend_Barcode_Renderer</type>
          </tag>
        </docblock>
        <argument line="210">
          <name>$renderer</name>
          <default><![CDATA['image']]></default>
          <type/>
        </argument>
        <argument line="210">
          <name>$rendererConfig</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="315" package="Default">
        <name>render</name>
        <type>function</type>
        <docblock line="307">
          <description><![CDATA[Proxy to renderer render() method]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="307" name="param" description="| Zend_Barcode_Object | array | Zend_Config $barcode" type="string" variable="$barcode">
            <type by_reference="false">string</type>
          </tag>
          <tag line="307" name="param" description="| Zend_Barcode_Renderer $renderer" type="string" variable="$renderer">
            <type by_reference="false">string</type>
          </tag>
          <tag line="307" name="param" description="| Zend_Config $barcodeConfig" type="array" variable="$barcodeConfig">
            <type by_reference="false">array</type>
          </tag>
          <tag line="307" name="param" description="| Zend_Config $rendererConfig" type="array" variable="$rendererConfig">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="316">
          <name>$barcode</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="317">
          <name>$renderer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="318">
          <name>$barcodeConfig</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
        <argument line="319">
          <name>$rendererConfig</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="333" package="Default">
        <name>draw</name>
        <type>function</type>
        <docblock line="324">
          <description><![CDATA[Proxy to renderer draw() method]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="324" name="param" description="| Zend_Barcode_Object | array | Zend_Config $barcode" type="string" variable="$barcode">
            <type by_reference="false">string</type>
          </tag>
          <tag line="324" name="param" description="| Zend_Barcode_Renderer $renderer" type="string" variable="$renderer">
            <type by_reference="false">string</type>
          </tag>
          <tag line="324" name="param" description="| Zend_Config $barcodeConfig" type="array" variable="$barcodeConfig">
            <type by_reference="false">array</type>
          </tag>
          <tag line="324" name="param" description="| Zend_Config $rendererConfig" type="array" variable="$rendererConfig">
            <type by_reference="false">array</type>
          </tag>
          <tag line="324" name="return" description="" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="334">
          <name>$barcode</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="335">
          <name>$renderer</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="336">
          <name>$barcodeConfig</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
        <argument line="337">
          <name>$rendererConfig</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="default" line="347" package="Default">
        <name>setBarcodeFont</name>
        <type>function</type>
        <docblock line="342">
          <description><![CDATA[Proxy for setBarcodeFont of Zend_Barcode_Object]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="342" name="param" description="" type="string" variable="$font">
            <type by_reference="false">string</type>
          </tag>
          <tag line="342" name="eturn" description="void"/>
        </docblock>
        <argument line="347">
          <name>$font</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <package name="Adapters">
    <package name="Auth"/>
    <package name="Cpu"/>
    <package name="Db"/>
    <package name="Files"/>
  </package>
  <package name="Default"/>
  <package name="Tests"/>
  <package name="Zend">
    <package name="Acl"/>
    <package name="Amf">
      <package name="Adobe"/>
      <package name="Auth"/>
      <package name="Parse">
        <package name="Amf0"/>
        <package name="Amf3"/>
      </package>
      <package name="Request"/>
      <package name="Response"/>
      <package name="Server"/>
      <package name="Util"/>
      <package name="Value"/>
    </package>
    <package name="Application">
      <package name="Bootstrap"/>
      <package name="Module"/>
      <package name="Resource"/>
    </package>
    <package name="Auth">
      <package name="Adapter"/>
      <package name="Storage"/>
      <package name="Zend">
        <package name="Auth">
          <package name="Adapter">
            <package name="Http"/>
          </package>
        </package>
      </package>
    </package>
    <package name="Barcode">
      <package name="Object"/>
      <package name="Renderer"/>
    </package>
    <package name="Cache">
      <package name="Zend">
        <package name="Cache">
          <package name="Backend"/>
          <package name="Frontend"/>
        </package>
      </package>
    </package>
    <package name="Config"/>
  </package>
  <namespace name="default"/>
  <marker>todo</marker>
  <marker>fixme</marker>
</project>
